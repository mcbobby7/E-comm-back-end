{"version":3,"sources":["./src/app/shares/common-resolvers/share-account-actions.resolver.ts","./src/app/shares/common-resolvers/share-account-and-template.resolver.ts","./src/app/shares/common-resolvers/share-account-view.resolver.ts","./src/app/shares/common-resolvers/shares-account-template.resolver.ts","./src/app/shares/create-shares-account/create-shares-account.component.ts","./src/app/shares/create-shares-account/create-shares-account.component.html","./src/app/shares/edit-shares-account/edit-shares-account.component.ts","./src/app/shares/edit-shares-account/edit-shares-account.component.html","./src/app/shares/shares-account-actions/activate-shares-account/activate-shares-account.component.ts","./src/app/shares/shares-account-actions/activate-shares-account/activate-shares-account.component.html","./src/app/shares/shares-account-actions/apply-shares/apply-shares.component.ts","./src/app/shares/shares-account-actions/apply-shares/apply-shares.component.html","./src/app/shares/shares-account-actions/approve-shares-account/approve-shares-account.component.ts","./src/app/shares/shares-account-actions/approve-shares-account/approve-shares-account.component.html","./src/app/shares/shares-account-actions/approve-shares/approve-share-dialog/approve-share-dialog.component.ts","./src/app/shares/shares-account-actions/approve-shares/approve-share-dialog/approve-share-dialog.component.html","./src/app/shares/shares-account-actions/approve-shares/approve-shares.component.ts","./src/app/shares/shares-account-actions/approve-shares/approve-shares.component.html","./src/app/shares/shares-account-actions/close-shares-account/close-shares-account.component.ts","./src/app/shares/shares-account-actions/close-shares-account/close-shares-account.component.html","./src/app/shares/shares-account-actions/redeem-shares/redeem-shares.component.ts","./src/app/shares/shares-account-actions/redeem-shares/redeem-shares.component.html","./src/app/shares/shares-account-actions/reject-shares-account/reject-shares-account.component.ts","./src/app/shares/shares-account-actions/reject-shares-account/reject-shares-account.component.html","./src/app/shares/shares-account-actions/reject-shares/reject-share-dialog/reject-share-dialog.component.ts","./src/app/shares/shares-account-actions/reject-shares/reject-share-dialog/reject-share-dialog.component.html","./src/app/shares/shares-account-actions/reject-shares/reject-shares.component.ts","./src/app/shares/shares-account-actions/reject-shares/reject-shares.component.html","./src/app/shares/shares-account-actions/shares-account-actions.component.ts","./src/app/shares/shares-account-actions/shares-account-actions.component.html","./src/app/shares/shares-account-actions/undo-approval-shares-account/undo-approval-shares-account.component.ts","./src/app/shares/shares-account-actions/undo-approval-shares-account/undo-approval-shares-account.component.html","./src/app/shares/shares-account-stepper/shares-account-charges-step/shares-account-charges-step.component.ts","./src/app/shares/shares-account-stepper/shares-account-charges-step/shares-account-charges-step.component.html","./src/app/shares/shares-account-stepper/shares-account-details-step/shares-account-details-step.component.ts","./src/app/shares/shares-account-stepper/shares-account-details-step/shares-account-details-step.component.html","./src/app/shares/shares-account-stepper/shares-account-preview-step/shares-account-preview-step.component.ts","./src/app/shares/shares-account-stepper/shares-account-preview-step/shares-account-preview-step.component.html","./src/app/shares/shares-account-stepper/shares-account-terms-step/shares-account-terms-step.component.ts","./src/app/shares/shares-account-stepper/shares-account-terms-step/shares-account-terms-step.component.html","./src/app/shares/shares-account-view/charges-tab/charges-tab.component.ts","./src/app/shares/shares-account-view/charges-tab/charges-tab.component.html","./src/app/shares/shares-account-view/dividends-tab/dividends-tab.component.ts","./src/app/shares/shares-account-view/dividends-tab/dividends-tab.component.html","./src/app/shares/shares-account-view/shares-account-view.component.ts","./src/app/shares/shares-account-view/shares-account-view.component.html","./src/app/shares/shares-account-view/shares-buttons.config.ts","./src/app/shares/shares-account-view/transactions-tab/transactions-tab.component.ts","./src/app/shares/shares-account-view/transactions-tab/transactions-tab.component.html","./src/app/shares/shares-routing.module.ts","./src/app/shares/shares.module.ts","./src/app/shares/shares.service.ts"],"names":[],"mappings":"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","file":"shares-shares-module.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/**\r\n * Shares Account Actions data resolver.\r\n */\r\n@Injectable()\r\nexport class ShareAccountActionsResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {sharesService} SharesService Shares service.\r\n   */\r\n  constructor(private sharesService: SharesService) { }\r\n\r\n  /**\r\n   * Returns the Shares account actions data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const actionName = route.paramMap.get('name');\r\n    const shareAccountId = route.paramMap.get('shareAccountId') || route.parent.parent.paramMap.get('shareAccountId');\r\n    switch (actionName) {\r\n      case 'Apply Additional Shares':\r\n      case 'Redeem Shares':\r\n      case 'Approve Additional Shares':\r\n      case 'Reject Additional Shares':\r\n        return this.sharesService.getSharesAccountData(shareAccountId, true);\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/**\r\n * Shares Account data and template resolver.\r\n */\r\n@Injectable()\r\nexport class SharesAccountAndTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SharesService} SharesService Shares service.\r\n   */\r\n  constructor(private sharesService: SharesService) { }\r\n\r\n  /**\r\n   * Returns the Shares Account data and template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const shareAccountId = route.paramMap.get('shareAccountId');\r\n    return this.sharesService.getSharesAccountData(shareAccountId, true);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/**\r\n * Shares Account data resolver.\r\n */\r\n@Injectable()\r\nexport class SharesAccountViewResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SharesService} SharesService Shares service.\r\n   */\r\n  constructor(private sharesService: SharesService) { }\r\n\r\n  /**\r\n   * Returns the Shares Account data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const shareAccountId = route.paramMap.get('shareAccountId');\r\n    return this.sharesService.getSharesAccountData(shareAccountId, false);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/**\r\n * Shares Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class SharesAccountTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SharesService} SharesService Shares service.\r\n   */\r\n  constructor(private sharesService: SharesService) { }\r\n\r\n  /**\r\n   * Returns the Shares Account Template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const clientId = route.parent.parent.paramMap.get('clientId');\r\n    return this.sharesService.getSharesAccountTemplate(clientId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { SharesAccountDetailsStepComponent } from '../shares-account-stepper/shares-account-details-step/shares-account-details-step.component';\r\nimport { SharesAccountTermsStepComponent } from '../shares-account-stepper/shares-account-terms-step/shares-account-terms-step.component';\r\nimport { SharesAccountChargesStepComponent } from '../shares-account-stepper/shares-account-charges-step/shares-account-charges-step.component';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Create Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-shares-account',\r\n  templateUrl: './create-shares-account.component.html',\r\n  styleUrls: ['./create-shares-account.component.scss']\r\n})\r\nexport class CreateSharesAccountComponent {\r\n\r\n  /** Shares Account Template */\r\n  sharesAccountTemplate: any;\r\n  /** Shares Account Product Template */\r\n  sharesAccountProductTemplate: any;\r\n\r\n  /** Shares Account Details Step */\r\n  @ViewChild(SharesAccountDetailsStepComponent, { static: true }) sharesAccountDetailsStep: SharesAccountDetailsStepComponent;\r\n  /** Shares Account Terms Step */\r\n  @ViewChild(SharesAccountTermsStepComponent, { static: true }) sharesAccountTermsStep: SharesAccountTermsStepComponent;\r\n  /** Shares Account Charges Step */\r\n  @ViewChild(SharesAccountChargesStepComponent, { static: true }) sharesAccountChargesStep: SharesAccountChargesStepComponent;\r\n\r\n  /**\r\n   * Fetches shares account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private sharesService: SharesService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { sharesAccountTemplate: any }) => {\r\n      this.sharesAccountTemplate = data.sharesAccountTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets shares account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.sharesAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account details form.\r\n   */\r\n  get sharesAccountDetailsForm() {\r\n    return this.sharesAccountDetailsStep.sharesAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account terms form.\r\n   */\r\n  get sharesAccountTermsForm() {\r\n    return this.sharesAccountTermsStep.sharesAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks validity of overall shares account form.\r\n   */\r\n  get sharesAccountFormValid() {\r\n    return (\r\n      this.sharesAccountDetailsForm.valid &&\r\n      this.sharesAccountTermsForm.valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account object.\r\n   */\r\n  get sharesAccount() {\r\n    return {\r\n      ...this.sharesAccountDetailsStep.sharesAccountDetails,\r\n      ...this.sharesAccountTermsStep.sharesAccountTerms,\r\n      ...this.sharesAccountChargesStep.sharesAccountCharges\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a new share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const sharesAccount = {\r\n      ...this.sharesAccount,\r\n      clientId: this.sharesAccountTemplate.clientId,\r\n      charges: this.sharesAccount.charges.map((charge: any) => ({ chargeId: charge.chargeId, amount: charge.amount })),\r\n      applicationDate: this.datePipe.transform(this.sharesAccount.applicationDate, dateFormat),\r\n      submittedDate: this.datePipe.transform(this.sharesAccount.submittedDate, dateFormat),\r\n      unitPrice: this.sharesAccountTermsForm.get('unitPrice').value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.createSharesAccount(sharesAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #shareProductStepper>\r\n\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"sharesAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-shares-account-details-step\r\n        [sharesAccountTemplate]=\"sharesAccountTemplate\" \r\n        (sharesAccountProductTemplate)=\"setTemplate($event)\"\r\n      >\r\n      </mifosx-shares-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"sharesAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-shares-account-terms-step [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"></mifosx-shares-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-shares-account-charges-step\r\n        [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"\r\n        [sharesAccountTemplate]=\"sharesAccountTemplate\" \r\n        [currencyCode]=\"sharesAccountTermsForm.get('currencyCode')\"\r\n      >\r\n      </mifosx-shares-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step *ngIf=\"sharesAccountFormValid\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-shares-account-preview-step\r\n        [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"\r\n        [sharesAccountTemplate]=\"sharesAccountTemplate\"\r\n        [sharesAccountTermsForm]=\"sharesAccountTermsForm\"\r\n        [sharesAccount]=\"sharesAccount\"\r\n        (submit)=\"submit()\"\r\n      >\r\n      </mifosx-shares-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { SharesAccountDetailsStepComponent } from '../shares-account-stepper/shares-account-details-step/shares-account-details-step.component';\r\nimport { SharesAccountTermsStepComponent } from '../shares-account-stepper/shares-account-terms-step/shares-account-terms-step.component';\r\nimport { SharesAccountChargesStepComponent } from '../shares-account-stepper/shares-account-charges-step/shares-account-charges-step.component';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-shares-account',\r\n  templateUrl: './edit-shares-account.component.html',\r\n  styleUrls: ['./edit-shares-account.component.scss']\r\n})\r\nexport class EditSharesAccountComponent {\r\n\r\n  /** Shares Account and Template */\r\n  sharesAccountAndTemplate: any;\r\n  /** Shares Account Product Template */\r\n  sharesAccountProductTemplate: any;\r\n\r\n  /** Shares Account Details Step */\r\n  @ViewChild(SharesAccountDetailsStepComponent, { static: true }) sharesAccountDetailsStep: SharesAccountDetailsStepComponent;\r\n  /** Shares Account Terms Step */\r\n  @ViewChild(SharesAccountTermsStepComponent, { static: true }) sharesAccountTermsStep: SharesAccountTermsStepComponent;\r\n  /** Shares Account Charges Step */\r\n  @ViewChild(SharesAccountChargesStepComponent, { static: true }) sharesAccountChargesStep: SharesAccountChargesStepComponent;\r\n\r\n  /**\r\n   * Fetches shares account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private sharesService: SharesService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { sharesAccountAndTemplate: any }) => {\r\n      this.sharesAccountAndTemplate = data.sharesAccountAndTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets shares account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.sharesAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account details form.\r\n   */\r\n  get sharesAccountDetailsForm() {\r\n    return this.sharesAccountDetailsStep.sharesAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account terms form.\r\n   */\r\n  get sharesAccountTermsForm() {\r\n    return this.sharesAccountTermsStep.sharesAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks validity and pristinity of overall shares account form .\r\n   */\r\n  get sharesAccountFormValidAndNotPristine() {\r\n    return (\r\n      this.sharesAccountDetailsForm.valid &&\r\n      this.sharesAccountTermsForm.valid &&\r\n      (\r\n        !this.sharesAccountDetailsForm.pristine ||\r\n        !this.sharesAccountTermsForm.pristine ||\r\n        !this.sharesAccountChargesStep.pristine\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieves shares account object.\r\n   */\r\n  get sharesAccount() {\r\n    return {\r\n      ...this.sharesAccountDetailsStep.sharesAccountDetails,\r\n      ...this.sharesAccountTermsStep.sharesAccountTerms,\r\n      ...this.sharesAccountChargesStep.sharesAccountCharges\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Updates a share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const sharesAccount = {\r\n      ...this.sharesAccount,\r\n      clientId: this.sharesAccountAndTemplate.clientId,\r\n      charges: this.sharesAccount.charges.map((charge: any) => ({ chargeId: charge.chargeId, amount: charge.amount })),\r\n      applicationDate: this.datePipe.transform(this.sharesAccount.applicationDate, dateFormat),\r\n      submittedDate: this.datePipe.transform(this.sharesAccount.submittedDate, dateFormat),\r\n      unitPrice: this.sharesAccountTermsForm.get('unitPrice').value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.updateSharesAccount(this.sharesAccountAndTemplate.id , sharesAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #shareProductStepper>\r\n\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"sharesAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-shares-account-details-step\r\n        [sharesAccountTemplate]=\"sharesAccountAndTemplate\" \r\n        (sharesAccountProductTemplate)=\"setTemplate($event)\"\r\n      >\r\n      </mifosx-shares-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"sharesAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-shares-account-terms-step \r\n        [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"\r\n        [sharesAccountTemplate]=\"sharesAccountAndTemplate\">\r\n      </mifosx-shares-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-shares-account-charges-step\r\n        [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"\r\n        [sharesAccountTemplate]=\"sharesAccountAndTemplate\" \r\n        [currencyCode]=\"sharesAccountTermsForm.get('currencyCode')\"\r\n      >\r\n      </mifosx-shares-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step *ngIf=\"sharesAccountFormValidAndNotPristine\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-shares-account-preview-step\r\n        [sharesAccountProductTemplate]=\"sharesAccountProductTemplate\"\r\n        [sharesAccountTemplate]=\"sharesAccountAndTemplate\"\r\n        [sharesAccountTermsForm]=\"sharesAccountTermsForm\"\r\n        [sharesAccount]=\"sharesAccount\"\r\n        (submit)=\"submit()\"\r\n      >\r\n      </mifosx-shares-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Activate Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-activate-shares-account',\r\n  templateUrl: './activate-shares-account.component.html',\r\n  styleUrls: ['./activate-shares-account.component.scss']\r\n})\r\nexport class ActivateSharesAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Activate Share Account form. */\r\n  activateSharesAccountForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the activate shares form.\r\n   */\r\n  ngOnInit() {\r\n    this.createActivateSharesAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the activate shares account form.\r\n   */\r\n  createActivateSharesAccountForm() {\r\n    this.activateSharesAccountForm = this.formBuilder.group({\r\n      'activatedDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and activates the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevActivatedDate: Date = this.activateSharesAccountForm.value.activatedDate;\r\n    this.activateSharesAccountForm.patchValue({\r\n      activatedDate: this.datePipe.transform(prevActivatedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.activateSharesAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'activate', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"activateSharesAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n          <mat-form-field fxFlex>\r\n            <mat-label>Activated On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"activatedDatePicker\" required formControlName=\"activatedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"activatedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #activatedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"activateSharesAccountForm.controls.activatedDate.hasError('required')\">\r\n              Activated On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!activateSharesAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Apply Shares Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-apply-shares',\r\n  templateUrl: './apply-shares.component.html',\r\n  styleUrls: ['./apply-shares.component.scss']\r\n})\r\nexport class ApplySharesComponent implements OnInit {\r\n\r\n  /** Shares account data. */\r\n  sharesAccountData: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Apply Share Account form. */\r\n  applySharesForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n    this.route.data.subscribe((data: { shareAccountActionData: any }) => {\r\n      this.sharesAccountData = data.shareAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the apply shares form.\r\n   * Fetching data from service as action buttons malfunction\r\n   * in clients view upon using a common resolver.\r\n   */\r\n  ngOnInit() {\r\n    this.createApplySharesAccountForm();\r\n    this.applySharesForm.get('unitPrice').patchValue(this.sharesAccountData.currentMarketPrice || '');\r\n  }\r\n\r\n  /**\r\n   * Creates the apply shares form.\r\n   */\r\n  createApplySharesAccountForm() {\r\n    this.applySharesForm = this.formBuilder.group({\r\n      'requestedDate': ['', Validators.required],\r\n      'requestedShares': ['', Validators.required],\r\n      'unitPrice': [{value: '', disabled: true}]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and applies additional shares to the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRequestedDate: Date = this.applySharesForm.value.requestedDate;\r\n    this.applySharesForm.patchValue({\r\n      requestedDate: this.datePipe.transform(prevRequestedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.applySharesForm.value,\r\n      unitPrice: this.applySharesForm.get('unitPrice').value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'applyadditionalshares', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"applySharesForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Request Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"requestedDatePicker\" required formControlName=\"requestedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"requestedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #requestedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"applySharesForm.controls.requestedDate.hasError('required')\">\r\n              Request Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Total No. of Shares</mat-label>\r\n            <input matInput required formControlName=\"requestedShares\">\r\n            <mat-error *ngIf=\"applySharesForm.controls.requestedShares.hasError('required')\">\r\n              Requested Shares is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Today's Price</mat-label>\r\n            <input matInput required formControlName=\"unitPrice\">\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!applySharesForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-shares-account',\r\n  templateUrl: './approve-shares-account.component.html',\r\n  styleUrls: ['./approve-shares-account.component.scss']\r\n})\r\nexport class ApproveSharesAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Approve Share Account form. */\r\n  approveSharesAccountForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the approve shares form.\r\n   */\r\n  ngOnInit() {\r\n    this.createApproveSharesAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the approve shares account form.\r\n   */\r\n  createApproveSharesAccountForm() {\r\n    this.approveSharesAccountForm = this.formBuilder.group({\r\n      'approvedDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and approves the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevApprovedDate: Date = this.approveSharesAccountForm.value.approvedDate;\r\n    this.approveSharesAccountForm.patchValue({\r\n      approvedDate: this.datePipe.transform(prevApprovedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.approveSharesAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'approve', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"approveSharesAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"approvedDatePicker\" required formControlName=\"approvedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"approvedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #approvedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"approveSharesAccountForm.controls.approvedDate.hasError('required')\">\r\n              Approved On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!approveSharesAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Approve share dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-share-dialog',\r\n  templateUrl: './approve-share-dialog.component.html',\r\n  styleUrls: ['./approve-share-dialog.component.scss']\r\n})\r\nexport class ApproveShareDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data Provides a deleteContext.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<ApproveShareDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Approve Share</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to approve share with id: {{ data.shareId }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"accent\" [mat-dialog-close]=\"{ approve: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n/** Custom Dialogs */\r\nimport { ApproveShareDialogComponent } from './approve-share-dialog/approve-share-dialog.component';\r\n\r\n/** Custom Serices */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve shares component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-shares',\r\n  templateUrl: './approve-shares.component.html',\r\n  styleUrls: ['./approve-shares.component.scss']\r\n})\r\nexport class ApproveSharesComponent implements OnInit {\r\n\r\n  /** Shares account data. */\r\n  sharesAccountData: any;\r\n\r\n  /** Shares account Id */\r\n  accountId: any;\r\n  /** Shares account data. */\r\n  sharesData: any[];\r\n  /** Columns to be displayed in shares table. */\r\n  displayedColumns: string[] = ['transactionDate', 'totalShares', 'redeemedPrice', 'status', 'approve'];\r\n  /** Data source for shares table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /** Paginator for shares table. */\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  /** Sorter for shares table. */\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  /** Shares table reference */\r\n  @ViewChild('sharesTable', { static: true }) sharesTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private sharesService: SharesService,\r\n              private route: ActivatedRoute,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n    this.route.data.subscribe((data: { shareAccountActionData: any }) => {\r\n      this.sharesAccountData = data.shareAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the shares table.\r\n   */\r\n  ngOnInit() {\r\n    this.sharesData = this.sharesAccountData.purchasedShares\r\n    .filter((share: any) => share.status.value === 'Pending Approval');\r\n    this.setShares();\r\n  }\r\n\r\n  /**\r\n   * Initializes the data source, paginator and sorter for shares table.\r\n   */\r\n  setShares() {\r\n    this.dataSource = new MatTableDataSource(this.sharesData);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  /**\r\n   * Approves a share\r\n   * @param {any} id Share Id\r\n   */\r\n  approve(id: any) {\r\n    const approveSharesDialogRef = this.dialog.open(ApproveShareDialogComponent, {\r\n      data: { shareId: id }\r\n    });\r\n    approveSharesDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.approve) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const data = {\r\n          requestedShares: [{id}],\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.sharesService.executeSharesAccountCommand(this.accountId, 'approveadditionalshares', data).subscribe(() => {\r\n          const share = this.sharesData.find(element => element.id === id);\r\n          const index = this.sharesData.indexOf(share);\r\n          this.sharesData.splice(index, 1);\r\n          this.dataSource.data = this.sharesData;\r\n          this.sharesTableRef.renderRows();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n\r\n    <table #sharesTable mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.purchasedDate | date }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalShares\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Shares </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.numberOfShares }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"redeemedPrice\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purchased/Redeemed Price </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.purchasedPrice }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <td mat-cell *matCellDef=\"let share\">\r\n          <i class=\"fa fa-stop\" [ngClass]=\"share.status.code|statusLookup\" [matTooltip]=\"share.status.value\"></i>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"approve\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Confirm Approve </th>\r\n        <td mat-cell *matCellDef=\"let share\">\r\n          <button class=\"share-action-button\" mat-raised-button color=\"accent\" matTooltip=\"Approve Share\"\r\n            (click)=\"approve(share.id)\">\r\n            <i class=\"fa fa-check\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Close Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-close-shares-account',\r\n  templateUrl: './close-shares-account.component.html',\r\n  styleUrls: ['./close-shares-account.component.scss']\r\n})\r\nexport class CloseSharesAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Close Share Account form. */\r\n  closeSharesAccountForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the close shares form.\r\n   */\r\n  ngOnInit() {\r\n    this.createCloseSharesAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the close shares account form.\r\n   */\r\n  createCloseSharesAccountForm() {\r\n    this.closeSharesAccountForm = this.formBuilder.group({\r\n      'closedDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and closes the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevClosedDate: Date = this.closeSharesAccountForm.value.closedDate;\r\n    this.closeSharesAccountForm.patchValue({\r\n      closedDate: this.datePipe.transform(prevClosedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.closeSharesAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'close', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeSharesAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedDatePicker\" required formControlName=\"closedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeSharesAccountForm.controls.closedDate.hasError('required')\">\r\n              Closed On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!closeSharesAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Redeem Shares Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-redeem-shares',\r\n  templateUrl: './redeem-shares.component.html',\r\n  styleUrls: ['./redeem-shares.component.scss']\r\n})\r\nexport class RedeemSharesComponent implements OnInit {\r\n\r\n  /** Shares account data. */\r\n  sharesAccountData: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Redeem Share Account form. */\r\n  redeemSharesForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n    this.route.data.subscribe((data: { shareAccountActionData: any }) => {\r\n      this.sharesAccountData = data.shareAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the apply shares form.\r\n   * Fetching data from service as action buttons malfunction\r\n   * in clients view upon using a common resolver.\r\n   */\r\n  ngOnInit() {\r\n    this.createRedeemSharesAccountForm();\r\n    this.redeemSharesForm.get('unitPrice').patchValue(this.sharesAccountData.currentMarketPrice || '');\r\n  }\r\n\r\n  /**\r\n   * Creates the apply shares form.\r\n   */\r\n  createRedeemSharesAccountForm() {\r\n    this.redeemSharesForm = this.formBuilder.group({\r\n      'requestedDate': ['', Validators.required],\r\n      'requestedShares': ['', Validators.required],\r\n      'unitPrice': [{value: '', disabled: true}]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and applies additional shares to the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRequestedDate: Date = this.redeemSharesForm.value.requestedDate;\r\n    this.redeemSharesForm.patchValue({\r\n      requestedDate: this.datePipe.transform(prevRequestedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.redeemSharesForm.value,\r\n      unitPrice: this.redeemSharesForm.get('unitPrice').value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'redeemshares', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"redeemSharesForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Request Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"requestedDatePicker\" required formControlName=\"requestedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"requestedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #requestedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"redeemSharesForm.controls.requestedDate.hasError('required')\">\r\n              Request Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Total No. of Shares</mat-label>\r\n            <input matInput required formControlName=\"requestedShares\">\r\n            <mat-error *ngIf=\"redeemSharesForm.controls.requestedShares.hasError('required')\">\r\n              Requested Shares is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Today's Price</mat-label>\r\n            <input matInput required formControlName=\"unitPrice\">\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!redeemSharesForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Reject Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-shares-account',\r\n  templateUrl: './reject-shares-account.component.html',\r\n  styleUrls: ['./reject-shares-account.component.scss']\r\n})\r\nexport class RejectSharesAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Reject Share Account form. */\r\n  rejectSharesAccountForm: FormGroup;\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the reject shares form.\r\n   */\r\n  ngOnInit() {\r\n    this.createRejectSharesAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the reject shares account form.\r\n   */\r\n  createRejectSharesAccountForm() {\r\n    this.rejectSharesAccountForm = this.formBuilder.group({\r\n      'rejectedDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and rejects the share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRejectedDate: Date = this.rejectSharesAccountForm.value.rejectedDate;\r\n    this.rejectSharesAccountForm.patchValue({\r\n      rejectedDate: this.datePipe.transform(prevRejectedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.rejectSharesAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'reject', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rejectSharesAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Rejected On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rejectedDatePicker\" required formControlName=\"rejectedDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rejectedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rejectedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rejectSharesAccountForm.controls.rejectedDate.hasError('required')\">\r\n              Rejected On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!rejectSharesAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Reject share dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-share-dialog',\r\n  templateUrl: './reject-share-dialog.component.html',\r\n  styleUrls: ['./reject-share-dialog.component.scss']\r\n})\r\nexport class RejectShareDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data Provides a deleteContext.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<RejectShareDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Reject Share</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to reject share with id: {{ data.shareId }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"{ reject: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n/** Custom Dialogs */\r\nimport { RejectShareDialogComponent } from './reject-share-dialog/reject-share-dialog.component';\r\n\r\n/** Custom Serices */\r\nimport { SharesService } from 'app/shares/shares.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Reject shares component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-shares',\r\n  templateUrl: './reject-shares.component.html',\r\n  styleUrls: ['./reject-shares.component.scss']\r\n})\r\nexport class RejectSharesComponent implements OnInit {\r\n\r\n  /** Shares account data. */\r\n  sharesAccountData: any;\r\n\r\n  /** Shares account Id */\r\n  accountId: any;\r\n  /** Shares account data. */\r\n  sharesData: any[];\r\n  /** Columns to be displayed in shares table. */\r\n  displayedColumns: string[] = ['transactionDate', 'totalShares', 'redeemedPrice', 'status', 'reject'];\r\n  /** Data source for shares table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /** Paginator for shares table. */\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  /** Sorter for shares table. */\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  /** Shares table reference */\r\n  @ViewChild('sharesTable', { static: true }) sharesTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private sharesService: SharesService,\r\n              private route: ActivatedRoute,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n    this.route.data.subscribe((data: { shareAccountActionData: any }) => {\r\n      this.sharesAccountData = data.shareAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the shares table.\r\n   */\r\n  ngOnInit() {\r\n    this.sharesData = this.sharesAccountData.purchasedShares\r\n    .filter((share: any) => share.status.value === 'Pending Approval');\r\n    this.setShares();\r\n  }\r\n\r\n  /**\r\n   * Initializes the data source, paginator and sorter for shares table.\r\n   */\r\n  setShares() {\r\n    this.dataSource = new MatTableDataSource(this.sharesData);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  /**\r\n   * Rejects a share\r\n   * @param {any} id Share Id\r\n   */\r\n  reject(id: any) {\r\n    const rejectSharesDialogRef = this.dialog.open(RejectShareDialogComponent, {\r\n      data: { shareId: id }\r\n    });\r\n    rejectSharesDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.reject) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const data = {\r\n          requestedShares: [{id}],\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.sharesService.executeSharesAccountCommand(this.accountId, 'rejectadditionalshares', data).subscribe(() => {\r\n          const share = this.sharesData.find(element => element.id === id);\r\n          const index = this.sharesData.indexOf(share);\r\n          this.sharesData.splice(index, 1);\r\n          this.dataSource.data = this.sharesData;\r\n          this.sharesTableRef.renderRows();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n\r\n    <table #sharesTable mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.purchasedDate | date }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalShares\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Shares </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.numberOfShares }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"redeemedPrice\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purchased/Redeemed Price </th>\r\n        <td mat-cell *matCellDef=\"let share\"> {{ share.purchasedPrice }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <td mat-cell *matCellDef=\"let share\">\r\n          <i class=\"fa fa-stop\" [ngClass]=\"share.status.code|statusLookup\" [matTooltip]=\"share.status.value\"></i>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"reject\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Confirm Reject </th>\r\n        <td mat-cell *matCellDef=\"let share\">\r\n          <button class=\"share-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Reject Share\"\r\n            (click)=\"reject(share.id)\">\r\n            <i class=\"fa fa-times\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/**\r\n * Shares Account Actions Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-actions',\r\n  templateUrl: './shares-account-actions.component.html',\r\n  styleUrls: ['./shares-account-actions.component.scss']\r\n})\r\nexport class SharesAccountActionsComponent {\r\n\r\n  /** Shares Account Data */\r\n  sharesAccountData: any;\r\n  /** Flag object to store possible actions and render appropriate UI to the user */\r\n  actions: {\r\n    'Approve': boolean\r\n    'Reject': boolean\r\n    'Close': boolean\r\n    'Activate': boolean\r\n    'Undo Approval': boolean\r\n    'Apply Additional Shares': boolean\r\n    'Redeem Shares': boolean\r\n    'Approve Additional Shares': boolean\r\n    'Reject Additional Shares': boolean\r\n  } = {\r\n    'Approve': false,\r\n    'Reject': false,\r\n    'Close': false,\r\n    'Activate': false,\r\n    'Undo Approval': false,\r\n    'Apply Additional Shares': false,\r\n    'Redeem Shares': false,\r\n    'Approve Additional Shares': false,\r\n    'Reject Additional Shares': false\r\n  };\r\n\r\n  /**\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    const name = this.route.snapshot.params['name'];\r\n    this.actions[name] = true;\r\n  }\r\n\r\n}\r\n","<mifosx-approve-shares-account *ngIf=\"actions['Approve']\"></mifosx-approve-shares-account>\r\n<mifosx-reject-shares-account *ngIf=\"actions['Reject']\"></mifosx-reject-shares-account>\r\n<mifosx-close-shares-account *ngIf=\"actions['Close']\"></mifosx-close-shares-account>\r\n<mifosx-activate-shares-account *ngIf=\"actions['Activate']\"></mifosx-activate-shares-account>\r\n<mifosx-undo-approval-shares-account *ngIf=\"actions['Undo Approval']\"></mifosx-undo-approval-shares-account>\r\n<mifosx-apply-shares *ngIf=\"actions['Apply Additional Shares']\"></mifosx-apply-shares>\r\n<mifosx-redeem-shares *ngIf=\"actions['Redeem Shares']\"></mifosx-redeem-shares>\r\n<mifosx-approve-shares *ngIf=\"actions['Approve Additional Shares']\"></mifosx-approve-shares>\r\n<mifosx-reject-shares *ngIf=\"actions['Reject Additional Shares']\"></mifosx-reject-shares>","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\n\r\n/**\r\n * Undo Approval Shares Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-approval-shares-account',\r\n  templateUrl: './undo-approval-shares-account.component.html',\r\n  styleUrls: ['./undo-approval-shares-account.component.scss']\r\n})\r\nexport class UndoApprovalSharesAccountComponent {\r\n\r\n  /** Shares Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   */\r\n  constructor(private sharesService: SharesService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.accountId = this.route.parent.snapshot.params['shareAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Submits the form and undo the approval of share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    this.sharesService.executeSharesAccountCommand(this.accountId, 'undoapproval', {}).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div>\r\n\r\n          <p class=\"mat-typography confirm-text\">\r\n            Are you sure you want to undo approval of shares account with ID: {{accountId}} ?\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, OnChanges, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n/** Custom Dialogs */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\n\r\n/**\r\n * Shares Account Charges Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-charges-step',\r\n  templateUrl: './shares-account-charges-step.component.html',\r\n  styleUrls: ['./shares-account-charges-step.component.scss']\r\n})\r\nexport class SharesAccountChargesStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Shares Account Product Template */\r\n  @Input() sharesAccountProductTemplate: any;\r\n  /** Shares Account Template */\r\n  @Input() sharesAccountTemplate: any;\r\n  /** Currency Code */\r\n  @Input() currencyCode: FormControl;\r\n\r\n  /** Charge Data */\r\n  chargeData: any = [];\r\n  /** Charges Data Source */\r\n  chargesDataSource: {}[] = [];\r\n  /** Component is pristine if there has been no changes by user interaction */\r\n  pristine = true;\r\n  /** For Edit Shares Account Form */\r\n  isChargesPatched = false;\r\n  /** Display columns for charges table */\r\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'action'];\r\n\r\n  /**\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   */\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.currencyCode.valueChanges.subscribe(() => {\r\n      if (!this.isChargesPatched && this.sharesAccountTemplate.charges) {\r\n        this.chargesDataSource = this.sharesAccountTemplate.charges;\r\n        this.isChargesPatched = true;\r\n      } else {\r\n        this.chargesDataSource = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.sharesAccountProductTemplate) {\r\n      this.chargeData = this.sharesAccountProductTemplate.charges;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds the charge to charges table\r\n   * @param {any} charge Charge\r\n   */\r\n  addCharge(charge: any) {\r\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\r\n    charge.value = '';\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits Charge Amount\r\n   * @param {any} charge Charge\r\n   */\r\n  editCharge(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount || charge.amountOrPercentage,\r\n        type: 'number',\r\n        required: false,\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, amount: response.data.value.amount };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Removes the charge from charges table\r\n   * @param {any} charge Charge\r\n   */\r\n  deleteCharge(charge: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge ${charge.name}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Returns shares account charges\r\n   */\r\n  get sharesAccountCharges() {\r\n    return { charges: this.chargesDataSource };\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n  <mat-form-field fxFlex=\"48%\">\r\n    <mat-label>Charge</mat-label>\r\n    <mat-select #charge>\r\n      <mat-option *ngFor=\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\" [value]=\"charge\">\r\n        {{ charge.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div fxFlex=\"48%\" fxFlexAlign=\"center\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addCharge(charge)\" [disabled]=\"!charge.value\">\r\n      <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;\r\n      Add\r\n    </button>\r\n  </div>\r\n\r\n  <table fxFlex=\"98%\" class=\"mat-elevation-z1\" mat-table [dataSource]=\"chargesDataSource\" [hidden]=\"chargesDataSource.length === 0\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeCalculationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeCalculationType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.amount || charge.amountOrPercentage }} \r\n        <button mat-icon-button color=\"primary\" (click)=\"editCharge(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeTimeType\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeTimeType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCharge(charge)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext>\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from 'app/shares/shares.service';\r\n\r\n/**\r\n * Shares Account Details Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-details-step',\r\n  templateUrl: './shares-account-details-step.component.html',\r\n  styleUrls: ['./shares-account-details-step.component.scss']\r\n})\r\nexport class SharesAccountDetailsStepComponent implements OnInit {\r\n\r\n  /** Shares Account Template */\r\n  @Input() sharesAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Product Data */\r\n  productData: any;\r\n  /** Shares Account Details Form */\r\n  sharesAccountDetailsForm: FormGroup;\r\n\r\n  /** Shares Account Template with product data  */\r\n  @Output() sharesAccountProductTemplate = new EventEmitter();\r\n\r\n  /**\r\n   * Sets share account details form.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {SharesService} sharesService Shares Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private sharesService: SharesService) {\r\n    this.createSharesAccountDetailsForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildDependencies();\r\n    if (this.sharesAccountTemplate) {\r\n      this.productData = this.sharesAccountTemplate.productOptions;\r\n      if (this.sharesAccountTemplate.productId) {\r\n        this.sharesAccountDetailsForm.patchValue({\r\n          'productId': this.sharesAccountTemplate.productId,\r\n          'submittedDate': this.sharesAccountTemplate.timeline.submittedOnDate && new Date(this.sharesAccountTemplate.timeline.submittedOnDate),\r\n          'externalId': this.sharesAccountTemplate.externalId\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates shares account details form.\r\n   */\r\n  createSharesAccountDetailsForm() {\r\n    this.sharesAccountDetailsForm = this.formBuilder.group({\r\n      'productId': ['', Validators.required],\r\n      'submittedDate': ['', Validators.required],\r\n      'externalId': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches shares account product template on productId value changes\r\n   */\r\n  buildDependencies() {\r\n    const clientId = this.sharesAccountTemplate.clientId;\r\n    this.sharesAccountDetailsForm.get('productId').valueChanges.subscribe((productId: string) => {\r\n      this.sharesService.getSharesAccountTemplate(clientId, productId).subscribe((response: any) => {\r\n        this.sharesAccountProductTemplate.emit(response);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns shares account form value.\r\n   */\r\n  get sharesAccountDetails() {\r\n    return this.sharesAccountDetailsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"sharesAccountDetailsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Product Name</mat-label>\r\n      <mat-select formControlName=\"productId\" required>\r\n        <mat-option *ngFor=\"let product of productData\" [value]=\"product.id\">\r\n          {{ product.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Product Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Submitted On</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"submittedOnDatePicker\" \r\n        formControlName=\"submittedDate\" required>\r\n      <mat-datepicker-toggle matSuffix [for]=\"submittedOnDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #submittedOnDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        Submission Date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>External ID</mat-label>\r\n      <input matInput formControlName=\"externalId\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Shares account preview step\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-preview-step',\r\n  templateUrl: './shares-account-preview-step.component.html',\r\n  styleUrls: ['./shares-account-preview-step.component.scss']\r\n})\r\nexport class SharesAccountPreviewStepComponent {\r\n\r\n  /** Shares Account Product Template */\r\n  @Input() sharesAccountProductTemplate: any;\r\n  /** Shares Account Template */\r\n  @Input() sharesAccountTemplate: any;\r\n  /** Shares Account Terms Form */\r\n  @Input() sharesAccountTermsForm: any;\r\n  /** Shares Account */\r\n  @Input() sharesAccount: any;\r\n\r\n  /** Display columns for charges table. */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\r\n\r\n  /** Form submission event */\r\n  @Output() submit = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Details</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Product</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.productId | find:sharesAccountTemplate.productOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Submitted On</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.submittedDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">External Id</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.externalId || 'Unassigned' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Terms</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccountTermsForm.get('currencyCode').value | find:[sharesAccountProductTemplate.currency]:'code':'displayLabel' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Decimal Places</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccountTermsForm.get('decimal').value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Total Number of Shares</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.requestedShares }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Today's Price</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccountTermsForm.get('unitPrice').value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency in multiples of</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccountTermsForm.get('currencyMultiple').value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Default Savings Account</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.savingsAccountId | find:sharesAccountProductTemplate.clientSavingsAccounts:'id':'accountNo' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"sharesAccount.minimumActivePeriod\">\r\n    <span fxFlex=\"40%\">Minimum Active Period</span>\r\n    <span fxFlex=\"60%\">{{sharesAccount.minimumActivePeriod}}&nbsp;{{sharesAccount.minimumActivePeriodFrequencyType | find:sharesAccountProductTemplate.minimumActivePeriodFrequencyTypeOptions:'id':'value'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"sharesAccount.lockinPeriodFrequency\">\r\n    <span fxFlex=\"40%\">Lock-in Period</span>\r\n    <span fxFlex=\"60%\">{{sharesAccount.lockinPeriodFrequency}}&nbsp;{{sharesAccount.lockinPeriodFrequencyType | find:sharesAccountProductTemplate.lockinPeriodFrequencyTypeOptions:'id':'value'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Application Date</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.applicationDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Allow dividends for inactive clients</span>\r\n    <span fxFlex=\"60%\">{{ sharesAccount.allowDividendCalculationForInactiveClients }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"sharesAccount.charges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Charges</h3>\r\n\r\n    <mat-divider fxFlexFill></mat-divider>\r\n\r\n    <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"sharesAccount.charges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeCalculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeCalculationType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.amount || charge.amountOrPercentage }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeTimeType\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeTimeType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button [routerLink]=\"['../']\">\r\n    Cancel\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"submit.emit()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/**\r\n * Shares Account Terms Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-terms-step',\r\n  templateUrl: './shares-account-terms-step.component.html',\r\n  styleUrls: ['./shares-account-terms-step.component.scss']\r\n})\r\nexport class SharesAccountTermsStepComponent implements OnChanges, OnInit {\r\n\r\n  /** Shares Account and Product Template */\r\n  @Input() sharesAccountProductTemplate: any;\r\n  /** [Optional] Shares Account Template */\r\n  @Input() sharesAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Shares Account Terms Form */\r\n  sharesAccountTermsForm: FormGroup;\r\n  /** Minimum Active Period Frequency Type Data */\r\n  minimumActivePeriodFrequencyTypeData: any;\r\n  /** Lockin Period Frequency Type Data */\r\n  lockinPeriodFrequencyTypeData: any;\r\n  /** Savings Accounts Data */\r\n  savingsAccountsData: any;\r\n  /** For Edit Shares Account Form */\r\n  isSavingsPatched = false;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createSharesAccountTermsForm();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.sharesAccountProductTemplate) {\r\n      this.sharesAccountTermsForm.patchValue({\r\n        'currencyCode': this.sharesAccountProductTemplate.currency.code,\r\n        'decimal': this.sharesAccountProductTemplate.currency.decimalPlaces,\r\n        'currencyMultiple': this.sharesAccountProductTemplate.currency.inMultiplesOf,\r\n        'unitPrice': this.sharesAccountProductTemplate.currentMarketPrice,\r\n        'savingsAccountId': ''\r\n      });\r\n      this.setOptions();\r\n      if (this.sharesAccountTemplate) {\r\n        if (!this.isSavingsPatched && this.sharesAccountTemplate.savingsAccountId) {\r\n          this.sharesAccountTermsForm.get('savingsAccountId').patchValue(this.sharesAccountTemplate.savingsAccountId);\r\n          this.isSavingsPatched = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.sharesAccountTemplate) {\r\n      this.sharesAccountTermsForm.patchValue({\r\n        'requestedShares': this.sharesAccountTemplate.summary.totalPendingForApprovalShares,\r\n        'minimumActivePeriod': this.sharesAccountTemplate.minimumActivePeriod,\r\n        'minimumActivePeriodFrequencyType': this.sharesAccountTemplate.minimumActivePeriod && this.sharesAccountTemplate.minimumActivePeriodTypeEnum.id,\r\n        'lockinPeriodFrequency': this.sharesAccountTemplate.lockinPeriod,\r\n        'lockinPeriodFrequencyType': this.sharesAccountTemplate.lockinPeriod && this.sharesAccountTemplate.lockPeriodTypeEnum.id,\r\n        'applicationDate': this.sharesAccountTemplate.purchasedShares[0].purchasedDate && new Date(this.sharesAccountTemplate.purchasedShares[0].purchasedDate),\r\n        'allowDividendCalculationForInactiveClients': this.sharesAccountTemplate.allowDividendCalculationForInactiveClients\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates shares account terms form.\r\n   */\r\n  createSharesAccountTermsForm() {\r\n    this.sharesAccountTermsForm = this.formBuilder.group({\r\n      'currencyCode': [{value: '', disabled: true}],\r\n      'decimal': [{value: '',  disabled: true}],\r\n      'requestedShares': ['', Validators.required],\r\n      'unitPrice': [{value: '',  disabled: true}],\r\n      'currencyMultiple': [{value: '', disabled: true}],\r\n      'savingsAccountId': ['', Validators.required],\r\n      'minimumActivePeriod': [''],\r\n      'minimumActivePeriodFrequencyType': [''],\r\n      'lockinPeriodFrequency': [''],\r\n      'lockinPeriodFrequencyType': [''],\r\n      'applicationDate': ['', Validators.required],\r\n      'allowDividendCalculationForInactiveClients': [false]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.minimumActivePeriodFrequencyTypeData = this.sharesAccountProductTemplate.minimumActivePeriodFrequencyTypeOptions;\r\n    this.lockinPeriodFrequencyTypeData = this.sharesAccountProductTemplate.lockinPeriodFrequencyTypeOptions;\r\n    this.savingsAccountsData = this.sharesAccountProductTemplate.clientSavingsAccounts;\r\n  }\r\n\r\n  /**\r\n   * Returns shares account terms form value.\r\n   */\r\n  get sharesAccountTerms() {\r\n    return this.sharesAccountTermsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"sharesAccountTermsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" fxLayoutAlign.gt-sm=\"start center\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency</mat-label>\r\n      <input matInput formControlName=\"currencyCode\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Decimal Places</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"decimal\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Total Number of Shares</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"requestedShares\" required>\r\n      <mat-error>\r\n        Total Number of Shares is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Today's Price</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"unitPrice\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency in multiples of</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"currencyMultiple\" >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Default Savings Account</mat-label>\r\n      <mat-select formControlName=\"savingsAccountId\" required>\r\n        <mat-option *ngFor=\"let account of savingsAccountsData\" [value]=\"account.id\">\r\n          {{ account.accountNo }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Default Savings Account is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Application Date</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"applicationDatePicker\" \r\n        formControlName=\"applicationDate\" required>\r\n      <mat-datepicker-toggle matSuffix [for]=\"applicationDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #applicationDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        Application Date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-checkbox labelPosition=\"before\" formControlName=\"allowDividendCalculationForInactiveClients\" fxFlex=\"48%\">\r\n      Allow dividends for inactive clients\r\n    </mat-checkbox>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Minimum Active Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minimumActivePeriod\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"minimumActivePeriodFrequencyType\">\r\n        <mat-option *ngFor=\"let minimumActivePeriodFrequencyType of minimumActivePeriodFrequencyTypeData\" [value]=\"minimumActivePeriodFrequencyType.id\">\r\n          {{ minimumActivePeriodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Lock-in Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"lockinPeriodFrequency\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"lockinPeriodFrequencyType\">\r\n        <mat-option *ngFor=\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\" [value]=\"lockinPeriodFrequencyType.id\">\r\n          {{ lockinPeriodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Charges Tab Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-charges-tab',\r\n  templateUrl: './charges-tab.component.html',\r\n  styleUrls: ['./charges-tab.component.scss']\r\n})\r\nexport class ChargesTabComponent implements OnInit {\r\n\r\n  /** Shares Account Data */\r\n  sharesAccountData: any;\r\n  /** Charges Data */\r\n  chargesData: any[];\r\n  /** Data source for charges table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'feeOrPenalty',\r\n    'paymentDueAt',\r\n    'calculationType',\r\n    'due',\r\n    'paid',\r\n    'waived',\r\n    'outstanding',\r\n  ];\r\n\r\n  /**\r\n   * Retrieves shares account aata from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { sharesAccountData: any }) => {\r\n      this.sharesAccountData = data.sharesAccountData;\r\n      this.chargesData = this.sharesAccountData.charges;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const activeCharges = this.chargesData ? this.chargesData.filter(charge => charge.isActive) : [];\r\n    this.dataSource = new MatTableDataSource(activeCharges);\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Charges</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"feeOrPenalty\">\r\n        <th mat-header-cell *matHeaderCellDef> Fee/Penalty </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.penalty === true ? 'Penalty' : 'Fee' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paymentDueAt\">\r\n        <th mat-header-cell *matHeaderCellDef> Payment Due At </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"calculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Calculation Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.chargeCalculationType.value}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"due\">\r\n        <th mat-header-cell *matHeaderCellDef> Due </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amount}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountPaid}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountWaived}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountOutstanding}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Dividends Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-dividends-tab',\r\n  templateUrl: './dividends-tab.component.html',\r\n  styleUrls: ['./dividends-tab.component.scss']\r\n})\r\nexport class DividendsTabComponent implements OnInit {\r\n\r\n  /** Shares Account Data */\r\n  shareAccountData: any;\r\n  /** Dividends Data */\r\n  dividendsData: any;\r\n  /** Data source for dividends table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Columns to be displayed in dividends table. */\r\n  displayedColumns: string[] = [\r\n    'transactionDate',\r\n    'amount',\r\n    'transactionReference',\r\n    'status'\r\n  ];\r\n\r\n  /**\r\n   * Retrieves shares account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { sharesAccountData: any }) => {\r\n      this.shareAccountData = data.sharesAccountData;\r\n      this.dividendsData = this.shareAccountData.dividends;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.dividendsData);\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Dividends</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let dividend\"> {{dividend.postedDate | date}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let dividend\"> {{shareAccountData.currency.displaySymbol}}&nbsp;{{dividend.amount}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionReference\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Reference </th>\r\n        <td mat-cell *matCellDef=\"let dividend\"> {{dividend.savingsTransactionId}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> status </th>\r\n        <td mat-cell *matCellDef=\"let dividend\"> {{dividend.status.value}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Custom Dialogs */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Services */\r\nimport { SharesService } from '../shares.service';\r\n\r\n/** Custom Buttons Configuration */\r\nimport { SharesButtonsConfiguration } from './shares-buttons.config';\r\n\r\n/**\r\n * Shares Account View\r\n */\r\n@Component({\r\n  selector: 'mifosx-shares-account-view',\r\n  templateUrl: './shares-account-view.component.html',\r\n  styleUrls: ['./shares-account-view.component.scss']\r\n})\r\nexport class SharesAccountViewComponent implements OnInit {\r\n\r\n  /** Shares Account Data */\r\n  sharesAccountData: any;\r\n  /** Button Configurations */\r\n  buttonConfig: SharesButtonsConfiguration;\r\n\r\n  /**\r\n   * Fetches shares account data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SharesService} sharesService Shares Service\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private sharesService: SharesService,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { sharesAccountData: any }) => {\r\n      this.sharesAccountData = data.sharesAccountData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setConditionalButtons();\r\n  }\r\n\r\n  /**\r\n   * Adds options to button config. conditionaly.\r\n   */\r\n  setConditionalButtons() {\r\n    const status = this.sharesAccountData.status.value;\r\n    this.buttonConfig = new SharesButtonsConfiguration(status);\r\n    if (this.sharesAccountData.charges) {\r\n      const charges: any[] = this.sharesAccountData.charges;\r\n      charges.forEach((charge: any) => {\r\n        if (charge.name === 'Annual fee - INR') {\r\n          this.buttonConfig.addOption({\r\n            name: 'Apply Anuual Fees',\r\n            taskPermissionName: 'APPLYANNUALFEE_SAVINGSACCOUNT'\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (status === 'Active') {\r\n      const purchasedShares: any[] = this.sharesAccountData.purchasedShares;\r\n      let sharesPendingForApproval = false;\r\n      purchasedShares.forEach((share: any) => {\r\n        if (share.status.code === 'purchasedSharesStatusType.applied' && share.type.code === 'purchasedSharesType.purchased') {\r\n          sharesPendingForApproval = true;\r\n        }\r\n      });\r\n      if (!sharesPendingForApproval) {\r\n        this.buttonConfig.removeButton('Approve Additional Shares');\r\n        this.buttonConfig.removeButton('Reject Additional Shares');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs button action\r\n   * @param {string} name Action name\r\n   */\r\n  doAction(name: string) {\r\n    switch (name) {\r\n      case 'Approve':\r\n      case 'Reject':\r\n      case 'Close':\r\n      case 'Activate':\r\n      case 'Undo Approval':\r\n      case 'Apply Additional Shares':\r\n      case 'Redeem Shares':\r\n      case 'Approve Additional Shares':\r\n      case 'Reject Additional Shares':\r\n        this.router.navigate([`actions/${name}`], { relativeTo: this.route });\r\n        break;\r\n      case 'Modify Application':\r\n        this.router.navigate(['edit'], { relativeTo: this.route });\r\n        break;\r\n      case 'Delete':\r\n        this.deleteSharesAccount();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes Shares Account.\r\n   */\r\n  private deleteSharesAccount() {\r\n    const deleteSharesAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `shares account with id: ${this.sharesAccountData.id}` }\r\n    });\r\n    deleteSharesAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.sharesService.deleteSharesAccount(this.sharesAccountData.id).subscribe(() => {\r\n          this.router.navigate(['../../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"shares-account-card\">\r\n\r\n  <mat-card-header fxLayout=\"column\" class=\"header\">\r\n\r\n    <mat-card-title-group class=\"header-title-group\">\r\n\r\n      <div class=\"profile-image-container\">\r\n        <div>\r\n          <img mat-card-md-image class=\"profile-image\"\r\n            matTooltip=\"Shares Account\"\r\n            src=\"assets/images/shares_account_placeholder.png\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-typography account-card-title\">\r\n        <mat-card-title>\r\n          <h3>\r\n            <i class=\"fa fa-stop\" [ngClass]=\"sharesAccountData.status.code | statusLookup\" [matTooltip]=\"sharesAccountData.status.value\"></i>\r\n              Account Name : {{sharesAccountData.productName}}\r\n          </h3>\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          <p>\r\n            Account #: {{sharesAccountData.accountNo}} | Client Name: {{sharesAccountData.clientName}}<br/>\r\n            Current Market Price: {{sharesAccountData.currency.displaySymbol}}&nbsp;{{sharesAccountData.currentMarketPrice}}<br/>\r\n            Lockin Period: {{sharesAccountData.lockinPeriod ? sharesAccountData.lockinPeriod : 'N/A'}} \r\n            {{sharesAccountData.lockinPeriod ? sharesAccountData.lockPeriodTypeEnum.value : ''}} \r\n          </p>\r\n        </mat-card-subtitle>\r\n      </div>\r\n\r\n    </mat-card-title-group>\r\n\r\n    <mat-card-actions class=\"account-actions\">\r\n\r\n      <ng-container *ngFor=\"let button of buttonConfig.singleButtons\">\r\n        <button mat-raised-button *mifosxHasPermission=\"button.taskPermissionName\" (click)=\"doAction(button.name)\">\r\n          <i class=\"{{button.icon}}\"></i> {{button.name}}</button>\r\n      </ng-container>\r\n  \r\n      <ng-container *ngIf=\"buttonConfig.options.length\">\r\n        <button mat-raised-button [matMenuTriggerFor]=\"More\">More</button>\r\n        <mat-menu #More=\"matMenu\">\r\n        <span *ngFor=\"let option of buttonConfig.options\">\r\n          <button mat-menu-item *mifosxHasPermission=\"option.taskPermissionName\" (click)=\"doAction(option.name)\">{{option.name}}</button>\r\n        </span>\r\n        </mat-menu>\r\n      </ng-container>\r\n  \r\n    </mat-card-actions>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content class=\"content\">\r\n\r\n    <div class=\"shares-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n\r\n      <div fxFlex=\"49%\">\r\n        <h4 class=\"table-headers\">Shares Details</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Activated On</td>\r\n              <td>{{sharesAccountData.timeline.activatedOnDate ? (sharesAccountData.timeline.activatedOnDate | date) : 'Not Activated'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Currency</td>\r\n              <td>{{sharesAccountData.currency.name}} [{{sharesAccountData.currency.code}}]</td>\r\n            </tr>\r\n            <tr>\r\n              <td>External Id</td>\r\n              <td>{{sharesAccountData.externalId ? sharesAccountData.externalId : 'Not Provided'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Linked Savings Account(Dividend Posting)</td>\r\n              <td>{{sharesAccountData.savingsAccountNumber ? sharesAccountData.savingsAccountNumber : 'Unassigned'}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\">\r\n        <h4 class=\"table-headers\">Account Summary</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Approved Shares</td>\r\n              <td>{{sharesAccountData.summary.totalApprovedShares}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Pending for Approval Shares</td>\r\n              <td>{{sharesAccountData.summary.totalPendingForApprovalShares}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <nav mat-tab-nav-bar class=\"navigation-tabs\">\r\n      <a mat-tab-link [routerLink]=\"['./transactions']\" routerLinkActive #transactions=\"routerLinkActive\"\r\n      [active]=\"transactions.isActive\" *mifosxHasPermission=\"'READ_SHAREACCOUNTPURCHASE'\">\r\n        Transactions\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./charges']\" routerLinkActive #charges=\"routerLinkActive\"\r\n      [active]=\"charges.isActive\" *mifosxHasPermission=\"'READ_SHAREACCOUNTCHARGE'\">\r\n        Charges\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./dividends']\" routerLinkActive #dividends=\"routerLinkActive\"\r\n      [active]=\"dividends.isActive\" *mifosxHasPermission=\"'READ_SHAREACCOUNTDIVIDENDS'\">\r\n        Dividends\r\n      </a>\r\n    </nav>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","/** Shares Account Buttons Configuration */\r\nexport class SharesButtonsConfiguration {\r\n\r\n  optionArray: {\r\n    name: string,\r\n    taskPermissionName: string,\r\n  }[];\r\n\r\n  buttonsArray: {\r\n    name: string,\r\n    icon: string,\r\n    taskPermissionName: string,\r\n  }[];\r\n\r\n  constructor(status: string) {\r\n    this.setOptions(status);\r\n    this.setButtons(status);\r\n  }\r\n\r\n  get singleButtons() {\r\n    return this.buttonsArray;\r\n  }\r\n\r\n  get options() {\r\n    return this.optionArray;\r\n  }\r\n\r\n  setButtons(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Apply Additional Shares',\r\n            icon: 'fa fa-arrow-right',\r\n            taskPermissionName: 'APPLYADDITIONAL_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Approve Additional Shares',\r\n            icon: 'fa fa-arrow-right',\r\n            taskPermissionName: 'APPROVEADDITIONAL_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Reject Additional Shares',\r\n            icon: 'fa fa-arrow-left',\r\n            taskPermissionName: 'REJECTADDITIONAL_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Redeem Shares',\r\n            icon: 'fa fa-arrow-left',\r\n            taskPermissionName: 'WITHDRAW_SAVINGSACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Modify Application',\r\n            icon: 'fa fa-pencil ',\r\n            taskPermissionName: 'UPDATE_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Approve',\r\n            icon: 'fa fa-check',\r\n            taskPermissionName: 'APPROVE_SHAREACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Undo Approval',\r\n            icon: 'fa fa-undo',\r\n            taskPermissionName: 'APPROVALUNDO_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Activate',\r\n            icon: 'fa fa-check',\r\n            taskPermissionName: 'ACTIVATE_SHAREACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      default:\r\n        this.buttonsArray = [];\r\n    }\r\n  }\r\n\r\n  setOptions(status: string) {\r\n    switch (status) {\r\n        case 'Active':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Close',\r\n            taskPermissionName: 'CLOSE_SHAREACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Reject',\r\n            taskPermissionName: 'REJECT_SHAREACCOUNT'\r\n          },\r\n          {\r\n            name: 'Delete',\r\n            taskPermissionName: 'DELETE_SHAREACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n      default:\r\n        this.optionArray = [];\r\n    }\r\n  }\r\n\r\n  addOption(option: {name: string, taskPermissionName: string}) {\r\n    this.optionArray.push(option);\r\n  }\r\n\r\n  removeButton(name: string) {\r\n    const buttonNames = this.buttonsArray.map(entry => entry.name);\r\n    const index = buttonNames.indexOf(name);\r\n    this.buttonsArray.splice(index, 1);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Transactions Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-transactions-tab',\r\n  templateUrl: './transactions-tab.component.html',\r\n  styleUrls: ['./transactions-tab.component.scss']\r\n})\r\nexport class TransactionsTabComponent implements OnInit {\r\n\r\n  /** Shares Account Data */\r\n  shareAccountData: any;\r\n  /** Transactions Data */\r\n  transactionsData: any;\r\n  /** Data source for transactions table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Columns to be displayed in transactions table. */\r\n  displayedColumns: string[] = [\r\n    'transactionDate',\r\n    'transactionType',\r\n    'totalShares',\r\n    'purchasedOrRedeemedPrice',\r\n    'chargeAmount',\r\n    'amountRecievedOrReturned'\r\n  ];\r\n\r\n  /**\r\n   * Retrieves shares account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { sharesAccountData: any }) => {\r\n      this.shareAccountData = data.sharesAccountData;\r\n      this.transactionsData = this.shareAccountData.purchasedShares;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.transactionsData);\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Transactions</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.purchasedDate | date}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionType\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Type </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.type.value}} {{transaction.type.value !== \"Charge Payment\" ? ('(' + transaction.status.value + ')') : ''}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"totalShares\">\r\n        <th mat-header-cell *matHeaderCellDef> Total Shares </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.numberOfShares}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"purchasedOrRedeemedPrice\">\r\n        <th mat-header-cell *matHeaderCellDef> Purhcased/Redeemed Price </th>\r\n        <td mat-cell *matCellDef=\"let transaction\">{{shareAccountData.currency.displaySymbol}}&nbsp;{{transaction.purchasedPrice}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeAmount\">\r\n        <th mat-header-cell *matHeaderCellDef> Charge Amount </th>\r\n        <td mat-cell *matCellDef=\"let transaction\">{{shareAccountData.currency.displaySymbol}}&nbsp;{{transaction.type.value === \"Charge Payment\" ? transaction.amount : transaction.chargeAmount}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amountRecievedOrReturned\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount Recieved/Returned </th>\r\n        <td mat-cell *matCellDef=\"let transaction\">{{shareAccountData.currency.displaySymbol}}&nbsp;{{transaction.amount}}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/** Translation Imports */\r\nimport { extract } from '../core/i18n/i18n.service';\r\n\r\n/** Custom Components */\r\nimport { SharesAccountViewComponent } from './shares-account-view/shares-account-view.component';\r\nimport { TransactionsTabComponent } from './shares-account-view/transactions-tab/transactions-tab.component';\r\nimport { ChargesTabComponent } from './shares-account-view/charges-tab/charges-tab.component';\r\nimport { DividendsTabComponent } from './shares-account-view/dividends-tab/dividends-tab.component';\r\nimport { CreateSharesAccountComponent } from './create-shares-account/create-shares-account.component';\r\nimport { EditSharesAccountComponent } from './edit-shares-account/edit-shares-account.component';\r\nimport { SharesAccountActionsComponent } from './shares-account-actions/shares-account-actions.component';\r\n\r\n/** Custom Resolvers */\r\nimport { SharesAccountViewResolver } from './common-resolvers/share-account-view.resolver';\r\nimport { ShareAccountActionsResolver } from './common-resolvers/share-account-actions.resolver';\r\nimport { SharesAccountTemplateResolver } from './common-resolvers/shares-account-template.resolver';\r\nimport { SharesAccountAndTemplateResolver } from './common-resolvers/share-account-and-template.resolver';\r\n\r\n/** Shares Routes */\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: { title: extract('Shares'), breadcrumb: 'Shares', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        data: { title: extract('Create Shares Account'), breadcrumb: 'Create Shares Account' },\r\n        component: CreateSharesAccountComponent,\r\n        resolve: {\r\n          sharesAccountTemplate: SharesAccountTemplateResolver\r\n        }\r\n      },\r\n      {\r\n        path: ':shareAccountId',\r\n        data: { title: extract('Shares Account View'), routeParamBreadcrumb: 'shareAccountId' },\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: SharesAccountViewComponent,\r\n            resolve: {\r\n              sharesAccountData: SharesAccountViewResolver\r\n            },\r\n            children: [\r\n              {\r\n                path: 'transactions',\r\n                component: TransactionsTabComponent,\r\n                data: { title: extract('Shares Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'charges',\r\n                component: ChargesTabComponent,\r\n                data: { title: extract('Shares Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'dividends',\r\n                component: DividendsTabComponent,\r\n                data: { title: extract('Shares Account Dividends'), breadcrumb: 'Dividends', routeParamBreadcrumb: false }\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'edit',\r\n            data: { title: extract('Edit Shares Account'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n            component: EditSharesAccountComponent,\r\n            resolve: {\r\n              sharesAccountAndTemplate: SharesAccountAndTemplateResolver\r\n            }\r\n          },\r\n          {\r\n            path: 'actions/:name',\r\n            data: { title: extract('Shares Account Actions'), breadcrumb: 'Actions', routeParamBreadcrumb: 'name' },\r\n            component: SharesAccountActionsComponent,\r\n            resolve: {\r\n              shareAccountActionData: ShareAccountActionsResolver\r\n            }\r\n          }\r\n        ]\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n/**\r\n * Shares Routinf Module\r\n */\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    SharesAccountViewResolver,\r\n    SharesAccountTemplateResolver,\r\n    SharesAccountAndTemplateResolver,\r\n    ShareAccountActionsResolver\r\n  ]\r\n})\r\nexport class SharesRoutingModule { }\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Modules */\r\nimport { SharesRoutingModule } from './shares-routing.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { DirectivesModule } from '../directives/directives.module';\r\nimport { SharesAccountViewComponent } from './shares-account-view/shares-account-view.component';\r\nimport { TransactionsTabComponent } from './shares-account-view/transactions-tab/transactions-tab.component';\r\nimport { DividendsTabComponent } from './shares-account-view/dividends-tab/dividends-tab.component';\r\nimport { ChargesTabComponent } from './shares-account-view/charges-tab/charges-tab.component';\r\nimport { CreateSharesAccountComponent } from './create-shares-account/create-shares-account.component';\r\nimport { SharesAccountDetailsStepComponent } from './shares-account-stepper/shares-account-details-step/shares-account-details-step.component';\r\nimport { SharesAccountTermsStepComponent } from './shares-account-stepper/shares-account-terms-step/shares-account-terms-step.component';\r\nimport { SharesAccountChargesStepComponent } from './shares-account-stepper/shares-account-charges-step/shares-account-charges-step.component';\r\nimport { SharesAccountPreviewStepComponent } from './shares-account-stepper/shares-account-preview-step/shares-account-preview-step.component';\r\nimport { EditSharesAccountComponent } from './edit-shares-account/edit-shares-account.component';\r\nimport { SharesAccountActionsComponent } from './shares-account-actions/shares-account-actions.component';\r\nimport { ApproveSharesAccountComponent } from './shares-account-actions/approve-shares-account/approve-shares-account.component';\r\nimport { RejectSharesAccountComponent } from './shares-account-actions/reject-shares-account/reject-shares-account.component';\r\nimport { CloseSharesAccountComponent } from './shares-account-actions/close-shares-account/close-shares-account.component';\r\nimport { ActivateSharesAccountComponent } from './shares-account-actions/activate-shares-account/activate-shares-account.component';\r\nimport { UndoApprovalSharesAccountComponent } from './shares-account-actions/undo-approval-shares-account/undo-approval-shares-account.component';\r\nimport { ApplySharesComponent } from './shares-account-actions/apply-shares/apply-shares.component';\r\nimport { RedeemSharesComponent } from './shares-account-actions/redeem-shares/redeem-shares.component';\r\nimport { ApproveSharesComponent } from './shares-account-actions/approve-shares/approve-shares.component';\r\nimport { ApproveShareDialogComponent } from './shares-account-actions/approve-shares/approve-share-dialog/approve-share-dialog.component';\r\nimport { RejectSharesComponent } from './shares-account-actions/reject-shares/reject-shares.component';\r\nimport { RejectShareDialogComponent } from './shares-account-actions/reject-shares/reject-share-dialog/reject-share-dialog.component';\r\n\r\n/**\r\n * Shares Module\r\n *\r\n * All components related to Shares functions should be declared here.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    PipesModule,\r\n    DirectivesModule,\r\n    SharesRoutingModule\r\n  ],\r\n  declarations: [\r\n    SharesAccountViewComponent,\r\n    TransactionsTabComponent,\r\n    DividendsTabComponent,\r\n    ChargesTabComponent,\r\n    CreateSharesAccountComponent,\r\n    SharesAccountDetailsStepComponent,\r\n    SharesAccountTermsStepComponent,\r\n    SharesAccountChargesStepComponent,\r\n    SharesAccountPreviewStepComponent,\r\n    EditSharesAccountComponent,\r\n    SharesAccountActionsComponent,\r\n    ApproveSharesAccountComponent,\r\n    RejectSharesAccountComponent,\r\n    CloseSharesAccountComponent,\r\n    ActivateSharesAccountComponent,\r\n    UndoApprovalSharesAccountComponent,\r\n    ApplySharesComponent,\r\n    RedeemSharesComponent,\r\n    ApproveSharesComponent,\r\n    ApproveShareDialogComponent,\r\n    RejectSharesComponent,\r\n    RejectShareDialogComponent\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class SharesModule { }\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Shares Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharesService {\r\n\r\n  /**\r\n   * @param {HttpClient} http Http Client\r\n   */\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * @param {string} accountId Shares Account Id of account to get data for.\r\n   * @param {boolean} template Shares account template required?.\r\n   * @returns {Observable<any>} Shares data.\r\n   */\r\n  getSharesAccountData(accountId: string, template: boolean): Observable<any> {\r\n    const httpParams = new HttpParams().set('template', template.toString());\r\n    return this.http.get(`/accounts/share/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} clientId Client Id assosciated with shares account.\r\n   * @param {string} productId Product Id\r\n   * @returns {Observable<any>} Shares account template.\r\n   */\r\n  getSharesAccountTemplate(clientId: string, productId?: string): Observable<any> {\r\n    let httpParams = new HttpParams().set('clientId', clientId);\r\n    httpParams = productId ? httpParams.set('productId', productId) : httpParams;\r\n    return this.http.get('/accounts/share/template', { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {any} sharesAccount Shares Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  createSharesAccount(sharesAccount: any): Observable<any> {\r\n    return this.http.post('/accounts/share', sharesAccount);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId: Shares account Id.\r\n   * @param {any} sharesAccount Shares Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  updateSharesAccount(accountId: string, sharesAccount: any): Observable<any> {\r\n    return this.http.put(`/accounts/share/${accountId}`, sharesAccount);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId shares account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteSharesAccount(accountId: string): Observable<any> {\r\n    return this.http.delete(`/accounts/share/${accountId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Shares Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @returns {Observable<any>} Shares data.\r\n   */\r\n  executeSharesAccountCommand(accountId: string, command: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/accounts/share/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}