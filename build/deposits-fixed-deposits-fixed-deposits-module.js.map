{"version":3,"sources":["./src/app/deposits/fixed-deposits/common-resolvers/fixed-deposit-account-actions.resolver.ts","./src/app/deposits/fixed-deposits/common-resolvers/fixed-deposit-account-and-template.resolver.ts","./src/app/deposits/fixed-deposits/common-resolvers/fixed-deposit-account-template.resolver.ts","./src/app/deposits/fixed-deposits/common-resolvers/fixed-deposit-account-transaction.resolver.ts","./src/app/deposits/fixed-deposits/common-resolvers/fixed-deposit-account-view.resolver.ts","./src/app/deposits/fixed-deposits/create-fixed-deposit-account/create-fixed-deposit-account.component.ts","./src/app/deposits/fixed-deposits/create-fixed-deposit-account/create-fixed-deposit-account.component.html","./src/app/deposits/fixed-deposits/edit-fixed-deposit-account/edit-fixed-deposit-account.component.ts","./src/app/deposits/fixed-deposits/edit-fixed-deposit-account/edit-fixed-deposit-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-charges-step/fixed-deposit-account-charges-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-charges-step/fixed-deposit-account-charges-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-currency-step/fixed-deposit-account-currency-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-currency-step/fixed-deposit-account-currency-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-details-step/fixed-deposit-account-details-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-details-step/fixed-deposit-account-details-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-interest-rate-chart-step/fixed-deposit-account-interest-rate-chart-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-interest-rate-chart-step/fixed-deposit-account-interest-rate-chart-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-preview-step/fixed-deposit-account-preview-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-preview-step/fixed-deposit-account-preview-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-settings-step/fixed-deposit-account-settings-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-settings-step/fixed-deposit-account-settings-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-terms-step/fixed-deposit-account-terms-step.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-stepper/fixed-deposit-account-terms-step/fixed-deposit-account-terms-step.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/charges-tab/charges-tab.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/charges-tab/charges-tab.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/datatable-tabs.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/datatable-tabs.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/multi-row/multi-row.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/multi-row/multi-row.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/single-row/single-row.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/datatable-tabs/single-row/single-row.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/fixed-deposit-account-view.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/fixed-deposit-account-view.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/fixed-deposits-buttons.config.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/standing-instructions-tab/standing-instructions-tab.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/standing-instructions-tab/standing-instructions-tab.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/transactions-tab/transactions-tab.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/transactions-tab/transactions-tab.component.html","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/view-transaction/view-transaction.component.ts","./src/app/deposits/fixed-deposits/fixed-deposit-account-view/view-transaction/view-transaction.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/activate-fixed-deposits-account/activate-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/activate-fixed-deposits-account/activate-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/add-charge-fixed-deposits-account/add-charge-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/add-charge-fixed-deposits-account/add-charge-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/approve-fixed-deposits-account/approve-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/approve-fixed-deposits-account/approve-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/close-fixed-deposits-account/close-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/close-fixed-deposits-account/close-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/fixed-deposits-account-actions.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/fixed-deposits-account-actions.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/premature-close-fixed-deposits-account/premature-close-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/premature-close-fixed-deposits-account/premature-close-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/reject-fixed-deposits-account/reject-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/reject-fixed-deposits-account/reject-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/undo-approval-fixed-deposits-account/undo-approval-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/undo-approval-fixed-deposits-account/undo-approval-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/withdraw-by-client-fixed-deposits-account/withdraw-by-client-fixed-deposits-account.component.ts","./src/app/deposits/fixed-deposits/fixed-deposits-account-actions/withdraw-by-client-fixed-deposits-account/withdraw-by-client-fixed-deposits-account.component.html","./src/app/deposits/fixed-deposits/fixed-deposits-routing.module.ts","./src/app/deposits/fixed-deposits/fixed-deposits.module.ts","./src/app/deposits/fixed-deposits/fixed-deposits.service.ts"],"names":[],"mappings":"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","file":"deposits-fixed-deposits-fixed-deposits-module.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account Actions data resolver.\r\n */\r\n@Injectable()\r\nexport class FixedDepositsAccountActionsResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service.\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n              private fixedDepositsService: FixedDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Fixed deposits account actions data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const actionName = route.paramMap.get('name');\r\n    const fixedDepositAccountId = route.paramMap.get('fixedDepositAccountId') || route.parent.parent.paramMap.get('fixedDepositAccountId');\r\n    switch (actionName) {\r\n      case 'Add Charge':\r\n        return this.savingsService.getSavingsChargeTemplateResource(fixedDepositAccountId);\r\n      case 'Close':\r\n        return this.fixedDepositsService.getFixedDepositsAccountClosureTemplate(fixedDepositAccountId);\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class FixedDepositsAccountAndTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits service.\r\n   */\r\n  constructor(private fixedDepositsService: FixedDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Fixed Deposits Account Template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const fixedDepositAccountId = route.paramMap.get('fixedDepositAccountId');\r\n    return this.fixedDepositsService.getFixedDepositsAccountAndTemplate(fixedDepositAccountId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class FixedDepositsAccountTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits service.\r\n   */\r\n  constructor(private fixedDepositsService: FixedDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Fixed Deposits Account Template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const clientId = route.parent.parent.paramMap.get('clientId');\r\n    return this.fixedDepositsService.getFixedDepositsAccountTemplate(clientId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account Transaction data resolver.\r\n */\r\n@Injectable()\r\nexport class FixedDepositsAccountTransactionResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {FixedDepositsService} fixedDepositsService Savings service.\r\n   */\r\n  constructor(private fixedDepositsService: FixedDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Fixed Deposits Account Transaction data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const fixedDepositAccountId = route.parent.paramMap.get('fixedDepositAccountId');\r\n    const transactionId = route.paramMap.get('id');\r\n    return this.fixedDepositsService.getFixedDepositsAccountTransaction(fixedDepositAccountId, transactionId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from 'app/deposits/fixed-deposits/fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account data resolver.\r\n */\r\n@Injectable()\r\nexport class FixedDepositsAccountViewResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits service.\r\n   */\r\n  constructor(private fixedDepositsService: FixedDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Fixed Deposits Account data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const fixedDepositAccountId = route.paramMap.get('fixedDepositAccountId');\r\n    return this.fixedDepositsService.getFixedDepositsAccountData(fixedDepositAccountId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Components */\r\nimport { FixedDepositAccountDetailsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-details-step/fixed-deposit-account-details-step.component';\r\nimport { FixedDepositAccountCurrencyStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-currency-step/fixed-deposit-account-currency-step.component';\r\nimport { FixedDepositAccountTermsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-terms-step/fixed-deposit-account-terms-step.component';\r\nimport { FixedDepositAccountSettingsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-settings-step/fixed-deposit-account-settings-step.component';\r\nimport { FixedDepositAccountChargesStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-charges-step/fixed-deposit-account-charges-step.component';\r\n\r\n/**\r\n * Create Fixed Deposit Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-fixed-deposit-account',\r\n  templateUrl: './create-fixed-deposit-account.component.html',\r\n  styleUrls: ['./create-fixed-deposit-account.component.scss']\r\n})\r\nexport class CreateFixedDepositAccountComponent {\r\n\r\n  /** Fixed Deposits Account Details Step */\r\n  @ViewChild(FixedDepositAccountDetailsStepComponent, { static: true }) fixedDepositsAccountDetailsStep: FixedDepositAccountDetailsStepComponent;\r\n  /** Fixed Deposits Account Currency Step */\r\n  @ViewChild(FixedDepositAccountCurrencyStepComponent, { static: true }) fixedDepositAccountCurrencyStep: FixedDepositAccountCurrencyStepComponent;\r\n  /** Fixed Deposits Account Terms Step */\r\n  @ViewChild(FixedDepositAccountTermsStepComponent, { static: true }) fixedDepositAccountTermsStep: FixedDepositAccountTermsStepComponent;\r\n  /** Fixed Deposits Account Settings Step */\r\n  @ViewChild(FixedDepositAccountSettingsStepComponent, { static: true }) fixedDepositAccountSettingsStep: FixedDepositAccountSettingsStepComponent;\r\n  /** Fixed Deposits Account Charges Step */\r\n  @ViewChild(FixedDepositAccountChargesStepComponent, { static: true }) fixedDepositAccountChargesStep: FixedDepositAccountChargesStepComponent;\r\n\r\n  /** Fixed Deposits Account Template */\r\n  fixedDepositsAccountTemplate: any;\r\n  /** Fixed Deposit Account Product Template */\r\n  fixedDepositsAccountProductTemplate: any;\r\n\r\n  /**\r\n   * Fetches FD account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountTemplate: any }) => {\r\n      this.fixedDepositsAccountTemplate = data.fixedDepositsAccountTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets fixed deposits account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.fixedDepositsAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Details Form Data\r\n   */\r\n  get fixedDepositAccountDetailsForm() {\r\n    return this.fixedDepositsAccountDetailsStep.fixedDepositAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Currency Form Data\r\n   */\r\n  get fixedDepositAccountCurrencyForm() {\r\n    return this.fixedDepositAccountCurrencyStep.fixedDepositAccountCurrencyForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Terms Form Data\r\n   */\r\n  get fixedDepositAccountTermsForm() {\r\n    return this.fixedDepositAccountTermsStep.fixedDepositAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Settings Form Data\r\n   */\r\n  get fixedDepositAccountSettingsForm() {\r\n    return this.fixedDepositAccountSettingsStep.fixedDepositAccountSettingsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks stepper validity.\r\n   */\r\n  get fixedDepositAccountFormValid() {\r\n    return (\r\n      this.fixedDepositAccountDetailsForm.valid &&\r\n      this.fixedDepositAccountTermsForm.valid &&\r\n      this.fixedDepositAccountSettingsForm.valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates the fixed deposit account object.\r\n   */\r\n  get fixedDepositAccount() {\r\n    return {\r\n      ...this.fixedDepositsAccountDetailsStep.fixedDepositAccountDetails,\r\n      ...this.fixedDepositAccountTermsStep.fixedDepositAccountTerms,\r\n      ...this.fixedDepositAccountSettingsStep.fixedDepositAccountSettings,\r\n      ...this.fixedDepositAccountChargesStep.fixedDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits the fixed deposit form and creates a new fixed deposit account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const fixedDepositAccount = {\r\n      ...this.fixedDepositAccount,\r\n      clientId: this.fixedDepositsAccountTemplate.clientId,\r\n      charges: this.fixedDepositAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n        feeOnMonthDay: charge.feeOnMonthDay && this.datePipe.transform([2000].concat(charge.feeOnMonthDay), monthDayFormat),\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      submittedOnDate: this.datePipe.transform(this.fixedDepositAccount.submittedOnDate, dateFormat),\r\n      charts: [{chartSlabs: this.fixedDepositsAccountProductTemplate.accountChart.chartSlabs}],\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.createFixedDepositAccount(fixedDepositAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #fixedDepositAccountStepper>\r\n    \r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-details-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        (fixedDepositsAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-fixed-deposit-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountDetailsForm.get('productId')\">\r\n\r\n      <ng-template matStepLabel>CURRENCY</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-currency-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-currency-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-terms-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountSettingsForm\">\r\n\r\n      <ng-template matStepLabel>SETTINGS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-settings-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-settings-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>INTEREST RATE CHART</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-interest-rate-chart-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-interest-rate-chart-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-charges-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\"\r\n        [fixedDepositAccountFormValid]=\"fixedDepositAccountFormValid\"\r\n        [currencyCode]=\"fixedDepositAccountCurrencyForm.get('currencyCode')\">\r\n      </mifosx-fixed-deposit-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"fixedDepositAccountFormValid\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-preview-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\"\r\n        [fixedDepositAccountData]=\"fixedDepositAccount\" (submit)=\"submit()\">\r\n      </mifosx-fixed-deposit-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Components */\r\nimport { FixedDepositAccountDetailsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-details-step/fixed-deposit-account-details-step.component';\r\nimport { FixedDepositAccountCurrencyStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-currency-step/fixed-deposit-account-currency-step.component';\r\nimport { FixedDepositAccountTermsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-terms-step/fixed-deposit-account-terms-step.component';\r\nimport { FixedDepositAccountSettingsStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-settings-step/fixed-deposit-account-settings-step.component';\r\nimport { FixedDepositAccountChargesStepComponent } from '../fixed-deposit-account-stepper/fixed-deposit-account-charges-step/fixed-deposit-account-charges-step.component';\r\n\r\n/**\r\n * Edit Fixed Deposit Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-fixed-deposit-account',\r\n  templateUrl: './edit-fixed-deposit-account.component.html',\r\n  styleUrls: ['./edit-fixed-deposit-account.component.scss']\r\n})\r\nexport class EditFixedDepositAccountComponent {\r\n\r\n  /** Fixed Deposits Account Details Step */\r\n  @ViewChild(FixedDepositAccountDetailsStepComponent, { static: true }) fixedDepositsAccountDetailsStep: FixedDepositAccountDetailsStepComponent;\r\n  /** Fixed Deposits Account Currency Step */\r\n  @ViewChild(FixedDepositAccountCurrencyStepComponent, { static: true }) fixedDepositAccountCurrencyStep: FixedDepositAccountCurrencyStepComponent;\r\n  /** Fixed Deposits Account Terms Step */\r\n  @ViewChild(FixedDepositAccountTermsStepComponent, { static: true }) fixedDepositAccountTermsStep: FixedDepositAccountTermsStepComponent;\r\n  /** Fixed Deposits Account Settings Step */\r\n  @ViewChild(FixedDepositAccountSettingsStepComponent, { static: true }) fixedDepositAccountSettingsStep: FixedDepositAccountSettingsStepComponent;\r\n  /** Fixed Deposits Account Charges Step */\r\n  @ViewChild(FixedDepositAccountChargesStepComponent, { static: true }) fixedDepositAccountChargesStep: FixedDepositAccountChargesStepComponent;\r\n\r\n  /** Fixed Deposits Account Template */\r\n  fixedDepositsAccountAndTemplate: any;\r\n  /** Fixed Deposit Account Product Template */\r\n  fixedDepositsAccountProductTemplate: any;\r\n\r\n  /**\r\n   * Fetches FD account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountAndTemplate: any }) => {\r\n      this.fixedDepositsAccountAndTemplate = data.fixedDepositsAccountAndTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets fixed deposits account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.fixedDepositsAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Details Form Data\r\n   */\r\n  get fixedDepositAccountDetailsForm() {\r\n    return this.fixedDepositsAccountDetailsStep.fixedDepositAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Currency Form Data\r\n   */\r\n  get fixedDepositAccountCurrencyForm() {\r\n    return this.fixedDepositAccountCurrencyStep.fixedDepositAccountCurrencyForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Terms Form Data\r\n   */\r\n  get fixedDepositAccountTermsForm() {\r\n    return this.fixedDepositAccountTermsStep.fixedDepositAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves Fixed Deposit Account Settings Form Data\r\n   */\r\n  get fixedDepositAccountSettingsForm() {\r\n    return this.fixedDepositAccountSettingsStep.fixedDepositAccountSettingsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks if stepper is valid and not pristine.\r\n   */\r\n  get fixedDepositAccountFormValidAndNotPristine() {\r\n    return (\r\n      this.fixedDepositAccountDetailsForm.valid &&\r\n      this.fixedDepositAccountTermsForm.valid &&\r\n      this.fixedDepositAccountSettingsForm.valid &&\r\n      (\r\n        !this.fixedDepositAccountDetailsForm.pristine ||\r\n        !this.fixedDepositAccountTermsForm.pristine ||\r\n        !this.fixedDepositAccountSettingsForm.pristine ||\r\n        !this.fixedDepositAccountChargesStep.pristine\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates the fixed deposit account object.\r\n   */\r\n  get fixedDepositAccount() {\r\n    return {\r\n      ...this.fixedDepositsAccountDetailsStep.fixedDepositAccountDetails,\r\n      ...this.fixedDepositAccountTermsStep.fixedDepositAccountTerms,\r\n      ...this.fixedDepositAccountSettingsStep.fixedDepositAccountSettings,\r\n      ...this.fixedDepositAccountChargesStep.fixedDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits the fixed deposit form and creates a new fixed deposit account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const fixedDepositAccount = {\r\n      ...this.fixedDepositAccount,\r\n      clientId: this.fixedDepositsAccountAndTemplate.clientId,\r\n      charges: this.fixedDepositAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n        feeOnMonthDay: charge.feeOnMonthDay && this.datePipe.transform([2000].concat(charge.feeOnMonthDay), monthDayFormat),\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      submittedOnDate: this.datePipe.transform(this.fixedDepositAccount.submittedOnDate, dateFormat),\r\n      charts: [{chartSlabs: this.fixedDepositsAccountProductTemplate.accountChart.chartSlabs}],\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.updateFixedDepositAccount(this.fixedDepositsAccountAndTemplate.id, fixedDepositAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #fixedDepositAccountStepper>\r\n\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-details-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        (fixedDepositsAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-fixed-deposit-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountDetailsForm.get('productId')\">\r\n\r\n      <ng-template matStepLabel>CURRENCY</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-currency-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-currency-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-terms-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"fixedDepositAccountSettingsForm\">\r\n\r\n      <ng-template matStepLabel>SETTINGS</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-settings-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-settings-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>INTEREST RATE CHART</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-interest-rate-chart-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\">\r\n      </mifosx-fixed-deposit-account-interest-rate-chart-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-charges-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\"\r\n        [fixedDepositAccountFormValid]=\"fixedDepositAccountFormValidAndNotPristine\"\r\n        [currencyCode]=\"fixedDepositAccountCurrencyForm.get('currencyCode')\">\r\n      </mifosx-fixed-deposit-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"fixedDepositAccountFormValidAndNotPristine\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-fixed-deposit-account-preview-step\r\n        [fixedDepositsAccountTemplate]=\"fixedDepositsAccountAndTemplate\"\r\n        [fixedDepositsAccountProductTemplate]=\"fixedDepositsAccountProductTemplate\"\r\n        [fixedDepositAccountData]=\"fixedDepositAccount\" (submit)=\"submit()\">\r\n      </mifosx-fixed-deposit-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Dialog Components */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Services */\r\nimport { DatePipe } from '@angular/common';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\n\r\n/**\r\n * Fixed Deposit Account Charges Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-charges-step',\r\n  templateUrl: './fixed-deposit-account-charges-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-charges-step.component.scss']\r\n})\r\nexport class FixedDepositAccountChargesStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Fixed deposits account template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed deposits account and product template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n  /** Validity of fixed depsits account form */\r\n  @Input() fixedDepositAccountFormValid: boolean;\r\n  /** Currency Code */\r\n  @Input() currencyCode: FormControl;\r\n\r\n  /** Charges Data */\r\n  chargeData: any;\r\n  /** Charges Data Source */\r\n  chargesDataSource: {}[] = [];\r\n  /** Charges table columns */\r\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery', 'action'];\r\n  /** For Edit Fixed Deposits Account Form */\r\n  isChargesPatched = false;\r\n  /** Component is pristine if there has been no changes by user interaction */\r\n  pristine = true;\r\n\r\n  /**\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(public dialog: MatDialog,\r\n              private datePipe: DatePipe,\r\n              private settingsService: SettingsService) { }\r\n\r\n  ngOnInit() {\r\n    this.currencyCode.valueChanges.subscribe(() => {\r\n      if (!this.isChargesPatched && this.fixedDepositsAccountTemplate.charges) {\r\n        this.chargesDataSource = this.fixedDepositsAccountTemplate.charges.map((charge: any) => ({...charge, id: charge.chargeId})) || [];\r\n        this.isChargesPatched = true;\r\n      } else {\r\n        this.chargesDataSource = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.chargeData = this.fixedDepositsAccountProductTemplate.chargeOptions;\r\n    }\r\n   }\r\n\r\n  /**\r\n   * Add a charge\r\n   */\r\n  addCharge(charge: any) {\r\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\r\n    charge.value = '';\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Amount\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeAmount(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount,\r\n        type: 'number',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Amount',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeAmountDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeAmountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, amount: response.data.value.amount };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Date\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeDate(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new DatepickerBase({\r\n        controlName: 'date',\r\n        label: 'Date',\r\n        value: charge.dueDate || charge.feeOnMonthDay || '',\r\n        type: 'datetime-local',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Date',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDateDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDateDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        let newCharge: any;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const date = this.datePipe.transform(response.data.value.date, dateFormat);\r\n        switch (charge.chargeTimeType.value) {\r\n          case 'Specified due date':\r\n          case 'Weekly Fee':\r\n            newCharge = { ...charge, dueDate: date };\r\n            break;\r\n          case 'Annual Fee':\r\n            newCharge = { ...charge, feeOnMonthDay: date };\r\n            break;\r\n        }\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Fee Interval\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeFeeInterval(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'feeInterval',\r\n        label: 'Fee Interval',\r\n        value: charge.feeInterval,\r\n        type: 'text',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Fee Interval',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeFeeIntervalDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeFeeIntervalDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, feeInterval: response.data.value.feeInterval };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Delete a particular charge\r\n   * @param charge Charge\r\n   */\r\n  deleteCharge(charge: any) {\r\n    this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\r\n    this.chargesDataSource = this.chargesDataSource.concat([]);\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Returns Fixed Deposits Account Charges Form\r\n   */\r\n  get fixedDepositAccountCharges() {\r\n    return { charges: this.chargesDataSource };\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n  <mat-form-field fxFlex=\"48%\">\r\n    <mat-label>Charge</mat-label>\r\n    <mat-select #charge>\r\n      <mat-option *ngFor=\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\"\r\n        [value]=\"charge\">\r\n        {{ charge.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div fxFlex=\"48%\" fxFlexAlign=\"center\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addCharge(charge)\" [disabled]=\"!charge.value\">\r\n      <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;\r\n      Add\r\n    </button>\r\n  </div>\r\n\r\n  <table fxFlex=\"98%\" class=\"mat-elevation-z1\" mat-table [dataSource]=\"chargesDataSource\" [hidden]=\"chargesDataSource.length === 0\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeCalculationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeCalculationType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.amount }}\r\n        <button mat-icon-button color=\"primary\" (click)=\"editChargeAmount(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeTimeType\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeTimeType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n          {{(charge.dueDate | date) || 'Unassigned*'}}\r\n        </span>\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n          {{charge.feeOnMonthDay ? ([2000].concat(charge.feeOnMonthDay) | date: 'dd MMMM') : 'Unassigned'}}\r\n        </span>\r\n        <span *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n          N/A\r\n        </span>\r\n        <button mat-icon-button color=\"primary\" *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                      || charge.chargeTimeType.value === 'Specified due date'\" (click)=\"editChargeDate(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"repaymentsEvery\">\r\n      <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.feeInterval || 'Not Provided' }}\r\n        <button mat-icon-button color=\"primary\"\r\n          *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Monthly Fee'\"\r\n          (click)=\"editChargeFeeInterval(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCharge(charge)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext [disabled]=\"!fixedDepositAccountFormValid\">\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n/**\r\n * Fixed Deposit Account Currency Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-currency-step',\r\n  templateUrl: './fixed-deposit-account-currency-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-currency-step.component.scss']\r\n})\r\nexport class FixedDepositAccountCurrencyStepComponent implements OnChanges {\r\n\r\n  /** Fixed deposits account template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed deposits account and product template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n\r\n  /** Fixed Deposit Account Currency Form */\r\n  fixedDepositAccountCurrencyForm: FormGroup;\r\n  /** Currency Data */\r\n  currencyData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createFixedDepositAccountCurrencyForm();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.fixedDepositAccountCurrencyForm.patchValue({\r\n        'currencyCode': this.fixedDepositsAccountProductTemplate.currency.code,\r\n        'decimalPlaces': this.fixedDepositsAccountProductTemplate.currency.decimalPlaces,\r\n        'currencyMultiple': this.fixedDepositsAccountProductTemplate.currency.inMultiplesOf\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates fd currency form.\r\n   */\r\n  createFixedDepositAccountCurrencyForm() {\r\n    this.fixedDepositAccountCurrencyForm = this.formBuilder.group({\r\n      'currencyCode': [{ value: '', disabled: true}],\r\n      'decimalPlaces': [{ value: '', disabled: true }],\r\n      'currencyMultiple': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"fixedDepositAccountCurrencyForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency</mat-label>\r\n      <input type=\"text\" matInput formControlName=\"currencyCode\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Decimal Places</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"decimalPlaces\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency Multiple</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"currencyMultiple\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../../fixed-deposits.service';\r\n\r\n/**\r\n * Fixed Deposits Account Details Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-details-step',\r\n  templateUrl: './fixed-deposit-account-details-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-details-step.component.scss']\r\n})\r\nexport class FixedDepositAccountDetailsStepComponent implements OnInit {\r\n\r\n  /** Fixed Deposits Account Template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Product Data */\r\n  productData: any;\r\n  /** Field Officer Data */\r\n  fieldOfficerData: any;\r\n  /** For edit savings form */\r\n  isFieldOfficerPatched = false;\r\n  /** Fixed Deposits Account Details Form */\r\n  fixedDepositAccountDetailsForm: FormGroup;\r\n\r\n  /** Fixed Deposits Account Template with product data  */\r\n  @Output() fixedDepositsAccountProductTemplate = new EventEmitter();\r\n\r\n  /**\r\n   * Sets fixed deposits account details form.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private fixedDepositsService: FixedDepositsService) {\r\n    this.createFixedDepositsAccountDetailsForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildDependencies();\r\n    if (this.fixedDepositsAccountTemplate) {\r\n      this.productData = this.fixedDepositsAccountTemplate.productOptions;\r\n      if (this.fixedDepositsAccountTemplate.depositProductId) {\r\n        this.fixedDepositAccountDetailsForm.patchValue({\r\n          'productId': this.fixedDepositsAccountTemplate.depositProductId,\r\n          'submittedOnDate': this.fixedDepositsAccountTemplate.timeline.submittedOnDate && new Date(this.fixedDepositsAccountTemplate.timeline.submittedOnDate)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates fixed deposits account details form.\r\n   */\r\n  createFixedDepositsAccountDetailsForm() {\r\n    this.fixedDepositAccountDetailsForm = this.formBuilder.group({\r\n      'productId': ['', Validators.required],\r\n      'submittedOnDate': ['', Validators.required],\r\n      'fieldOfficerId': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches fixed deposits account product template on productId value changes\r\n   */\r\n  buildDependencies() {\r\n    const clientId = this.fixedDepositsAccountTemplate.clientId;\r\n    this.fixedDepositAccountDetailsForm.get('productId').valueChanges.subscribe((productId: string) => {\r\n      this.fixedDepositsService.getFixedDepositsAccountTemplate(clientId, productId).subscribe((response: any) => {\r\n        this.fixedDepositsAccountProductTemplate.emit(response);\r\n        this.fieldOfficerData = response.fieldOfficerOptions;\r\n        if (!this.isFieldOfficerPatched && this.fixedDepositsAccountTemplate.fieldOfficerId) {\r\n          this.fixedDepositAccountDetailsForm.get('fieldOfficerId').patchValue(this.fixedDepositsAccountTemplate.fieldOfficerId);\r\n          this.isFieldOfficerPatched = true;\r\n        } else {\r\n          this.fixedDepositAccountDetailsForm.get('fieldOfficerId').patchValue('');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns fixed deposits account details form value.\r\n   */\r\n  get fixedDepositAccountDetails() {\r\n    const fixedDepositAccountDetails = this.fixedDepositAccountDetailsForm.value;\r\n    for (const key in fixedDepositAccountDetails) {\r\n      if (fixedDepositAccountDetails[key] === '') {\r\n        delete fixedDepositAccountDetails[key];\r\n      }\r\n    }\r\n    return fixedDepositAccountDetails;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"fixedDepositAccountDetailsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Product Name</mat-label>\r\n      <mat-select formControlName=\"productId\" required>\r\n        <mat-option *ngFor=\"let product of productData\" [value]=\"product.id\">\r\n          {{ product.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Product Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Submitted On</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"submittedOnDatePicker\"\r\n        formControlName=\"submittedOnDate\" required>\r\n      <mat-datepicker-toggle matSuffix [for]=\"submittedOnDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #submittedOnDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        Submission Date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Field Officer</mat-label>\r\n      <mat-select formControlName=\"fieldOfficerId\">\r\n        <mat-option *ngFor=\"let officer of fieldOfficerData\" [value]=\"officer.id\">\r\n          {{ officer.displayName }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * Fixed Deposits Account Interest Rate Chart Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-interest-rate-chart-step',\r\n  templateUrl: './fixed-deposit-account-interest-rate-chart-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-interest-rate-chart-step.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class FixedDepositAccountInterestRateChartStepComponent implements OnChanges {\r\n\r\n  /** Fixed deposits account template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed deposits account and product template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to disblac incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n  /** Interest Rate charts table reference */\r\n  @ViewChild('chartsTable', { static: true }) chartsTableRef: MatTable<Element>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.interestRateChartData = this.fixedDepositsAccountProductTemplate.accountChart.chartSlabs;\r\n      this.chartsTableRef.renderRows();\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.name\">\r\n    <span fxFlex=\"40%\">Name:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.accountChart.name }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Valid from Date:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.fromDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.endDate\">\r\n    <span fxFlex=\"40%\">End Date:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.endDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.description\">\r\n    <span fxFlex=\"40%\">Description:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.description }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Primary Grouping by Amount:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.isPrimaryGroupingByAmount ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <table class=\"mat-elevation-z1\" mat-table [dataSource]=\"interestRateChartData\" #chartsTable multiTemplateDataRows>\r\n\r\n    <ng-container matColumnDef=\"period\">\r\n      <th mat-header-cell *matHeaderCellDef> Period </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\">\r\n        {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountRange\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interest\">\r\n      <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Description </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n        <button mat-button color=\"primary\" (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n          <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n            <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n            View Incentives\r\n          </span>\r\n          <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n            <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n            Hide Incentives\r\n          </span>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"incentives\">\r\n      <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\" [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n\r\n        <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\" [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n\r\n          <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n\r\n            <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n              Incentives\r\n            </h4>\r\n\r\n            <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\" *ngIf=\"chartSlab.incentives.length\">\r\n\r\n              <ng-container matColumnDef=\"entityType\">\r\n                <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.entityType.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"attributeName\">\r\n                <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.attributeName.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"conditionType\">\r\n                <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.conditionType.value | titlecase }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"attributeValue\">\r\n                <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                  {{ incentive.attributeValueDesc }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"incentiveType\">\r\n                <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.incentiveType.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"amount\">\r\n                <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.amount }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n\r\n            </table>\r\n\r\n          </mat-card>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext>\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * Fixed Deposit Preview Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-preview-step',\r\n  templateUrl: './fixed-deposit-account-preview-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-preview-step.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class FixedDepositAccountPreviewStepComponent implements OnChanges {\r\n\r\n  /** Fixed Deposits Account Template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed Deposits Account Product Template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n  /** Fixed Deposits Account Data */\r\n  @Input() fixedDepositAccountData: any;\r\n\r\n  /** Charges Displayed Columns */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery'];\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to disblac incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n  /** Form submission event */\r\n  @Output() submit = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.interestRateChartData = this.fixedDepositsAccountProductTemplate.accountChart.chartSlabs;\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Details</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Product</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.productId | find:fixedDepositsAccountTemplate.productOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Submitted On</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.submittedOnDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Field Officer</span>\r\n    <span fxFlex=\"60%\">{{ (fixedDepositAccountData.fieldOfficerId | find:fixedDepositsAccountProductTemplate.fieldOfficerOptions:'id':'displayName') || 'Unassigned' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Currency</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.currency.code }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency Multiple</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.currency.inMultiplesOf }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Decimal Places</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.currency.decimalPlaces }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Terms</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Fixed Deposit Amount:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.depositAmount }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Deposit Period:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.depositPeriod + ' ' + (fixedDepositAccountData.depositPeriodFrequencyId | find:fixedDepositsAccountProductTemplate.periodFrequencyTypeOptions:'id':'value') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Compounding Period:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.interestCompoundingPeriodType | find:fixedDepositsAccountProductTemplate.interestCompoundingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Posting Period:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.interestPostingPeriodType | find:fixedDepositsAccountProductTemplate.interestPostingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Calculated using:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.interestCalculationType | find:fixedDepositsAccountProductTemplate.interestCalculationTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Days in Year:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.interestCalculationDaysInYearType | find:fixedDepositsAccountProductTemplate.interestCalculationDaysInYearTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Settings</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositAccountData.lockinPeriodFrequency\">\r\n    <span fxFlex=\"40%\">Lock-in Period:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.lockinPeriodFrequency + ' ' + (fixedDepositAccountData.lockinPeriodFrequencyType | find:fixedDepositsAccountProductTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate.minDepositTerm\">\r\n    <span fxFlex=\"40%\">Minimum Deposit Term:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.minDepositTerm + ' ' + (fixedDepositsAccountProductTemplate.minDepositTermType?.value || '') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate.inMultiplesOfDepositTerm\">\r\n    <span fxFlex=\"40%\">In Multiples Of:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.inMultiplesOfDepositTerm + ' ' + (fixedDepositsAccountProductTemplate.inMultiplesOfDepositTermType?.value || '') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate.maxDepositTerm\">\r\n    <span fxFlex=\"40%\">Maximum Deposit Term</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.maxDepositTerm + ' ' + (fixedDepositsAccountProductTemplate.maxDepositTermType?.value || '') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Transfer Interest to Savings Account?</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.transferInterestToSavings ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositAccountData.transferInterestToSavings\">\r\n    <span fxFlex=\"40%\">Linked Savings Account</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.linkAccountId | find:fixedDepositsAccountProductTemplate.savingsAccounts:'id':'accountNo' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Apply Penal Interest (less):</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.preClosurePenalApplicable ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate.preClosurePenalApplicable\">\r\n    <span fxFlex=\"40%\">Penal Interest (%):</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate.preClosurePenalInterest + '% (' + (fixedDepositsAccountProductTemplate.preClosurePenalInterestOnType?.id) + ')' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate.withHoldTax\">\r\n    <span fxFlex=\"40%\">Withhold Tax is Applicable:</span>\r\n    <span fxFlex=\"60%\">{{ fixedDepositAccountData.withHoldTax ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Interest Rate Chart</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div class=\"margin-b\" fxFlexFill fxLayout=\"column\">\r\n\r\n    <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.name\">\r\n      <span fxFlex=\"40%\">Name:</span>\r\n      <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.name }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Valid from Date:</span>\r\n      <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.fromDate | date }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.endDate\">\r\n      <span fxFlex=\"40%\">End Date:</span>\r\n      <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.endDate | date }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"fixedDepositsAccountProductTemplate?.accountChart.description\">\r\n      <span fxFlex=\"40%\">Description:</span>\r\n      <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.description }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Primary Grouping by Amount:</span>\r\n      <span fxFlex=\"60%\">{{ fixedDepositsAccountProductTemplate?.accountChart.isPrimaryGroupingByAmount ? 'Yes' : 'No' }}</span>\r\n    </div>\r\n\r\n    <table class=\"mat-elevation-z1 irc-table\" mat-table [dataSource]=\"interestRateChartData\" multiTemplateDataRows>\r\n\r\n      <ng-container matColumnDef=\"period\">\r\n        <th mat-header-cell *matHeaderCellDef> Period </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">\r\n          {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"amountRange\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"interest\">\r\n        <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n          <button mat-button color=\"primary\" (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n            <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n              <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n              View Incentives\r\n            </span>\r\n            <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n              <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n              Hide Incentives\r\n            </span>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"incentives\">\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\" [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n  \r\n          <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\" [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n  \r\n            <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n  \r\n              <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n                Incentives\r\n              </h4>\r\n  \r\n              <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\" *ngIf=\"chartSlab.incentives.length\">\r\n  \r\n                <ng-container matColumnDef=\"entityType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.entityType.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"attributeName\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.attributeName.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"conditionType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.conditionType.value | titlecase }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"attributeValue\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                    {{ incentive.attributeValueDesc }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"incentiveType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.incentiveType.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.amount }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n  \r\n              </table>\r\n  \r\n            </mat-card>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n  \r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"fixedDepositAccountData.charges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Charges</h3>\r\n\r\n    <mat-divider fxFlexFill></mat-divider>\r\n\r\n    <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"fixedDepositAccountData.charges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeCalculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeCalculationType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef> Date </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span\r\n            *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n            {{(charge.dueDate | date) || 'Unassigned'}}\r\n          </span>\r\n          <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n            {{charge.feeOnMonthDay ? ([2000].concat(charge.feeOnMonthDay) | date: 'dd MMMM') : 'Unassigned'}}\r\n          </span>\r\n          <span\r\n            *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n              || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n            N/A\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"repaymentsEvery\">\r\n        <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.feeInterval || 'Not Provided' }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeTimeType\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeTimeType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button [routerLink]=\"['../']\">\r\n    Cancel\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"submit.emit()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\n\r\n/**\r\n * Fixed Deposits Account Settings Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-settings-step',\r\n  templateUrl: './fixed-deposit-account-settings-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-settings-step.component.scss']\r\n})\r\nexport class FixedDepositAccountSettingsStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Fixed deposits account template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed deposits account and product template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Fixed Deposits Account Settings Form */\r\n  fixedDepositAccountSettingsForm: FormGroup;\r\n  /** Lockin Period Frequency Type Data */\r\n  lockinPeriodFrequencyTypeData: any;\r\n  /** Period Frequency Type Data */\r\n  periodFrequencyTypeData: any;\r\n  /** Pre Closure Penal Data */\r\n  preClosurePenalInterestOnTypeData: any;\r\n  /** Savings Accounts Data */\r\n  savingsAccountsData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createFixedDepositAccountSettingsForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.fixedDepositAccountSettingsForm.patchValue({\r\n        'minDepositTerm': this.fixedDepositsAccountProductTemplate.minDepositTerm,\r\n        'minDepositTermTypeId': this.fixedDepositsAccountProductTemplate.minDepositTermType ? this.fixedDepositsAccountProductTemplate.minDepositTermType.id : '',\r\n        'inMultiplesOfDepositTerm': this.fixedDepositsAccountProductTemplate.inMultiplesOfDepositTerm,\r\n        'inMultiplesOfDepositTermTypeId': this.fixedDepositsAccountProductTemplate.inMultiplesOfDepositTermType ? this.fixedDepositsAccountProductTemplate.inMultiplesOfDepositTermType.id : '',\r\n        'maxDepositTerm': this.fixedDepositsAccountProductTemplate.maxDepositTerm,\r\n        'maxDepositTermTypeId': this.fixedDepositsAccountProductTemplate.maxDepositTermType ? this.fixedDepositsAccountProductTemplate.maxDepositTermType.id : '',\r\n        'preClosurePenalApplicable': this.fixedDepositsAccountProductTemplate.preClosurePenalApplicable,\r\n        'preClosurePenalInterest': this.fixedDepositsAccountProductTemplate.preClosurePenalInterest,\r\n        'preClosurePenalInterestOnTypeId': this.fixedDepositsAccountProductTemplate.preClosurePenalInterestOnType ? this.fixedDepositsAccountProductTemplate.preClosurePenalInterestOnType.id : ''\r\n      });\r\n      if (this.fixedDepositsAccountProductTemplate.withHoldTax) {\r\n        this.fixedDepositAccountSettingsForm.addControl('withHoldTax', new FormControl(false));\r\n        this.fixedDepositAccountSettingsForm.get('withHoldTax').valueChanges.subscribe((value: boolean) => {\r\n          if (value) {\r\n            this.fixedDepositAccountSettingsForm.addControl('taxGroupId', new FormControl({ value: '', disabled: true }));\r\n            this.fixedDepositAccountSettingsForm.get('taxGroupId').patchValue(this.fixedDepositsAccountProductTemplate.taxGroup && this.fixedDepositsAccountProductTemplate.taxGroup.name);\r\n          } else {\r\n            this.fixedDepositAccountSettingsForm.removeControl('taxGroupId');\r\n          }\r\n        });\r\n        this.fixedDepositAccountSettingsForm.get('withHoldTax').patchValue(this.fixedDepositsAccountTemplate.withHoldTax);\r\n      } else {\r\n        this.fixedDepositAccountSettingsForm.removeControl('withHoldTax');\r\n      }\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.fixedDepositsAccountTemplate) {\r\n      this.fixedDepositAccountSettingsForm.patchValue({\r\n        'lockinPeriodFrequency': this.fixedDepositsAccountTemplate.lockinPeriodFrequency,\r\n        'lockinPeriodFrequencyType': this.fixedDepositsAccountTemplate.lockinPeriodFrequencyType && this.fixedDepositsAccountTemplate.lockinPeriodFrequencyType.id,\r\n        'transferInterestToSavings': this.fixedDepositsAccountTemplate.transferInterestToSavings\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates fixed deposits account terms form.\r\n   */\r\n  createFixedDepositAccountSettingsForm() {\r\n    this.fixedDepositAccountSettingsForm = this.formBuilder.group({\r\n      'lockinPeriodFrequency': [''],\r\n      'lockinPeriodFrequencyType': [''],\r\n      'minDepositTerm': [{value: '', disabled: true}],\r\n      'minDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'inMultiplesOfDepositTerm': [{ value: '', disabled: true }],\r\n      'inMultiplesOfDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'maxDepositTerm': [{ value: '', disabled: true }],\r\n      'maxDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'transferInterestToSavings': [false],\r\n      'preClosurePenalApplicable': [{ value: '', disabled: true }],\r\n      'preClosurePenalInterest': [{ value: '', disabled: true }],\r\n      'preClosurePenalInterestOnTypeId': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes and sets new form controls accordingly.\r\n   */\r\n  buildDependencies() {\r\n    this.fixedDepositAccountSettingsForm.get('transferInterestToSavings').valueChanges.subscribe((value: boolean) => {\r\n      if (value) {\r\n        this.fixedDepositAccountSettingsForm.addControl('linkAccountId', new FormControl('', Validators.required));\r\n        this.fixedDepositAccountSettingsForm.get('linkAccountId').patchValue(this.fixedDepositsAccountTemplate.linkedAccount && this.fixedDepositsAccountTemplate.linkedAccount.id);\r\n      } else {\r\n        this.fixedDepositAccountSettingsForm.removeControl('linkAccountId');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.lockinPeriodFrequencyTypeData = this.fixedDepositsAccountProductTemplate.lockinPeriodFrequencyTypeOptions;\r\n    this.periodFrequencyTypeData = this.fixedDepositsAccountProductTemplate.periodFrequencyTypeOptions;\r\n    this.savingsAccountsData = this.fixedDepositsAccountProductTemplate.savingsAccounts;\r\n    this.preClosurePenalInterestOnTypeData = this.fixedDepositsAccountProductTemplate.preClosurePenalInterestOnTypeOptions;\r\n  }\r\n\r\n  /**\r\n   * Returns fixed deposits account settings form value.\r\n   */\r\n  get fixedDepositAccountSettings() {\r\n    const fixedDepositAccountSettings = this.fixedDepositAccountSettingsForm.getRawValue();\r\n    for (const key in fixedDepositAccountSettings) {\r\n      if (fixedDepositAccountSettings[key] === '' || key === 'taxGroupId') {\r\n        delete fixedDepositAccountSettings[key];\r\n      }\r\n    }\r\n    return fixedDepositAccountSettings;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"fixedDepositAccountSettingsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Lock-in Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"lockinPeriodFrequency\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"lockinPeriodFrequencyType\">\r\n        <mat-option *ngFor=\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\"\r\n          [value]=\"lockinPeriodFrequencyType.id\">\r\n          {{ lockinPeriodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Minimum Deposit Term</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minDepositTerm\" required>\r\n      <mat-error>\r\n        Minimum Deposit Term Frequency is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency Type</mat-label>\r\n      <mat-select formControlName=\"minDepositTermTypeId\" required>\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Minimum Deposit Term Frequency Type is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">And thereafter, in Multiples of</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"inMultiplesOfDepositTerm\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"inMultiplesOfDepositTermTypeId\">\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Maximum Deposit Term</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"maxDepositTerm\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"maxDepositTermTypeId\">\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h3 fxFlex=\"23%\" class=\"mat-h3\">Interest Transfer</h3>\r\n\r\n    <mat-checkbox fxFlex=\"32%\" labelPosition=\"before\" formControlName=\"transferInterestToSavings\" class=\"margin-b\">\r\n      Transfer Interest to Linked Savings Account?\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\" *ngIf=\"fixedDepositAccountSettingsForm.contains('linkAccountId')\" class=\"margin-b\">\r\n      <mat-label>Link Savings Account</mat-label>\r\n      <mat-select formControlName=\"linkAccountId\" required>\r\n        <mat-option *ngFor=\"let account of savingsAccountsData\" [value]=\"account.id\">\r\n          {{ account.accountNo }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Linked Savings Account is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h4 fxFlex=\"23%\" class=\"mat-h4\">For Pre-mature closure</h4>\r\n\r\n    <mat-checkbox fxFlex=\"73%\" labelPosition=\"before\" formControlName=\"preClosurePenalApplicable\" class=\"margin-v\">\r\n      Apply Penal Interest (less)\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Penal Interest (%)</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"preClosurePenalInterest\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Period</mat-label>\r\n      <mat-select formControlName=\"preClosurePenalInterestOnTypeId\">\r\n        <mat-option *ngFor=\"let preClosurePenalInterestOnType of preClosurePenalInterestOnTypeData\"\r\n          [value]=\"preClosurePenalInterestOnType.id\">\r\n          {{ preClosurePenalInterestOnType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"fixedDepositAccountSettingsForm.controls.withHoldTax\">\r\n\r\n      <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n      <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"withHoldTax\" class=\"margin-p\">\r\n        Is Withhold Tax Applicable?\r\n      </mat-checkbox>\r\n  \r\n      <mat-form-field fxFlex=\"48%\" *ngIf=\"fixedDepositAccountSettingsForm.controls.taxGroupId\" class=\"p-b-25\">\r\n        <mat-label>Tax Group</mat-label>\r\n        <input matInput formControlName=\"taxGroupId\">\r\n      </mat-form-field>\r\n\r\n    </ng-container>\r\n   \r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\n\r\n/**\r\n * Fixed Deposits Terms Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-terms-step',\r\n  templateUrl: './fixed-deposit-account-terms-step.component.html',\r\n  styleUrls: ['./fixed-deposit-account-terms-step.component.scss']\r\n})\r\nexport class FixedDepositAccountTermsStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Fixed deposits account template */\r\n  @Input() fixedDepositsAccountTemplate: any;\r\n  /** Fixed deposits account and product template */\r\n  @Input() fixedDepositsAccountProductTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Fixed Deposits Account Terms Form */\r\n  fixedDepositAccountTermsForm: FormGroup;\r\n  /** Interest Compounding Period Type Data */\r\n  interestCompoundingPeriodTypeData: any;\r\n  /** Interest Posting Period Type Data */\r\n  interestPostingPeriodTypeData: any;\r\n  /** Interest Calculation Type Data */\r\n  interestCalculationTypeData: any;\r\n  /** Interest Calculation Days in Year Data */\r\n  interestCalculationDaysInYearTypeData: any;\r\n   /** Period Frequency Type Data */\r\n  periodFrequencyTypeData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createFixedDepositsAccountTermsForm();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.fixedDepositsAccountProductTemplate) {\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.fixedDepositsAccountTemplate.interestCompoundingPeriodType) {\r\n      this.fixedDepositAccountTermsForm.patchValue({\r\n        'interestCompoundingPeriodType': this.fixedDepositsAccountTemplate.interestCompoundingPeriodType.id,\r\n        'interestPostingPeriodType': this.fixedDepositsAccountTemplate.interestPostingPeriodType.id,\r\n        'interestCalculationType': this.fixedDepositsAccountTemplate.interestCalculationType.id,\r\n        'interestCalculationDaysInYearType': this.fixedDepositsAccountTemplate.interestCalculationDaysInYearType.id,\r\n        'depositAmount': this.fixedDepositsAccountTemplate.depositAmount,\r\n        'depositPeriod': this.fixedDepositsAccountTemplate.depositPeriod,\r\n        'depositPeriodFrequencyId': this.fixedDepositsAccountTemplate.depositPeriodFrequency.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates fixed deposits account terms form.\r\n   */\r\n  createFixedDepositsAccountTermsForm() {\r\n    this.fixedDepositAccountTermsForm = this.formBuilder.group({\r\n      'interestCompoundingPeriodType': ['', Validators.required],\r\n      'interestPostingPeriodType': ['', Validators.required],\r\n      'interestCalculationType': ['', Validators.required],\r\n      'interestCalculationDaysInYearType': ['', Validators.required],\r\n      'depositAmount': ['', Validators.required],\r\n      'depositPeriod': ['', Validators.required],\r\n      'depositPeriodFrequencyId': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.interestCompoundingPeriodTypeData = this.fixedDepositsAccountProductTemplate.interestCompoundingPeriodTypeOptions;\r\n    this.interestPostingPeriodTypeData = this.fixedDepositsAccountProductTemplate.interestPostingPeriodTypeOptions;\r\n    this.interestCalculationTypeData = this.fixedDepositsAccountProductTemplate.interestCalculationTypeOptions;\r\n    this.interestCalculationDaysInYearTypeData = this.fixedDepositsAccountProductTemplate.interestCalculationDaysInYearTypeOptions;\r\n    this.periodFrequencyTypeData = this.fixedDepositsAccountProductTemplate.periodFrequencyTypeOptions;\r\n  }\r\n\r\n  /**\r\n   * Returns fixed deposits account terms form value.\r\n   */\r\n  get fixedDepositAccountTerms() {\r\n    const fixedDepositAccountTerms = this.fixedDepositAccountTermsForm.value;\r\n    for (const key in fixedDepositAccountTerms) {\r\n      if (fixedDepositAccountTerms[key] === '') {\r\n        delete fixedDepositAccountTerms[key];\r\n      }\r\n    }\r\n    return fixedDepositAccountTerms;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"fixedDepositAccountTermsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Deposit Amount</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"depositAmount\" required>\r\n      <mat-error>\r\n        Fixed Deposit Amount is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <span fxFlex=\"48%\" fxHide.lt-md></span>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Deposit Period Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"depositPeriod\" required>\r\n      <mat-error>\r\n        Deposit Period Frequency is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Deposit Period Type</mat-label>\r\n      <mat-select formControlName=\"depositPeriodFrequencyId\" required>\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Deposit Period Type is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Compounding Period</mat-label>\r\n      <mat-select formControlName=\"interestCompoundingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestCompoundingPeriodType of interestCompoundingPeriodTypeData\"\r\n          [value]=\"interestCompoundingPeriodType.id\">\r\n          {{ interestCompoundingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Compounding Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Posting Period</mat-label>\r\n      <mat-select formControlName=\"interestPostingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestPostingPeriodType of interestPostingPeriodTypeData\"\r\n          [value]=\"interestPostingPeriodType.id\">\r\n          {{ interestPostingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Posting Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Calculated using</mat-label>\r\n      <mat-select formControlName=\"interestCalculationType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationType of interestCalculationTypeData\"\r\n          [value]=\"interestCalculationType.id\">\r\n          {{ interestCalculationType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Calculated using is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Days in Year</mat-label>\r\n      <mat-select formControlName=\"interestCalculationDaysInYearType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationDaysInYearType of interestCalculationDaysInYearTypeData\"\r\n          [value]=\"interestCalculationDaysInYearType.id\">\r\n          {{ interestCalculationDaysInYearType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Days in Year is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { WaiveChargeDialogComponent } from '../custom-dialogs/waive-charge-dialog/waive-charge-dialog.component';\r\nimport { InactivateChargeDialogComponent } from '../custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * Charges Tab Component\r\n * Note: Fixed deposits endpoints are not supported so using Savings endpoints.\r\n */\r\n@Component({\r\n  selector: 'mifosx-charges-tab',\r\n  templateUrl: './charges-tab.component.html',\r\n  styleUrls: ['./charges-tab.component.scss']\r\n})\r\nexport class ChargesTabComponent implements OnInit {\r\n\r\n  /** Fixed Deposits Account Data */\r\n  fixedDepositsAccountData: any;\r\n  /** Charges Data */\r\n  chargesData: any[];\r\n  /** Data source for charges table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Toggles Charges Table */\r\n  showInactiveCharges = false;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'feeOrPenalty',\r\n    'paymentDueAt',\r\n    'dueAsOf',\r\n    'repeatsOn',\r\n    'calculationType',\r\n    'due',\r\n    'paid',\r\n    'waived',\r\n    'outstanding',\r\n    'actions'\r\n  ];\r\n\r\n  /** Charges Table Reference */\r\n  @ViewChild('chargesTable', { static: true }) chargesTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves the Fixed Deposits account data from `resolve`.\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe((data: { fixedDepositsAccountData: any }) => {\r\n      this.fixedDepositsAccountData = data.fixedDepositsAccountData;\r\n      this.chargesData = this.fixedDepositsAccountData.charges;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const activeCharges = this.chargesData ? this.chargesData.filter(charge => charge.isActive) : [];\r\n    this.dataSource = new MatTableDataSource(activeCharges);\r\n  }\r\n\r\n  /**\r\n   * Toggles datasource for active/inactive charges.\r\n   */\r\n  toggleCharges() {\r\n    this.showInactiveCharges = !this.showInactiveCharges;\r\n    if (!this.showInactiveCharges) {\r\n      const activeCharges = this.chargesData.filter(charge => charge.isActive);\r\n      this.dataSource.data = activeCharges;\r\n    } else {\r\n      const inActiveCharges = this.chargesData.filter(charge => !charge.isActive);\r\n      this.dataSource.data = inActiveCharges;\r\n    }\r\n    this.chargesTableRef.renderRows();\r\n  }\r\n\r\n  /**\r\n   * Pays the charge.\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  payCharge(chargeId: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Pay Charge ${chargeId}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.fixedDepositsAccountData.id, 'paycharge', dataObject, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  waiveCharge(chargeId: any) {\r\n    const waiveChargeDialogRef = this.dialog.open(WaiveChargeDialogComponent, { data: { id: chargeId } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.fixedDepositsAccountData.id, 'waive', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Inactivate's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  inactivateCharge(chargeId: any) {\r\n    const inactivateChargeDialogRef = this.dialog.open(InactivateChargeDialogComponent, { data: { id: chargeId } });\r\n    inactivateChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.fixedDepositsAccountData.id, 'inactivate', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   * @param {any} charge Charge\r\n   */\r\n  editCharge(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount || charge.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Edit Charge ${charge.id}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.editSavingsAccountCharge(this.fixedDepositsAccountData.id, dataObject, charge.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  deleteCharge(chargeId: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${chargeId}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteSavingsAccountCharge(this.fixedDepositsAccountData.id, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if charge is recurring.\r\n   * @param {any} charge Charge\r\n   */\r\n  isRecurringCharge(charge: any) {\r\n    return charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee' || charge.chargeTimeType.value === 'Weekly Fee';\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view charge page.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.fixedDepositsAccountData.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/fixed-deposits-accounts`, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>All Charges</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-20\" *ngIf=\"this.chargesData\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"toggleCharges()\">\r\n        {{showInactiveCharges?'View Active Charges':'View Inactive Charges'}}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #chargesTable [dataSource]=\"dataSource\" >\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"feeOrPenalty\">\r\n        <th mat-header-cell *matHeaderCellDef> Fee/Penalty </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.penalty === true ? 'Penalty' : 'Fee' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paymentDueAt\">\r\n        <th mat-header-cell *matHeaderCellDef> Payment Due At </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"dueAsOf\">\r\n        <th mat-header-cell *matHeaderCellDef> Due As Of </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.dueDate | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"repeatsOn\">\r\n        <th mat-header-cell *matHeaderCellDef> Repeats On </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.feeOnMonthDay ? ([2000].concat(charge.feeOnMonthDay) | date: 'dd MMMM') : 'Unassigned'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"calculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Calculation Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.chargeCalculationType.value}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"due\">\r\n        <th mat-header-cell *matHeaderCellDef> Due </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amount}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountPaid}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountWaived}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountOutstanding}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span *ngIf=\"fixedDepositsAccountData.status.value === 'Submitted and pending approval'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Charge\"\r\n              *mifosxHasPermission=\"'UPDATE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); editCharge(charge)\">\r\n              <i class=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Charge\"\r\n              *mifosxHasPermission=\"'DELETE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); deleteCharge(charge.id)\">\r\n              <i class=\"fa fa-trash\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"fixedDepositsAccountData.status.value === 'Active' && charge.amountOutstanding !== 0\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Pay Charge\"\r\n              *mifosxHasPermission=\"'PAY_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); payCharge(charge.id)\">\r\n              <i class=\"fa fa-dollar\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Waive Charge\"\r\n              *mifosxHasPermission=\"'WAIVE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); waiveCharge(charge.id)\">\r\n              <i class=\"fa fa-flag\"></i>\r\n            </button>\r\n            <ng-container *ngIf=\"isRecurringCharge(charge)\">\r\n              <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Inactivate Charge\"\r\n                *mifosxHasPermission=\"'INACTIVATE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); inactivateCharge(charge.id)\">\r\n                <i class=\"fa fa-ban\"></i>\r\n              </button>\r\n            </ng-container>\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n/**\r\n * Calculate interest dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-calculate-interest-dialog',\r\n  templateUrl: './calculate-interest-dialog.component.html',\r\n  styleUrls: ['./calculate-interest-dialog.component.scss']\r\n})\r\nexport class CalculateInterestDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<CalculateInterestDialogComponent>) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Calculate Interest</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to calculate interest ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Inactivate charge dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-inactivate-charge-dialog',\r\n  templateUrl: './inactivate-charge-dialog.component.html',\r\n  styleUrls: ['./inactivate-charge-dialog.component.scss']\r\n})\r\nexport class InactivateChargeDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<InactivateChargeDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Inactivate Charge</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to inactivate charge with id: {{ data.id }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n/**\r\n * Post interest dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-post-interest-dialog',\r\n  templateUrl: './post-interest-dialog.component.html',\r\n  styleUrls: ['./post-interest-dialog.component.scss']\r\n})\r\nexport class PostInterestDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<PostInterestDialogComponent>) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Post Interest</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to post interest ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Toggle withhold tax dialog dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-toggle-withhold-tax-dialog',\r\n  templateUrl: './toggle-withhold-tax-dialog.component.html',\r\n  styleUrls: ['./toggle-withhold-tax-dialog.component.scss']\r\n})\r\nexport class ToggleWithholdTaxDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<ToggleWithholdTaxDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>{{ data.isEnable ? 'Enable' : 'Disable' }} Withhold Tax</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to {{ data.isEnable ? 'enable' : 'disable' }} withhold tax for this account ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"{{ data.isEnable ? 'accent' : 'warn' }}\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Waive charge dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-waive-charge-dialog',\r\n  templateUrl: './waive-charge-dialog.component.html',\r\n  styleUrls: ['./waive-charge-dialog.component.scss']\r\n})\r\nexport class WaiveChargeDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<WaiveChargeDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Waive Charge</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to waive charge with id: {{ data.id }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Savings Datatable Tabs Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-datatable-tabs',\r\n  templateUrl: './datatable-tabs.component.html',\r\n  styleUrls: ['./datatable-tabs.component.scss']\r\n})\r\nexport class DatatableTabsComponent {\r\n\r\n  /** Savings Datatable */\r\n  savingsDatatable: any;\r\n  /** Multi Row Datatable Flag */\r\n  multiRowDatatableFlag: boolean;\r\n\r\n  /**\r\n   * Fetches Savings and datatables data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.data.subscribe((data: { savingsDatatable: any }) => {\r\n      this.savingsDatatable = data.savingsDatatable;\r\n      this.multiRowDatatableFlag = this.savingsDatatable.columnHeaders[0].columnName === 'id' ? true : false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  <mifosx-multi-row *ngIf=\"multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-multi-row>\r\n  <mifosx-single-row *ngIf=\"!multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-single-row>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Savings Account Multi Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-multi-row',\r\n  templateUrl: './multi-row.component.html',\r\n  styleUrls: ['./multi-row.component.scss']\r\n})\r\nexport class MultiRowComponent implements OnInit, OnChanges {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Data Table Columns */\r\n  datatableColumns: string[] = [];\r\n  /** Data Table Data */\r\n  datatableData: any;\r\n  /** Account Id */\r\n  accountId: string;\r\n  /** Toggle button visibility */\r\n  showDeleteBotton: boolean;\r\n\r\n  /** Data Table Reference */\r\n  @ViewChild('dataTable', { static: true }) dataTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.parent.snapshot.paramMap.get('fixedDepositAccountId');\r\n  }\r\n\r\n  /**\r\n   * Updates related variables on changes to dataObject.\r\n   */\r\n  ngOnChanges() {\r\n    this.datatableColumns = this.dataObject.columnHeaders.map((columnHeader: any) => {\r\n      return columnHeader.columnName;\r\n    });\r\n    this.datatableData = this.dataObject.data;\r\n    this.showDeleteBotton = this.datatableData[0] ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a new row to the given multi row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.dataTableRef.renderRows();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes all rows of the given multi row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.accountId, this.datatableName).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.showDeleteBotton = false;\r\n            this.dataTableRef.renderRows();\r\n           });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-5\" fxLayoutGap=\"10px\">\r\n      <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"add()\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n        </button>\r\n      </span>\r\n      <span *mifosxHasPermission=\"'DELETE_' + datatableName\">\r\n        <button class=\"delete-button\" mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"showDeleteBotton\">\r\n          <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete All\r\n        </button>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <table #dataTable mat-table [hidden]=\"!datatableData[0]\" [dataSource]=\"datatableData\" class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <ng-container *ngFor=\"let datatableColumn of datatableColumns;let i = index\" [matColumnDef]=\"datatableColumn\">\r\n      <th mat-header-cell *matHeaderCellDef> {{datatableColumn}} </th>\r\n      <td mat-cell *matCellDef=\"let data\"> {{data.row[i]}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"datatableColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: datatableColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n\r\n/**\r\n * Savings Account Single Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-single-row',\r\n  templateUrl: './single-row.component.html',\r\n  styleUrls: ['./single-row.component.scss']\r\n})\r\nexport class SingleRowComponent implements OnInit {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Account Id */\r\n  accountId: string;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private dialog: MatDialog,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.parent.snapshot.paramMap.get('fixedDepositAccountId');\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the given single row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the current instance of single row data table.\r\n   */\r\n  edit() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    let formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    formfields = formfields.map((formfield: FormfieldBase, index: number) => {\r\n      formfield.value = (this.dataObject.data[0].row[index + 1]) ? this.dataObject.data[0].row[index + 1] : '';\r\n      return formfield;\r\n    });\r\n    const data = {\r\n      title: 'Edit ' + this.datatableName,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.editSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the current instance of single row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.accountId, this.datatableName)\r\n          .subscribe(() => {\r\n            this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n              this.dataObject = dataObject;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Maps API response to data table form fields.\r\n   * @param {any} columns Data Table Columns.\r\n   * @param {string[]} dateTransformColumns Columns transformed with date pipe.\r\n   * @param {any} dataTableEntryObject Additional data table details.\r\n   */\r\n  getFormfields(columns: any, dateTransformColumns: string[], dataTableEntryObject: any) {\r\n    return columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <h3>{{datatableName}}</h3>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n    <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"add()\" *ngIf=\"!dataObject.data[0]\">\r\n        <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n      </button>\r\n    </span>\r\n    <span *mifosxHasPermission=\"'UPDATE_' + datatableName\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"edit()\" *ngIf=\"dataObject.data[0]\">\r\n        <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n      </button>\r\n    </span>\r\n    <span *mifosxHasPermission=\"'DELETE_' + datatableName\" class=\"delete-button\">\r\n      <button mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"dataObject.data[0]\">\r\n        <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete\r\n      </button>\r\n    </span>\r\n  </div>\r\n\r\n  <mat-list role=\"list\" *ngIf=\"dataObject.data[0]\">\r\n    <mat-list-item role=\"listitem\" *ngFor=\"let columnHeader of dataObject.columnHeaders;let i = index\">\r\n      {{columnHeader.columnName}} : {{dataObject.data[0].row[i]}}\r\n    </mat-list-item>\r\n  </mat-list>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Custom Dialogs */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { CalculateInterestDialogComponent } from './custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component';\r\nimport { PostInterestDialogComponent } from './custom-dialogs/post-interest-dialog/post-interest-dialog.component';\r\nimport { ToggleWithholdTaxDialogComponent } from './custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component';\r\n\r\n/** Custom Button Config. */\r\nimport { FixedDepositsButtonsConfiguration } from './fixed-deposits-buttons.config';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../fixed-deposits.service';\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/**\r\n * Fixed Deposits Account View Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposit-account-view',\r\n  templateUrl: './fixed-deposit-account-view.component.html',\r\n  styleUrls: ['./fixed-deposit-account-view.component.scss']\r\n})\r\nexport class FixedDepositAccountViewComponent implements OnInit {\r\n\r\n  /** Fixed Deposits Account Data */\r\n  fixedDepositsAccountData: any;\r\n  /** Savings Data Tables */\r\n  savingsDatatables: any;\r\n  /** Button Configurations */\r\n  buttonConfig: FixedDepositsButtonsConfiguration;\r\n\r\n  /**\r\n   * Fetches fixed deposits account data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private savingsService: SavingsService,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountData: any, savingsDatatables: any  }) => {\r\n      this.fixedDepositsAccountData = data.fixedDepositsAccountData;\r\n      this.savingsDatatables = data.savingsDatatables;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setConditionalButtons();\r\n  }\r\n\r\n  /**\r\n   * Adds options to button config. conditionaly.\r\n   */\r\n  setConditionalButtons() {\r\n    const status = this.fixedDepositsAccountData.status.value;\r\n    this.buttonConfig = new FixedDepositsButtonsConfiguration(status);\r\n    if (this.fixedDepositsAccountData.taxGroup && status === 'Active') {\r\n      if (this.fixedDepositsAccountData.withHoldTax) {\r\n        this.buttonConfig.addOption({\r\n          name: 'Disable Withhold Tax'\r\n        });\r\n      } else {\r\n        this.buttonConfig.addOption({\r\n          name: 'Enable Withhold Tax'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  reload() {\r\n    const clientId = this.fixedDepositsAccountData.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/fixed-deposits-accounts`, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n  /**\r\n   * Performs action button/option action.\r\n   * @param {string} name action name.\r\n   */\r\n  doAction(name: string) {\r\n    switch (name) {\r\n      case 'Approve':\r\n      case 'Reject':\r\n      case 'Activate':\r\n      case 'Close':\r\n      case 'Undo Approval':\r\n      case 'Add Charge':\r\n      case 'Withdraw By Client':\r\n      case 'Premature Close':\r\n        this.router.navigate([`actions/${name}`], { relativeTo: this.route });\r\n        break;\r\n      case 'Modify Application':\r\n        this.router.navigate(['edit'], { relativeTo: this.route });\r\n        break;\r\n      case 'Delete':\r\n        this.deleteFixedDepositsAccount();\r\n        break;\r\n      case 'Calculate Interest':\r\n        this.calculateInterest();\r\n        break;\r\n      case 'Post Interest':\r\n        this.postInterest();\r\n        break;\r\n      case 'Enable Withhold Tax':\r\n        this.enableWithHoldTax();\r\n        break;\r\n      case 'Disable Withhold Tax':\r\n        this.disableWithHoldTax();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes Fixed Deposits Account.\r\n   */\r\n  private deleteFixedDepositsAccount() {\r\n    const deleteFixedDepositsAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `fixed deposit account with id: ${this.fixedDepositsAccountData.id}` }\r\n    });\r\n    deleteFixedDepositsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.fixedDepositsService.deleteFixedDepositsAccount(this.fixedDepositsAccountData.id).subscribe(() => {\r\n          this.router.navigate(['../../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculates fixed deposit account's interest\r\n   */\r\n  private calculateInterest() {\r\n    const calculateInterestAccountDialogRef = this.dialog.open(CalculateInterestDialogComponent);\r\n    calculateInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.fixedDepositsService.executeFixedDepositsAccountCommand(this.fixedDepositsAccountData.id, 'calculateInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Posts fixed deposit account's interest\r\n   */\r\n  private postInterest() {\r\n    const postInterestAccountDialogRef = this.dialog.open(PostInterestDialogComponent);\r\n    postInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.fixedDepositsService.executeFixedDepositsAccountCommand(this.fixedDepositsAccountData.id, 'postInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Enables withhold tax for fixed deposits account.\r\n   * Fixed deposits endpoint is not supported so using Savings endpoint.\r\n   */\r\n  private enableWithHoldTax() {\r\n    const deleteSavingsAccountDialogRef = this.dialog.open(ToggleWithholdTaxDialogComponent, {\r\n      data: { isEnable: true }\r\n    });\r\n    deleteSavingsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.fixedDepositsAccountData.id, 'updateWithHoldTax', { withHoldTax: true})\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disables withhold tax for fixed deposits account\r\n   * Fixed deposits endpoint is not supported so using Savings endpoint.\r\n   */\r\n  private disableWithHoldTax() {\r\n    const disableWithHoldTaxDialogRef = this.dialog.open(ToggleWithholdTaxDialogComponent, {\r\n      data: { isEnable: false }\r\n    });\r\n    disableWithHoldTaxDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.fixedDepositsAccountData.id, 'updateWithHoldTax', { withHoldTax: false})\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"fixed-deposits-account-card\">\r\n\r\n  <mat-card-header fxLayout=\"column\" class=\"header\">\r\n\r\n    <mat-card-title-group class=\"header-title-group\">\r\n\r\n      <div class=\"profile-image-container\">\r\n        <div>\r\n          <img mat-card-md-image class=\"profile-image\"\r\n            matTooltip=\"Fixed Deposits Account\"\r\n            [src]=\"'assets/images/fd_account_placeholder.png'\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-typography account-card-title\">\r\n        <mat-card-title>\r\n          <h3>\r\n            <i class=\"fa fa-stop\" [ngClass]=\"fixedDepositsAccountData.status.code | statusLookup\" [matTooltip]=\"fixedDepositsAccountData.status.value\"></i>\r\n              Account Name : {{fixedDepositsAccountData.depositProductName}}\r\n          </h3>\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          <p>\r\n            Account #: {{fixedDepositsAccountData.accountNo}} | Client Name: {{fixedDepositsAccountData.clientName}}<br/>\r\n            <span *ngIf=\"!fixedDepositsAccountData.status.rejected && !fixedDepositsAccountData.status.submittedAndPendingApproval\">\r\n              Current Balance: {{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.summary.accountBalance}}<br/>\r\n              Deposit Amount: {{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.depositAmount}}<br/>\r\n            </span>\r\n          </p>\r\n        </mat-card-subtitle>\r\n      </div>\r\n\r\n    </mat-card-title-group>\r\n\r\n    <mat-card-actions class=\"account-actions\">\r\n\r\n      <ng-container *ngFor=\"let button of buttonConfig.singleButtons\">\r\n        <button mat-raised-button (click)=\"doAction(button.name)\">\r\n          <i class=\"{{button.icon}}\"></i> {{button.name}}</button>\r\n      </ng-container>\r\n  \r\n      <ng-container *ngIf=\"buttonConfig.options.length\">\r\n        <button mat-raised-button [matMenuTriggerFor]=\"More\">More</button>\r\n        <mat-menu #More=\"matMenu\">\r\n        <span *ngFor=\"let option of buttonConfig.options\">\r\n          <button mat-menu-item (click)=\"doAction(option.name)\">{{option.name}}</button>\r\n        </span>\r\n        </mat-menu>\r\n      </ng-container>\r\n  \r\n    </mat-card-actions>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content class=\"content\">\r\n\r\n    <div class=\"fixed-deposits-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n\r\n      <div fxFlex=\"49%\" fxLayout=\"column\" fxLayoutGap=\"4%\">\r\n\r\n        <div>\r\n          <h4 class=\"table-headers\">Fixed Deposit Details</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Activated On</td>\r\n                <td>{{fixedDepositsAccountData.timeline.activatedOnDate ? (fixedDepositsAccountData.timeline.activatedOnDate | date) : 'Not Activated'}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.timeline.closedOnDate\">\r\n                <td>Closed On</td>\r\n                <td>{{fixedDepositsAccountData.timeline.closedOnDate | date}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Field Officer</td>\r\n                <td>{{fixedDepositsAccountData.fieldOfficerName ? fixedDepositsAccountData.fieldOfficerName : 'Unassigned'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Maturity Date</td>\r\n                <td>{{fixedDepositsAccountData.maturityDate ? (fixedDepositsAccountData.maturityDate | date) : 'N/A'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Deposit Period</td>\r\n                <td>{{fixedDepositsAccountData.depositPeriod}}&nbsp;{{fixedDepositsAccountData.depositPeriodFrequency.value}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.withHoldTax\">\r\n                <td>Tax Group</td>\r\n                <td>{{fixedDepositsAccountData.taxGroup.name}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div>\r\n          <h4 class=\"table-headers\">Interest Details</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Interest Rate</td>\r\n                <td>{{fixedDepositsAccountData.nominalAnnualInterestRate}}%</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Interest Compounding Period</td>\r\n                <td>{{fixedDepositsAccountData.interestCompoundingPeriodType.value}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Interest Posting Period</td>\r\n                <td>{{fixedDepositsAccountData.interestPostingPeriodType.value}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Interest Calculated Using</td>\r\n                <td>{{fixedDepositsAccountData.interestCalculationType.value}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>No. of Days in Year</td>\r\n                <td>{{fixedDepositsAccountData.interestCalculationDaysInYearType.value}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.preClosurePenalApplicable\">\r\n                <td>Pre-cloure Penal</td>\r\n                <td>{{fixedDepositsAccountData.preClosurePenalInterest}} % on {{fixedDepositsAccountData.preClosurePenalInterestOnType.value}}</td>\r\n              </tr>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\">\r\n\r\n        <div *ngIf=\"!fixedDepositsAccountData.status.rejected && !fixedDepositsAccountData.status.submittedAndPendingApproval; else otherDetails\">\r\n          <h4 class=\"table-headers\">Performance History</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Principal Amount</td>\r\n                <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.depositAmount}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Maturity Amount</td>\r\n                <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.maturityAmount}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.summary.totalDeposits\">\r\n                <td>Total Deposits</td>\r\n                <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.summary.totalDeposits}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.summary.totalWithdrawals\">\r\n                <td>Total Withdrawals</td>\r\n                <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.summary.totalWithdrawals}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"fixedDepositsAccountData.summary.totalInterestEarned >= 0\">\r\n                <td>Total Interest Earned</td>\r\n                <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.summary.totalInterestEarned}}</td>\r\n              </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <ng-template #otherDetails>\r\n          <div>\r\n            <h4 class=\"table-headers\">Other Details</h4>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Principal Amount</td>\r\n                  <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.depositAmount}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Maturity Amount</td>\r\n                  <td>{{fixedDepositsAccountData.currency.displaySymbol}}&nbsp;{{fixedDepositsAccountData.maturityAmount}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </ng-template>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <nav mat-tab-nav-bar class=\"navigation-tabs\">\r\n      <a mat-tab-link [routerLink]=\"['./interest-rate-chart']\" routerLinkActive #IRC=\"routerLinkActive\"\r\n      [active]=\"IRC.isActive\">\r\n        Interest Rate Chart\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./transactions']\" routerLinkActive #transactions=\"routerLinkActive\"\r\n      [active]=\"transactions.isActive\">\r\n        Transactions\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./charges']\" routerLinkActive #charges=\"routerLinkActive\"\r\n      [active]=\"charges.isActive\">\r\n        Charges\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./standing-instructions']\" routerLinkActive #standingInstructions=\"routerLinkActive\"\r\n        [active]=\"standingInstructions.isActive\" *ngIf=\"fixedDepositsAccountData.clientId\">\r\n        Standing Instructions\r\n      </a>\r\n      <ng-container *ngFor=\"let savingsDatatable of savingsDatatables\">\r\n        <a mat-tab-link *mifosxHasPermission=\"'READ_' + savingsDatatable.registeredTableName\"\r\n          [routerLink]=\"['./datatables',savingsDatatable.registeredTableName]\"\r\n          routerLinkActive #datatable=\"routerLinkActive\" [active]=\"datatable.isActive\">\r\n          {{savingsDatatable.registeredTableName}}\r\n        </a>\r\n      </ng-container>\r\n    </nav>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","/** Fixed Deposits Account Buttons Configuration */\r\nexport class FixedDepositsButtonsConfiguration {\r\n\r\n  optionArray: {\r\n    name: string\r\n  }[];\r\n\r\n  buttonsArray: {\r\n    name: string,\r\n    icon: string,\r\n  }[];\r\n\r\n  constructor(status: string) {\r\n    this.setOptions(status);\r\n    this.setButtons(status);\r\n  }\r\n\r\n  get singleButtons() {\r\n    return this.buttonsArray;\r\n  }\r\n\r\n  get options() {\r\n    return this.optionArray;\r\n  }\r\n\r\n  setButtons(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Premature Close',\r\n            icon: 'fa fa-arrow-left'\r\n          },\r\n          {\r\n            name: 'Calculate Interest',\r\n            icon: 'fa fa-table'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Matured':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Close',\r\n            icon: 'fa fa-arrow-right'\r\n          },\r\n          {\r\n            name: 'Calculate Interest',\r\n            icon: 'fa fa-table'\r\n          }\r\n        ];\r\n      break;\r\n      case 'Submitted and pending approval':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Modify Application',\r\n            icon: 'fa fa-pencil '\r\n          },\r\n          {\r\n            name: 'Approve',\r\n            icon: 'fa fa-check'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Undo Approval',\r\n            icon: 'fa fa-undo'\r\n          },\r\n          {\r\n            name: 'Activate',\r\n            icon: 'fa fa-check'\r\n          }\r\n        ];\r\n      break;\r\n      default:\r\n        this.buttonsArray = [];\r\n    }\r\n  }\r\n\r\n  setOptions(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n      case 'Matured':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Post Interest'\r\n          },\r\n          {\r\n            name: 'Add Charge'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Reject'\r\n          },\r\n          {\r\n            name: 'Withdraw By Client'\r\n          },\r\n          {\r\n            name: 'Add Charge'\r\n          },\r\n          {\r\n            name: 'Delete'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n      default:\r\n        this.optionArray = [];\r\n    }\r\n  }\r\n\r\n  addOption(option: {name: string}) {\r\n    this.optionArray.push(option);\r\n  }\r\n\r\n}\r\n","// ** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * Interest Rate Chart Tab\r\n */\r\n@Component({\r\n  selector: 'mifosx-interest-rate-chart-tab',\r\n  templateUrl: './interest-rate-chart-tab.component.html',\r\n  styleUrls: ['./interest-rate-chart-tab.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class InterestRateChartTabComponent {\r\n\r\n  /** Fixed Deposits Account Status */\r\n  status: any;\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to display in incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n  /**\r\n   * Retrieves fixed deposits account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { fixedDepositsAccountData: any }) => {\r\n      this.interestRateChartData = data.fixedDepositsAccountData.accountChart.chartSlabs;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-20\">\r\n      <h3>All Interest Rates</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"interestRateChartData\" #chartsTable multiTemplateDataRows>\r\n\r\n      <ng-container matColumnDef=\"period\">\r\n        <th mat-header-cell *matHeaderCellDef> Period </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">\r\n          {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"amountRange\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"interest\">\r\n        <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n          <button mat-button color=\"primary\" (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n            <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n              <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n              View Incentives\r\n            </span>\r\n            <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n              <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n              Hide Incentives\r\n            </span>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"incentives\">\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\" [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n  \r\n          <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\" [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n  \r\n            <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n  \r\n              <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n                Incentives\r\n              </h4>\r\n  \r\n              <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\" *ngIf=\"chartSlab.incentives?.length\">\r\n  \r\n                <ng-container matColumnDef=\"entityType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.entityType.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"attributeName\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.attributeName.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"conditionType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.conditionType.value | titlecase }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"attributeValue\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                    {{ incentive.attributeValueDesc }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"incentiveType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.incentiveType.value }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.amount }}\r\n                  </td>\r\n                </ng-container>\r\n  \r\n                <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n  \r\n              </table>\r\n  \r\n            </mat-card>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n  \r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from 'app/deposits/fixed-deposits/fixed-deposits.service';\r\nimport { AccountTransfersService } from 'app/account-transfers/account-transfers.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/**\r\n * Fixed Deposits Standing Instructions Tab\r\n */\r\n@Component({\r\n  selector: 'mifosx-standing-instructions-tab',\r\n  templateUrl: './standing-instructions-tab.component.html',\r\n  styleUrls: ['./standing-instructions-tab.component.scss']\r\n})\r\nexport class StandingInstructionsTabComponent implements OnInit {\r\n\r\n  /** Fixed Deposits Data */\r\n  fixedDepositsData: any;\r\n  /** Instructions Data */\r\n  instructionsData: any[];\r\n  /** Data source for instructions table. */\r\n  dataSource = new MatTableDataSource();\r\n  /** Columns to be displayed in instructions table. */\r\n  displayedColumns: string[] = [\r\n    'client',\r\n    'fromAccount',\r\n    'beneficiary',\r\n    'toAccount',\r\n    'amount',\r\n    'validity',\r\n    'actions'\r\n  ];\r\n\r\n  /** Instruction Table Reference */\r\n  @ViewChild('instructionsTable', { static: true }) instructionTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves Fixed Deposits Account Data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {FixedDepositsService} fixedDepositsService FixedDepositsService\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   * @param {AccountTransfersService} accountTransfersService Accounts Transfer Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private dialog: MatDialog,\r\n              private accountTransfersService: AccountTransfersService,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe((data: { fixedDepositsAccountData: any }) => {\r\n      this.fixedDepositsData = data.fixedDepositsAccountData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStandingInstructions();\r\n  }\r\n\r\n  /**\r\n   * Retrieves standing instructions and initializes instructions table.\r\n   */\r\n  getStandingInstructions() {\r\n    const clientId = this.fixedDepositsData.clientId;\r\n    const clientName = this.fixedDepositsData.clientName;\r\n    const accountId = this.fixedDepositsData.id;\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.fixedDepositsService.getStandingInstructions(clientId, clientName, accountId, locale, dateFormat).subscribe((response: any) => {\r\n      this.instructionsData = response.pageItems;\r\n      this.dataSource.data = this.instructionsData;\r\n      this.instructionTableRef.renderRows();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes a standing instruction\r\n   * @param {any} instructionId Instruction Id\r\n   */\r\n  deleteStandingInstruction(instructionId: any) {\r\n    const deleteStandingInstructionDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `standing instruction id: ${instructionId}` }\r\n    });\r\n    deleteStandingInstructionDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.accountTransfersService.deleteStandingInstrucions(instructionId)\r\n          .subscribe(() => { });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Standing Instructions</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #instructionsTable [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"client\">\r\n        <th mat-header-cell *matHeaderCellDef> Client </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromClient.displayName}}-{{instruction.fromClient.id}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fromAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> From Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromAccount.accountNo}} ({{instruction.fromAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"beneficiary\">\r\n        <th mat-header-cell *matHeaderCellDef> Beneficiary </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toClient.displayName}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"toAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> To Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toAccount.accountNo}} ({{instruction.toAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.instructionType.value}}/{{instruction.amount}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"validity\">\r\n        <th mat-header-cell *matHeaderCellDef> Validity </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.validFrom | date}} to {{instruction.validTill | date}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Standing Instruction\"\r\n              *mifosxHasPermission=\"'UPDATE_STANDINGINSTRUCTION'\">\r\n              <i class=\"fa fa-edit\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Standing Instruction\"\r\n              *mifosxHasPermission=\"'DELETE_STANDINGINSTRUCTION'\" (click)=\"deleteStandingInstruction(instruction.id)\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </button>\r\n          </span>\r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"View Standing Instruction\"\r\n            *mifosxHasPermission=\"'READ_STANDINGINSTRUCTION'\">\r\n            <i class=\"fa fa-eye\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/**\r\n * Transactions Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-transactions-tab',\r\n  templateUrl: './transactions-tab.component.html',\r\n  styleUrls: ['./transactions-tab.component.scss']\r\n})\r\nexport class TransactionsTabComponent implements OnInit {\r\n\r\n  /** Fixed Deposits Account Status */\r\n  status: any;\r\n  /** Transactions Data */\r\n  transactionsData: any;\r\n  /** Columns to be displayed in transactions table. */\r\n  displayedColumns: string[] = ['id', 'transactionDate', 'transactionType', 'debit', 'credit', 'balance'];\r\n  /** Data source for transactions table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /**\r\n   * Retrieves fixed deposits account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.route.parent.data.subscribe((data: { fixedDepositsAccountData: any }) => {\r\n      this.transactionsData = data.fixedDepositsAccountData.transactions;\r\n      this.status = data.fixedDepositsAccountData.status.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.transactionsData);\r\n  }\r\n\r\n  /**\r\n   * Checks if transaction is debit.\r\n   * @param {any} transactionType Transaction Type\r\n   */\r\n  isDebit(transactionType: any) {\r\n    return transactionType.withdrawal === true || transactionType.feeDeduction === true\r\n            || transactionType.overdraftInterest === true || transactionType.withholdTax === true;\r\n  }\r\n\r\n  /**\r\n   * Show Transactions Details\r\n   * @param {any} transactionsData Transactions Data\r\n   */\r\n  showTransactions(transactionsData: any) {\r\n    if (transactionsData.transfer) {\r\n      this.router.navigate([`account-transfers/account-transfers/${transactionsData.transfer.id}`], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate([transactionsData.id], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-20\">\r\n      <h3>All Transactions</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.id }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.date | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionType\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Type </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.transactionType.value  }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"debit\">\r\n        <th mat-header-cell *matHeaderCellDef> Debit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ isDebit(transaction.transactionType) ? transaction.amount : 'N/A'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"credit\">\r\n        <th mat-header-cell *matHeaderCellDef> Credit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ !isDebit(transaction.transactionType) ? transaction.amount : 'N/A' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"balance\">\r\n        <th mat-header-cell *matHeaderCellDef> Balance </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.runningBalance }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" (click)=\"showTransactions(row)\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/**\r\n * View Transaction Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-transaction',\r\n  templateUrl: './view-transaction.component.html',\r\n  styleUrls: ['./view-transaction.component.scss']\r\n})\r\nexport class ViewTransactionComponent {\r\n\r\n  /** Transaction data. */\r\n  transactionData: any;\r\n\r\n  /**\r\n   * Retrieves the Transaction data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountTransaction: any }) => {\r\n      this.transactionData = data.fixedDepositsAccountTransaction;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Id\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.id }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.transactionType.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Date\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.date | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.currency.displayLabel }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Amount\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.amount }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" *ngIf=\"transactionData.note\" class=\"mat-body-strong\">\r\n          Note\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" *ngIf=\"transactionData.note\">\r\n          {{ transactionData.note }}\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"transactionData.paymentDetailData\">\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Payment Type\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.paymentType.name }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Account No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.accountNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Cheque Number\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.checkNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Routing Code\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.routingCode }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Receipt No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.receiptNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Bank No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.bankNumber }}\r\n          </div>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Activate Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-activate-fixed-deposits-account',\r\n  templateUrl: './activate-fixed-deposits-account.component.html',\r\n  styleUrls: ['./activate-fixed-deposits-account.component.scss']\r\n})\r\nexport class ActivateFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Activate Fixed Deposits Account form. */\r\n  activateFixedDepositsAccountForm: FormGroup;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * Fixed deposits endpoint is not supported so using Savings endpoint.\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the activate fixed deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createActivateFixedDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the activate fixed deposits account form.\r\n   */\r\n  createActivateFixedDepositsAccountForm() {\r\n    this.activateFixedDepositsAccountForm = this.formBuilder.group({\r\n      'activatedOnDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and activates the fixed deposit account,\r\n   * if successful redirects to the fixed deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevActivatedOnDate: Date = this.activateFixedDepositsAccountForm.value.activatedOnDate;\r\n    this.activateFixedDepositsAccountForm.patchValue({\r\n      activatedOnDate: this.datePipe.transform(prevActivatedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.activateFixedDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'activate', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"activateFixedDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Activated On Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"activatedOnDatePicker\" required formControlName=\"activatedOnDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"activatedOnDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #activatedOnDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"activateFixedDepositsAccountForm.controls.activatedOnDate.hasError('required')\">\r\n            Activated On Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!activateFixedDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Add Fixed Deposits Charge component.\r\n * Fixed deposits endpoint is not supported so using Savings endpoint.\r\n */\r\n@Component({\r\n  selector: 'mifosx-add-charge-fixed-deposits-account',\r\n  templateUrl: './add-charge-fixed-deposits-account.component.html',\r\n  styleUrls: ['./add-charge-fixed-deposits-account.component.scss']\r\n})\r\nexport class AddChargeFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Add Fixed Deposits Charge form. */\r\n  fixedDepositsChargeForm: FormGroup;\r\n  /** savings charge options. */\r\n  savingsChargeOptions: any;\r\n  /** savings Id of the savings account. */\r\n  fixedDepositAccountId: string;\r\n  /** charge details */\r\n  chargeDetails: any;\r\n\r\n  /**\r\n   * Retrieves charge template data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private savingsService: SavingsService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountActionData: any }) => {\r\n      this.savingsChargeOptions = data.fixedDepositsAccountActionData.chargeOptions;\r\n    });\r\n    this.fixedDepositAccountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Fixed Deposits Charge form.\r\n   */\r\n  ngOnInit() {\r\n    this.createFixedDepositsChargeForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  buildDependencies() {\r\n    this.fixedDepositsChargeForm.controls.chargeId.valueChanges.subscribe(chargeId => {\r\n      this.savingsService.getChargeTemplate(chargeId).subscribe((data: any) => {\r\n        this.chargeDetails = data;\r\n        const chargeTimeType = data.chargeTimeType.id;\r\n        if (data.chargeTimeType.value === 'Withdrawal Fee' || data.chargeTimeType.value === 'Saving No Activity Fee') {\r\n          this.chargeDetails.dueDateNotRequired = true;\r\n        }\r\n        if (data.chargeTimeType.value === 'Annual Fee' || data.chargeTimeType.value === 'Monthly Fee') {\r\n          this.chargeDetails.chargeTimeTypeAnnualOrMonth = true;\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && !this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.fixedDepositsChargeForm.addControl('dueDate', new FormControl('', Validators.required));\r\n        } else {\r\n          this.fixedDepositsChargeForm.removeControl('dueDate');\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.fixedDepositsChargeForm.addControl('feeOnMonthDay', new FormControl('', Validators.required));\r\n        } else {\r\n          this.fixedDepositsChargeForm.removeControl('feeOnMonthDay');\r\n        }\r\n        if (chargeTimeType.value === 'Monthly Fee') {\r\n          this.fixedDepositsChargeForm.addControl('feeInterval', new FormControl(data.feeInterval, Validators.required));\r\n        } else {\r\n          this.fixedDepositsChargeForm.removeControl('feeInterval');\r\n        }\r\n        this.fixedDepositsChargeForm.patchValue({\r\n          'amount': data.amount,\r\n          'chargeCalculationType': data.chargeCalculationType.id,\r\n          'chargeTimeType': data.chargeTimeType.id\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the Fixed Deposits Charge form.\r\n   */\r\n  createFixedDepositsChargeForm() {\r\n    this.fixedDepositsChargeForm = this.formBuilder.group({\r\n      'chargeId': ['', Validators.required],\r\n      'amount': ['', Validators.required],\r\n      'chargeCalculationType': [{ value: '', disabled: true }],\r\n      'chargeTimeType': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits savings charge.\r\n   */\r\n  submit() {\r\n    const savingsCharge = this.fixedDepositsChargeForm.value;\r\n    savingsCharge.locale = this.settingsService.language.code;\r\n    if (!savingsCharge.feeInterval) {\r\n      savingsCharge.feeInterval = this.chargeDetails.feeInterval;\r\n    }\r\n    if (this.chargeDetails.dueDateNotRequired !== true) {\r\n      if (this.chargeDetails.chargeTimeTypeAnnualOrMonth === true) {\r\n        const monthDayFormat = 'MMMM-dd'; // TODO: Update once language and date settings are setup\r\n        savingsCharge.monthDayFormat = monthDayFormat;\r\n        if (savingsCharge.feeOnMonthDay) {\r\n          const prevDate = this.fixedDepositsChargeForm.value.feeOnMonthDay;\r\n          savingsCharge.feeOnMonthDay = this.datePipe.transform(prevDate, monthDayFormat);\r\n        }\r\n      } else {\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        savingsCharge.dateFormat = dateFormat;\r\n        if (savingsCharge.dueDate) {\r\n          const prevDate = this.fixedDepositsChargeForm.value.dueDate;\r\n          savingsCharge.dueDate = this.datePipe.transform(prevDate, dateFormat);\r\n        }\r\n      }\r\n    }\r\n    this.savingsService.createSavingsCharge(this.fixedDepositAccountId, 'charges', savingsCharge).subscribe( () => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"fixedDepositsChargeForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n          <mat-form-field>\r\n            <mat-label>Charge</mat-label>\r\n            <mat-select required formControlName=\"chargeId\">\r\n              <mat-option *ngFor=\"let savingsCharge of savingsChargeOptions\" [value]=\"savingsCharge.id\">\r\n                {{ savingsCharge.name + ' (' + savingsCharge.currency.name + ')' }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"fixedDepositsChargeForm.controls.chargeId.hasError('required')\">\r\n              Charge is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div *ngIf=\"chargeDetails\" fxLayout=\"column\">\r\n\r\n            <mat-form-field>\r\n              <mat-label>Amount</mat-label>\r\n              <input type=number required matInput formControlName=\"amount\" />\r\n              <mat-error *ngIf=\"fixedDepositsChargeForm.controls.amount.hasError('required')\">\r\n                Amount is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge Calculation</mat-label>\r\n              <mat-select formControlName=\"chargeCalculationType\">\r\n                <mat-option *ngFor=\"let chargeCalculation of chargeDetails.chargeCalculationTypeOptions\"\r\n                  [value]=\"chargeCalculation.id\">\r\n                  {{ chargeCalculation.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge time type</mat-label>\r\n              <mat-select formControlName=\"chargeTimeType\">\r\n                <mat-option *ngFor=\"let chargeTime of chargeDetails.chargeTimeTypeOptions\" [value]=\"chargeTime.id\">\r\n                  {{ chargeTime.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"fixedDepositsChargeForm.contains('dueDate')\">\r\n              <mat-label>Due for collection on</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\" required\r\n                formControlName=\"dueDate\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dueDatePicker></mat-datepicker>\r\n              <mat-error *ngIf=\"fixedDepositsChargeForm.controls.dueDate.hasError('required')\">\r\n                Due for collection on is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"fixedDepositsChargeForm.contains('feeOnMonthDay')\">\r\n              <mat-label>Due On</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"feeOnMonthDayPicker\" required\r\n                formControlName=\"feeOnMonthDay\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"feeOnMonthDayPicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #feeOnMonthDayPicker></mat-datepicker>\r\n              <mat-error *ngIf=\"fixedDepositsChargeForm.controls.feeOnMonthDay.hasError('required')\">\r\n                Due Date is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"fixedDepositsChargeForm.contains('feeInterval')\">\r\n              <mat-label>Repeats Every</mat-label>\r\n              <input matInput formControlName=\"feeInterval\" />\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!fixedDepositsChargeForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from 'app/deposits/fixed-deposits/fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-fixed-deposits-account',\r\n  templateUrl: './approve-fixed-deposits-account.component.html',\r\n  styleUrls: ['./approve-fixed-deposits-account.component.scss']\r\n})\r\nexport class ApproveFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Approve Fixed Deposits Account form. */\r\n  approveFixedDepositsAccountForm: FormGroup;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the approve fixed deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createApproveFixedDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the approve fixed deposits account form.\r\n   */\r\n  createApproveFixedDepositsAccountForm() {\r\n    this.approveFixedDepositsAccountForm = this.formBuilder.group({\r\n      'approvedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and approves the fixed deposit account,\r\n   * if successful redirects to the fixed deposit account.\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevApprovedOnDate: Date = this.approveFixedDepositsAccountForm.value.approvedOnDate;\r\n    this.approveFixedDepositsAccountForm.patchValue({\r\n      approvedOnDate: this.datePipe.transform(prevApprovedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.approveFixedDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'approve', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"approveFixedDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"approvedOnDatePicker\" required formControlName=\"approvedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"approvedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #approvedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"approveFixedDepositsAccountForm.controls.approvedOnDate.hasError('required')\">\r\n              Approved On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!approveFixedDepositsAccountForm\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../../fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Close On Maturity Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-close-fixed-deposits-account',\r\n  templateUrl: './close-fixed-deposits-account.component.html',\r\n  styleUrls: ['./close-fixed-deposits-account.component.scss']\r\n})\r\nexport class CloseFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Close on maturity FD Account form. */\r\n  closeOnMaturityAccountForm: FormGroup;\r\n  /** Savings Account Data */\r\n  savingsAccountsData: any;\r\n  /** On account Closure Options */\r\n  onAccountClosureOptions: any;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n  /** Maturity Amount */\r\n  maturityAmount: any;\r\n\r\n  /**\r\n   * Fetches close action data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { fixedDepositsAccountActionData: any }) => {\r\n      this.savingsAccountsData = data.fixedDepositsAccountActionData.savingsAccounts;\r\n      this.onAccountClosureOptions = data.fixedDepositsAccountActionData.onAccountClosureOptions;\r\n      this.maturityAmount = data.fixedDepositsAccountActionData.maturityAmount;\r\n    });\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the close on maturity fd account form.\r\n   */\r\n  ngOnInit() {\r\n    this.createCloseOnMaturityAccountForm();\r\n    this.addTransferDetails();\r\n  }\r\n\r\n  /**\r\n   * Creates the close on maturity fd account form.\r\n   */\r\n  createCloseOnMaturityAccountForm() {\r\n    this.closeOnMaturityAccountForm = this.formBuilder.group({\r\n      'closedOnDate': ['', Validators.required],\r\n      'maturityAmount': [{value: this.maturityAmount, disabled: true}],\r\n      'onAccountClosureId': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes of `onAccountClosureId` adds and removes transfer details accordingly.\r\n   */\r\n  addTransferDetails() {\r\n    this.closeOnMaturityAccountForm.get('onAccountClosureId').valueChanges.subscribe((id: any) => {\r\n      if (id === 200) {\r\n        this.closeOnMaturityAccountForm.addControl('toSavingsAccountId', new FormControl('', Validators.required));\r\n        this.closeOnMaturityAccountForm.addControl('transferDescription', new FormControl(''));\r\n      } else {\r\n        this.closeOnMaturityAccountForm.removeControl('toSavingsAccountId');\r\n        this.closeOnMaturityAccountForm.removeControl('transferDescription');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and close the fd account on maturity,\r\n   * if successful redirects to the fd account.\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevClosedDate: Date = this.closeOnMaturityAccountForm.value.closedOnDate;\r\n    this.closeOnMaturityAccountForm.patchValue({\r\n      closedOnDate: this.datePipe.transform(prevClosedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.closeOnMaturityAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'close', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeOnMaturityAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedOnDatePicker\" required formControlName=\"closedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeOnMaturityAccountForm.controls.closedOnDate.hasError('required')\">\r\n              Closed On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Maturity Amount</mat-label>\r\n            <input type=number matInput formControlName=\"maturityAmount\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Action</mat-label>\r\n            <mat-select required formControlName=\"onAccountClosureId\">\r\n              <mat-option *ngFor=\"let closureOption of onAccountClosureOptions\" [value]=\"closureOption.id\">\r\n                {{ closureOption.value }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"closeOnMaturityAccountForm.controls.onAccountClosureId.hasError('required')\">\r\n              Account action is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"closeOnMaturityAccountForm.contains('toSavingsAccountId')\">\r\n            <mat-label>Transfer to Savings</mat-label>\r\n            <mat-select required formControlName=\"toSavingsAccountId\">\r\n              <mat-option *ngFor=\"let account of savingsAccountsData\" [value]=\"account.id\">\r\n                {{ account.accountNo }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"closeOnMaturityAccountForm.controls.toSavingsAccountId.hasError('required')\">\r\n              Transfer to savings account is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"closeOnMaturityAccountForm.contains('transferDescription')\">\r\n            <mat-label>Transfer Description</mat-label>\r\n            <input matInput formControlName=\"transferDescription\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!closeOnMaturityAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Fixed deposits account actions component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-fixed-deposits-account-actions',\r\n  templateUrl: './fixed-deposits-account-actions.component.html',\r\n  styleUrls: ['./fixed-deposits-account-actions.component.scss']\r\n})\r\nexport class FixedDepositsAccountActionsComponent {\r\n\r\n  /** Flag object to store possible actions and render appropriate UI to the user */\r\n  actions: {\r\n    'Approve': boolean\r\n    'Reject': boolean\r\n    'Activate': boolean\r\n    'Close': boolean\r\n    'Undo Approval': boolean\r\n    'Add Charge': boolean\r\n    'Premature Close': boolean\r\n    'Withdraw By Client': boolean\r\n  } = {\r\n    'Approve': false,\r\n    'Reject': false,\r\n    'Activate': false,\r\n    'Close': false,\r\n    'Undo Approval': false,\r\n    'Add Charge': false,\r\n    'Premature Close': false,\r\n    'Withdraw By Client': false\r\n  };\r\n\r\n  /**\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    const name = this.route.snapshot.params['name'];\r\n    this.actions[name] = true;\r\n  }\r\n\r\n}\r\n","<mifosx-approve-fixed-deposits-account *ngIf=\"actions['Approve']\"></mifosx-approve-fixed-deposits-account>\r\n<mifosx-reject-fixed-deposits-account *ngIf=\"actions['Reject']\"></mifosx-reject-fixed-deposits-account>\r\n<mifosx-activate-fixed-deposits-account *ngIf=\"actions['Activate']\"></mifosx-activate-fixed-deposits-account>\r\n<mifosx-undo-approval-fixed-deposits-account *ngIf=\"actions['Undo Approval']\"></mifosx-undo-approval-fixed-deposits-account>\r\n<mifosx-withdraw-by-client-fixed-deposits-account *ngIf=\"actions['Withdraw By Client']\"></mifosx-withdraw-by-client-fixed-deposits-account>\r\n<mifosx-add-charge-fixed-deposits-account *ngIf=\"actions['Add Charge']\"></mifosx-add-charge-fixed-deposits-account>\r\n<mifosx-premature-close-fixed-deposits-account *ngIf=\"actions['Premature Close']\"></mifosx-premature-close-fixed-deposits-account>\r\n<mifosx-close-fixed-deposits-account *ngIf=\"actions['Close']\"></mifosx-close-fixed-deposits-account>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from '../../fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Premature Close Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-premature-close-fixed-deposits-account',\r\n  templateUrl: './premature-close-fixed-deposits-account.component.html',\r\n  styleUrls: ['./premature-close-fixed-deposits-account.component.scss']\r\n})\r\nexport class PrematureCloseFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Premature Close FD Account form. */\r\n  prematureCloseAccountForm: FormGroup;\r\n  /** Savings Account Data */\r\n  savingsAccountsData: any;\r\n  /** On account Closure Options */\r\n  onAccountClosureOptions: any;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n  /** Form submission event */\r\n  isSubmitted = false;\r\n\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private fixedDepositsService: FixedDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the premature close fd account form.\r\n   */\r\n  ngOnInit() {\r\n    this.createPrematureCloseAccountForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  /**\r\n   * Creates the premature close fd account form.\r\n   */\r\n  createPrematureCloseAccountForm() {\r\n    this.prematureCloseAccountForm = this.formBuilder.group({\r\n      'closedOnDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes of parent control.\r\n   */\r\n  buildDependencies() {\r\n    this.prematureCloseAccountForm.get('closedOnDate').valueChanges.subscribe((value: Date) => {\r\n      if (!this.isSubmitted) {\r\n        this.calculatePrematureAmount(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculates prematue amount based on closed on date.\r\n   * @param {Date} date Premature Close Date\r\n   */\r\n  calculatePrematureAmount(date: Date) {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const data = {\r\n      closedOnDate: this.datePipe.transform(date, dateFormat),\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'calculatePrematureAmount', data)\r\n      .subscribe((response: any) => {\r\n        this.savingsAccountsData = response.savingsAccounts;\r\n        this.onAccountClosureOptions = response.onAccountClosureOptions;\r\n        this.prematureCloseAccountForm.addControl('maturityAmount', new FormControl({ value: '', disabled: true }));\r\n        this.prematureCloseAccountForm.addControl('onAccountClosureId', new FormControl('', Validators.required));\r\n        this.prematureCloseAccountForm.addControl('note', new FormControl(''));\r\n        this.prematureCloseAccountForm.get('maturityAmount').patchValue(response.maturityAmount);\r\n        this.addTransferDetails();\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes of `onAccountClosureId` adds and removes transfer details accordingly.\r\n   */\r\n  addTransferDetails() {\r\n    this.prematureCloseAccountForm.get('onAccountClosureId').valueChanges.subscribe((id: any) => {\r\n      if (id === 200) {\r\n        this.prematureCloseAccountForm.addControl('toSavingsAccountId', new FormControl('', Validators.required));\r\n        this.prematureCloseAccountForm.addControl('transferDescription', new FormControl(''));\r\n      } else {\r\n        this.prematureCloseAccountForm.removeControl('toSavingsAccountId');\r\n        this.prematureCloseAccountForm.removeControl('transferDescription');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and premature closes the fd account,\r\n   * if successful redirects to the fd account.\r\n   */\r\n  submit() {\r\n    this.isSubmitted = true;\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevClosedDate: Date = this.prematureCloseAccountForm.value.closedOnDate;\r\n    this.prematureCloseAccountForm.patchValue({\r\n      closedOnDate: this.datePipe.transform(prevClosedDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.prematureCloseAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'prematureClose', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"prematureCloseAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Premature Close Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedOnDatePicker\" required formControlName=\"closedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"prematureCloseAccountForm.controls.closedOnDate.hasError('required')\">\r\n              Premature Close Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"prematureCloseAccountForm.controls.maturityAmount\">\r\n            <mat-label>Maturity Amount</mat-label>\r\n            <input type=number matInput formControlName=\"maturityAmount\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"prematureCloseAccountForm.contains('onAccountClosureId')\">\r\n            <mat-label>Action</mat-label>\r\n            <mat-select required formControlName=\"onAccountClosureId\">\r\n              <mat-option *ngFor=\"let closureOption of onAccountClosureOptions\" [value]=\"closureOption.id\">\r\n                {{ closureOption.value }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"prematureCloseAccountForm.controls.onAccountClosureId.hasError('required')\">\r\n              Account action is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"prematureCloseAccountForm.contains('toSavingsAccountId')\">\r\n            <mat-label>Transfer to Savings</mat-label>\r\n            <mat-select required formControlName=\"toSavingsAccountId\">\r\n              <mat-option *ngFor=\"let account of savingsAccountsData\" [value]=\"account.id\">\r\n                {{ account.accountNo }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"prematureCloseAccountForm.controls.toSavingsAccountId.hasError('required')\">\r\n              Transfer to savings account is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"prematureCloseAccountForm.contains('transferDescription')\">\r\n            <mat-label>Transfer Description</mat-label>\r\n            <input matInput formControlName=\"transferDescription\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"prematureCloseAccountForm.contains('note')\">\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!prematureCloseAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from 'app/deposits/fixed-deposits/fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Reject Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-fixed-deposits-account',\r\n  templateUrl: './reject-fixed-deposits-account.component.html',\r\n  styleUrls: ['./reject-fixed-deposits-account.component.scss']\r\n})\r\nexport class RejectFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Reject Fixed Deposit Account form. */\r\n  rejectFixedDepositsAccountForm: FormGroup;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the reject fixed deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createRejectFixedDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the reject fixed deposits account form.\r\n   */\r\n  createRejectFixedDepositsAccountForm() {\r\n    this.rejectFixedDepositsAccountForm = this.formBuilder.group({\r\n      'rejectedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and rejects the fixed deposit account,\r\n   * if successful redirects to the fixed deposit account.\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRejectedOnDate: Date = this.rejectFixedDepositsAccountForm.value.rejectedOnDate;\r\n    this.rejectFixedDepositsAccountForm.patchValue({\r\n      rejectedOnDate: this.datePipe.transform(prevRejectedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.rejectFixedDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'reject', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rejectFixedDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Rejected On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rejectedOnDatePicker\" required formControlName=\"rejectedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rejectedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rejectedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rejectFixedDepositsAccountForm.controls.rejectedOnDate.hasError('required')\">\r\n              Rejected On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!rejectFixedDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/**\r\n * Undo Approval Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-approval-fixed-deposits-account',\r\n  templateUrl: './undo-approval-fixed-deposits-account.component.html',\r\n  styleUrls: ['./undo-approval-fixed-deposits-account.component.scss']\r\n})\r\nexport class UndoApprovalFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Undo Approval Fixed Deposits Account form. */\r\n  undoApprovalFixedDepositsAccountForm: FormGroup;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * Fixed deposits endpoint is not supported so using Savings endpoint.\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval fixed deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createUndoApprovalFixedDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval fixed deposits account form.\r\n   */\r\n  createUndoApprovalFixedDepositsAccountForm() {\r\n    this.undoApprovalFixedDepositsAccountForm = this.formBuilder.group({\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and undo the approval of fixed deposits account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    const data = {\r\n      ...this.undoApprovalFixedDepositsAccountForm.value,\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'undoapproval', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"undoApprovalFixedDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Note</mat-label>\r\n          <textarea matInput formControlName=\"note\"></textarea>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!undoApprovalFixedDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { FixedDepositsService } from 'app/deposits/fixed-deposits/fixed-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Withdraw By Client Fixed Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-withdraw-by-client-fixed-deposits-account',\r\n  templateUrl: './withdraw-by-client-fixed-deposits-account.component.html',\r\n  styleUrls: ['./withdraw-by-client-fixed-deposits-account.component.scss']\r\n})\r\nexport class WithdrawByClientFixedDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Withdraw Fixed Deposits Account form. */\r\n  withdrawFixedDepositsAccountForm: FormGroup;\r\n  /** Fixed Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {FixedDepositsService} fixedDepositsService Fixed Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private fixedDepositsService: FixedDepositsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['fixedDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw fixed deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createWithdrawFixedDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw fixed deposits account form.\r\n   */\r\n  createWithdrawFixedDepositsAccountForm() {\r\n    this.withdrawFixedDepositsAccountForm = this.formBuilder.group({\r\n      'withdrawnOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and withdraws the fixed deposit account by client,\r\n   * if successful redirects to the fixed deposit account.\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevWithdrawnOnDate: Date = this.withdrawFixedDepositsAccountForm.value.withdrawnOnDate;\r\n    this.withdrawFixedDepositsAccountForm.patchValue({\r\n      withdrawnOnDate: this.datePipe.transform(prevWithdrawnOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.withdrawFixedDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.fixedDepositsService.executeFixedDepositsAccountCommand(this.accountId, 'withdrawnByApplicant', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"withdrawFixedDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Withdrawn On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"withdrawnOnDatePicker\" required formControlName=\"withdrawnOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"withdrawnOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #withdrawnOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"withdrawFixedDepositsAccountForm.controls.withdrawnOnDate.hasError('required')\">\r\n              Withdrawn On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!withdrawFixedDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/** Translation Imports */\r\nimport { extract } from 'app/core/i18n/i18n.service';\r\n\r\n/** Custom Components */\r\nimport { FixedDepositAccountViewComponent } from './fixed-deposit-account-view/fixed-deposit-account-view.component';\r\nimport { InterestRateChartTabComponent } from './fixed-deposit-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component';\r\nimport { TransactionsTabComponent } from './fixed-deposit-account-view/transactions-tab/transactions-tab.component';\r\nimport { ChargesTabComponent } from './fixed-deposit-account-view/charges-tab/charges-tab.component';\r\nimport { StandingInstructionsTabComponent } from './fixed-deposit-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { DatatableTabsComponent } from './fixed-deposit-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { FixedDepositsAccountActionsComponent } from './fixed-deposits-account-actions/fixed-deposits-account-actions.component';\r\nimport { ViewTransactionComponent } from './fixed-deposit-account-view/view-transaction/view-transaction.component';\r\nimport { CreateFixedDepositAccountComponent } from './create-fixed-deposit-account/create-fixed-deposit-account.component';\r\nimport { EditFixedDepositAccountComponent } from './edit-fixed-deposit-account/edit-fixed-deposit-account.component';\r\n\r\n/** Custom Resolvers */\r\nimport { FixedDepositsAccountViewResolver } from './common-resolvers/fixed-deposit-account-view.resolver';\r\nimport { SavingsDatatableResolver } from 'app/savings/common-resolvers/savings-datatable.resolver';\r\nimport { SavingsDatatablesResolver } from 'app/savings/common-resolvers/savings-datatables.resolver';\r\nimport { FixedDepositsAccountTransactionResolver } from './common-resolvers/fixed-deposit-account-transaction.resolver';\r\nimport { FixedDepositsAccountActionsResolver } from './common-resolvers/fixed-deposit-account-actions.resolver';\r\nimport { FixedDepositsAccountTemplateResolver } from './common-resolvers/fixed-deposit-account-template.resolver';\r\nimport { FixedDepositsAccountAndTemplateResolver } from './common-resolvers/fixed-deposit-account-and-template.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: { title: extract('All Fixed Deposits'), breadcrumb: 'Fixed Deposits', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        data: { title: extract('Create Fixed Deposit Account'), breadcrumb: 'Create Fixed Deposit Account' },\r\n        component: CreateFixedDepositAccountComponent,\r\n        resolve: {\r\n          fixedDepositsAccountTemplate: FixedDepositsAccountTemplateResolver\r\n        }\r\n      },\r\n      {\r\n        path: ':fixedDepositAccountId',\r\n        data: { title: extract('Fixed Deposit Account View'), routeParamBreadcrumb: 'fixedDepositAccountId' },\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: FixedDepositAccountViewComponent,\r\n            resolve: {\r\n              fixedDepositsAccountData: FixedDepositsAccountViewResolver,\r\n              savingsDatatables: SavingsDatatablesResolver\r\n            },\r\n            children: [\r\n              {\r\n                path: 'interest-rate-chart',\r\n                component: InterestRateChartTabComponent,\r\n                data: { title: extract('Fixed Deposit Account Interest Rate Chart'), breadcrumb: 'Interest Rate Chart', routeParamBreadcrumb: false },\r\n              },\r\n              {\r\n                path: 'transactions',\r\n                component: TransactionsTabComponent,\r\n                data: { title: extract('Fixed Deposit Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n              },\r\n              {\r\n                path: 'charges',\r\n                component: ChargesTabComponent,\r\n                data: { title: extract('Fixed Deposit Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'standing-instructions',\r\n                component: StandingInstructionsTabComponent,\r\n                data: { title: extract('Fixed Deposit Account Standing Instructions'), breadcrumb: 'Standing Instructions', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'datatables',\r\n                children: [\r\n                  {\r\n                    path: ':datatableName',\r\n                    component: DatatableTabsComponent,\r\n                    data: { title: extract('View Data Table'), routeParamBreadcrumb: 'datatableName' },\r\n                    resolve: {\r\n                      savingsDatatable: SavingsDatatableResolver\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'edit',\r\n            data: { title: extract('Edit Fixed Deposit Account'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n            component: EditFixedDepositAccountComponent,\r\n            resolve: {\r\n              fixedDepositsAccountAndTemplate: FixedDepositsAccountAndTemplateResolver\r\n            }\r\n          },\r\n          {\r\n            path: 'transactions',\r\n            data: { title: extract('Fixed Deposits Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: '../transactions', pathMatch: 'prefix'\r\n              },\r\n              {\r\n                path: 'account-transfers',\r\n                loadChildren: () => import('../../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n              },\r\n              {\r\n                path: ':id',\r\n                data: { routeParamBreadcrumb: 'id' },\r\n                children: [\r\n                  {\r\n                    path: '',\r\n                    component: ViewTransactionComponent,\r\n                    resolve: {\r\n                      fixedDepositsAccountTransaction: FixedDepositsAccountTransactionResolver\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'actions/:name',\r\n            data: { title: extract('Fixed Deposits Account Actions'), routeParamBreadcrumb: 'name' },\r\n            component: FixedDepositsAccountActionsComponent,\r\n            resolve: {\r\n              fixedDepositsAccountActionData: FixedDepositsAccountActionsResolver\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    FixedDepositsAccountViewResolver,\r\n    SavingsDatatableResolver,\r\n    SavingsDatatablesResolver,\r\n    FixedDepositsAccountTransactionResolver,\r\n    FixedDepositsAccountActionsResolver,\r\n    FixedDepositsAccountTemplateResolver,\r\n    FixedDepositsAccountAndTemplateResolver\r\n  ]\r\n})\r\nexport class FixedDepositsRoutingModule { }\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Modules */\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { PipesModule } from 'app/pipes/pipes.module';\r\nimport { DirectivesModule } from 'app/directives/directives.module';\r\nimport { FixedDepositsRoutingModule } from './fixed-deposits-routing.module';\r\n\r\n/** Custom Components */\r\nimport { FixedDepositAccountViewComponent } from './fixed-deposit-account-view/fixed-deposit-account-view.component';\r\nimport { TransactionsTabComponent } from './fixed-deposit-account-view/transactions-tab/transactions-tab.component';\r\nimport { ChargesTabComponent } from './fixed-deposit-account-view/charges-tab/charges-tab.component';\r\nimport { StandingInstructionsTabComponent } from './fixed-deposit-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { InterestRateChartTabComponent } from './fixed-deposit-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component';\r\nimport { DatatableTabsComponent } from './fixed-deposit-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { MultiRowComponent } from './fixed-deposit-account-view/datatable-tabs/multi-row/multi-row.component';\r\nimport { SingleRowComponent } from './fixed-deposit-account-view/datatable-tabs/single-row/single-row.component';\r\nimport { FixedDepositsAccountActionsComponent } from './fixed-deposits-account-actions/fixed-deposits-account-actions.component';\r\nimport { ApproveFixedDepositsAccountComponent } from './fixed-deposits-account-actions/approve-fixed-deposits-account/approve-fixed-deposits-account.component';\r\nimport { RejectFixedDepositsAccountComponent } from './fixed-deposits-account-actions/reject-fixed-deposits-account/reject-fixed-deposits-account.component';\r\nimport { PostInterestDialogComponent } from './fixed-deposit-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component';\r\nimport { CalculateInterestDialogComponent } from './fixed-deposit-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component';\r\nimport { ToggleWithholdTaxDialogComponent } from './fixed-deposit-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component';\r\nimport { ActivateFixedDepositsAccountComponent } from './fixed-deposits-account-actions/activate-fixed-deposits-account/activate-fixed-deposits-account.component';\r\nimport { UndoApprovalFixedDepositsAccountComponent } from './fixed-deposits-account-actions/undo-approval-fixed-deposits-account/undo-approval-fixed-deposits-account.component';\r\nimport { WithdrawByClientFixedDepositsAccountComponent } from './fixed-deposits-account-actions/withdraw-by-client-fixed-deposits-account/withdraw-by-client-fixed-deposits-account.component';\r\nimport { ViewTransactionComponent } from './fixed-deposit-account-view/view-transaction/view-transaction.component';\r\nimport { WaiveChargeDialogComponent } from './fixed-deposit-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component';\r\nimport { InactivateChargeDialogComponent } from './fixed-deposit-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component';\r\nimport { AddChargeFixedDepositsAccountComponent } from './fixed-deposits-account-actions/add-charge-fixed-deposits-account/add-charge-fixed-deposits-account.component';\r\nimport { PrematureCloseFixedDepositsAccountComponent } from './fixed-deposits-account-actions/premature-close-fixed-deposits-account/premature-close-fixed-deposits-account.component';\r\nimport { CloseFixedDepositsAccountComponent } from './fixed-deposits-account-actions/close-fixed-deposits-account/close-fixed-deposits-account.component';\r\nimport { CreateFixedDepositAccountComponent } from './create-fixed-deposit-account/create-fixed-deposit-account.component';\r\nimport { FixedDepositAccountDetailsStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-details-step/fixed-deposit-account-details-step.component';\r\nimport { FixedDepositAccountTermsStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-terms-step/fixed-deposit-account-terms-step.component';\r\nimport { FixedDepositAccountChargesStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-charges-step/fixed-deposit-account-charges-step.component';\r\nimport { FixedDepositAccountSettingsStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-settings-step/fixed-deposit-account-settings-step.component';\r\nimport { FixedDepositAccountInterestRateChartStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-interest-rate-chart-step/fixed-deposit-account-interest-rate-chart-step.component';\r\nimport { FixedDepositAccountPreviewStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-preview-step/fixed-deposit-account-preview-step.component';\r\nimport { FixedDepositAccountCurrencyStepComponent } from './fixed-deposit-account-stepper/fixed-deposit-account-currency-step/fixed-deposit-account-currency-step.component';\r\nimport { EditFixedDepositAccountComponent } from './edit-fixed-deposit-account/edit-fixed-deposit-account.component';\r\n\r\n/**\r\n * Fixed Deposits Module\r\n *\r\n * All components related to fixed deposits functions should be declared here.\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    FixedDepositAccountViewComponent,\r\n    TransactionsTabComponent,\r\n    ChargesTabComponent,\r\n    StandingInstructionsTabComponent,\r\n    InterestRateChartTabComponent,\r\n    DatatableTabsComponent,\r\n    MultiRowComponent,\r\n    SingleRowComponent,\r\n    FixedDepositsAccountActionsComponent,\r\n    ApproveFixedDepositsAccountComponent,\r\n    RejectFixedDepositsAccountComponent,\r\n    PostInterestDialogComponent,\r\n    CalculateInterestDialogComponent,\r\n    ToggleWithholdTaxDialogComponent,\r\n    ActivateFixedDepositsAccountComponent,\r\n    UndoApprovalFixedDepositsAccountComponent,\r\n    WithdrawByClientFixedDepositsAccountComponent,\r\n    ViewTransactionComponent,\r\n    WaiveChargeDialogComponent,\r\n    InactivateChargeDialogComponent,\r\n    AddChargeFixedDepositsAccountComponent,\r\n    PrematureCloseFixedDepositsAccountComponent,\r\n    CloseFixedDepositsAccountComponent,\r\n    CreateFixedDepositAccountComponent,\r\n    FixedDepositAccountDetailsStepComponent,\r\n    FixedDepositAccountTermsStepComponent,\r\n    FixedDepositAccountChargesStepComponent,\r\n    FixedDepositAccountSettingsStepComponent,\r\n    FixedDepositAccountInterestRateChartStepComponent,\r\n    FixedDepositAccountPreviewStepComponent,\r\n    FixedDepositAccountCurrencyStepComponent,\r\n    EditFixedDepositAccountComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    PipesModule,\r\n    DirectivesModule,\r\n    FixedDepositsRoutingModule\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class FixedDepositsModule { }\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Fixed Deposits Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FixedDepositsService {\r\n\r\n  /**\r\n   * @param {HttpClient} http HttpClient\r\n   */\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * @param accountId Account Id.\r\n   * @returns {Observable<any>} Fixed Deposits data.\r\n   */\r\n  getFixedDepositsAccountData(accountId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', 'all');\r\n    return this.http.get(`/fixeddepositaccounts/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId fixed deposits account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteFixedDepositsAccount(accountId: string): Observable<any> {\r\n    return this.http.delete(`/fixeddepositaccounts/${accountId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeFixedDepositsAccountCommand(accountId: string, command: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/fixeddepositaccounts/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Fixed Deposits Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getFixedDepositsAccountTransaction(accountId: string, transactionId: string): Observable<any> {\r\n    return this.http.get(`/fixeddepositaccounts/${accountId}/transactions/${transactionId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Fixed Deposits Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeFixedDepositsAccountTransactionsCommand(accountId: string, command: string, data: any, transactionId?: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/fixeddepositaccounts/${accountId}/transactions/${transactionId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Fixed Deposits Account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getFixedDepositsAccountClosureTemplate(accountId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', 'close');\r\n    return this.http.get(`/fixeddepositaccounts/${accountId}/template`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id assosciated with fixed deposits account.\r\n   * @returns {Observable<any>} Fixed Deposits account template.\r\n   */\r\n  getFixedDepositsAccountTemplate(clientId: string, productId?: string): Observable<any> {\r\n    let httpParams = new HttpParams().set('clientId', clientId);\r\n    httpParams = productId ? httpParams.set('productId', productId) : httpParams;\r\n    return this.http.get('/fixeddepositaccounts/template', { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Fixed Deposits Account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getFixedDepositsAccountAndTemplate(accountId: any) {\r\n    const httpParams = new HttpParams().set('associations', 'charges,+linkedAccount')\r\n      .set('template', 'true');\r\n    return this.http.get(`/fixeddepositaccounts/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param fixedDepositAccount Fixed Deposit Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  createFixedDepositAccount(fixedDepositAccount: any): Observable<any> {\r\n    return this.http.post(`/fixeddepositaccounts`, fixedDepositAccount);\r\n  }\r\n\r\n  /**\r\n   * @param {any} accountId Account Id\r\n   * @param {any} fixedDepositAccount Fixed Deposit Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  updateFixedDepositAccount(accountId: any, fixedDepositAccount: any): Observable<any> {\r\n    return this.http.put(`/fixeddepositaccounts/${accountId}`, fixedDepositAccount);\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(\r\n    clientId: string, clientName: string, fromAccountId: string,\r\n    locale: string, dateFormat: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('clientId', clientId)\r\n      .set('clientName', clientName)\r\n      .set('fromAccountId', fromAccountId)\r\n      .set('fromAccountType', '2')\r\n      .set('locale', locale)\r\n      .set('dateFormat', dateFormat);\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}