{"version":3,"sources":["./src/app/account-transfers/account-transfers.service.ts","./src/app/savings/common-resolvers/savings-datatable.resolver.ts","./src/app/savings/common-resolvers/savings-datatables.resolver.ts","./src/app/savings/savings.service.ts"],"names":[],"mappings":"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","file":"default~deposits-fixed-deposits-fixed-deposits-module~deposits-recurring-deposits-recurring-deposits~1e689b82.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Account Transfers Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountTransfersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * @params standingInstructionsId\r\n   * Returns the details of a particular Standing Instruction\r\n   */\r\n  getStandingInstructionsData(standingInstructionsId: any): Observable<any> {\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`);\r\n  }\r\n\r\n  getStandingInstructionsDataAndTemplate(standingInstructionsId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', 'template');\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`, { params: httpParams });\r\n  }\r\n\r\n  updateStandingInstructionsData(standinginstructionsId: any, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', 'update');\r\n    return this.http.put(`/standinginstructions/${standinginstructionsId}`, data, { params: httpParams });\r\n  }\r\n\r\n  getStandingInstructionsTemplate(clientId: any, officeId: any, accountTypeId: string, formValue?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('fromAccountType', accountTypeId)\r\n                                       .set('fromClientId', clientId)\r\n                                       .set('fromOfficeId', officeId);\r\n    if (formValue) {\r\n      const propNames = Object.getOwnPropertyNames(formValue);\r\n      for (let i = 0; i < propNames.length; i++) {\r\n        const propName = propNames[i];\r\n        httpParams = httpParams.set(propName, formValue[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/standinginstructions/template`, { params: httpParams });\r\n  }\r\n\r\n  createStandingInstructions(data: Object): Observable<any> {\r\n    return this.http.post(`/standinginstructions`, data);\r\n  }\r\n\r\n  newAccountTranferResource(id: any, accountTypeId: any, formValue?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('fromAccountId', id)\r\n      .set('fromAccountType', accountTypeId);\r\n    if (formValue) {\r\n      const propNames = Object.getOwnPropertyNames(formValue);\r\n      for (let i = 0; i < propNames.length; i++) {\r\n        const propName = propNames[i];\r\n        httpParams = httpParams.set(propName, formValue[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/accounttransfers/template`, { params: httpParams });\r\n\r\n  }\r\n\r\n  createAccountTransfer(data: any): Observable<any> {\r\n    return this.http.post(`/accounttransfers`, data);\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(searchData: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    const propNames = Object.getOwnPropertyNames(searchData);\r\n    for (let i = 0; i < propNames.length; i++) {\r\n      const propName = propNames[i];\r\n      if (!(searchData[propName] === '' || searchData[propName] === undefined || searchData[propName] === null)) {\r\n        httpParams = httpParams.set(propName, searchData[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n  deleteStandingInstrucions(id: any) {\r\n    const httpParams = new HttpParams().set('command', 'delete');\r\n    return this.http.delete(`/standinginstructions/${id}`, { params: httpParams });\r\n  }\r\n\r\n\r\n  getStandingInstructionsTransactions(standingInstructionsId: any, dateFormat: any, locale: any) {\r\n    const httpParams = new HttpParams().set('associations', 'transactions')\r\n                                        .set('dateFormat', dateFormat)\r\n                                        .set('limit', '14')\r\n                                        .set('locale', locale)\r\n                                        .set('offset', '0');\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`, { params: httpParams });\r\n  }\r\n\r\n  getViewAccountTransferDetails(transferId: any): Observable<any> {\r\n    return this.http.get(`/accounttransfers/${transferId}`);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Datatable data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsDatatableResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account's Datatable data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const accountId = route.parent.parent.paramMap.get('savingAccountId') || route.parent.parent.paramMap.get('fixedDepositAccountId') || route.parent.parent.paramMap.get('recurringDepositAccountId');\r\n    const datatableName = route.paramMap.get('datatableName');\r\n    return this.savingsService.getSavingsDatatable(accountId, datatableName);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Saving Accounts Datatables data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsDatatablesResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Saving Account's Datatables data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(): Observable<any> {\r\n    return this.savingsService.getSavingsDatatables();\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Savings Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SavingsService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * @param {string} savingAccountId is saving account's Id.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsTransactionTemplateResource(savingAccountId: string): Observable<any> {\r\n    return this.http.get(`/savingsaccounts/${savingAccountId}/transactions/template`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} savingAccountId saving account id.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsChargeTemplateResource(savingAccountId: string): Observable<any> {\r\n    return this.http.get(`/savingsaccounts/${savingAccountId}/charges/template`);\r\n  }\r\n\r\n  /**\r\n   * @param {any} savingsCharge to apply on a savings Account.\r\n   * @returns {Observable<any>}\r\n   */\r\n  createSavingsCharge(savingAccountId: string, resourceType: string, savingsCharge: any): Observable<any> {\r\n    return this.http.post(`/savingsaccounts/${savingAccountId}/${resourceType}`, savingsCharge);\r\n  }\r\n\r\n  /**\r\n   * @param {string} chargeId Charge ID of charge.\r\n   * @returns {Observable<any>} Charge.\r\n   */\r\n  getChargeTemplate(chargeId: string): Observable<any> {\r\n    const params = { template: 'true' };\r\n    return this.http.get(`/charges/${chargeId}`, { params: params });\r\n  }\r\n\r\n  /**\r\n   * @param accountId Savings Account Id of account to get data for.\r\n   * @returns {Observable<any>} Savings data.\r\n   */\r\n  getSavingsAccountData(accountId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', 'all' );\r\n    return this.http.get(`/savingsaccounts/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param accountId Savings Account Id of account to get data for.\r\n   * @returns {Observable<any>} Savings account and template.\r\n   */\r\n  getSavingsAccountAndTemplate(accountId: string, template: boolean): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('template', template.toString())\r\n      .set('associations', 'charges' );\r\n    return this.http.get(`/savingsaccounts/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(\r\n    clientId: string, clientName: string, fromAccountId: string,\r\n    locale: string, dateFormat: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('clientId', clientId)\r\n      .set('clientName', clientName)\r\n      .set('fromAccountId', fromAccountId)\r\n      .set('fromAccountType', '2')\r\n      .set('locale', locale)\r\n      .set('dateFormat', dateFormat);\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsDatatables(): Observable<any> {\r\n    const httpParams = new HttpParams().set('apptable', 'm_savings_account');\r\n    return this.http.get(`/datatables`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param accountId account Id of savings account to get datatable for.\r\n   * @param datatableName Data table name.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsDatatable(accountId: string, datatableName: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.get(`/datatables/${datatableName}/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param accountId account Id of savings account to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @param data Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  addSavingsDatatableEntry(accountId: string, datatableName: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.post(`/datatables/${datatableName}/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param accountId account Id of savings account to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @param data Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  editSavingsDatatableEntry(accountId: string, datatableName: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.put(`/datatables/${datatableName}/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param accountId account Id of savings account to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteDatatableContent(accountId: string, datatableName: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.delete(`/datatables/${datatableName}/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param entityId Entity Id assosciated with savings account.\r\n   * @returns {Observable<any>} Savings account template.\r\n   */\r\n  getSavingsAccountTemplate(entityId: string, productId?: string, isGroup?: boolean): Observable<any> {\r\n    let httpParams = new HttpParams().set( isGroup ? 'groupId' : 'clientId', entityId);\r\n    httpParams = productId ? httpParams.set('productId', productId) : httpParams;\r\n    return this.http.get('/savingsaccounts/template', { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {any} savingsAccount Savings Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  createSavingsAccount(savingsAccount: any): Observable<any> {\r\n    return this.http.post('/savingsaccounts', savingsAccount);\r\n  }\r\n\r\n  /**\r\n   * @param {any} savingsAccount Savings Account\r\n   * @returns {Observable<any>}\r\n   */\r\n  updateSavingsAccount(accountId: string, savingsAccount: any): Observable<any> {\r\n    return this.http.put(`/savingsaccounts/${accountId}`, savingsAccount);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId savings account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteSavingsAccount(accountId: string): Observable<any> {\r\n    return this.http.delete(`/savingsaccounts/${accountId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeSavingsAccountCommand(accountId: string, command: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/savingsaccounts/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeSavingsAccountUpdateCommand(accountId: string, command: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.put(`/savingsaccounts/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsAccountTransaction(accountId: string, transactionId: string): Observable<any> {\r\n    return this.http.get(`/savingsaccounts/${accountId}/transactions/${transactionId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsAccountTransactionTemplate(accountId: string, transactionId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('template', 'true');\r\n    return this.http.get(`/savingsaccounts/${accountId}/transactions/${transactionId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeSavingsAccountTransactionsCommand(accountId: string, command: string, data: any, transactionId?: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    if (transactionId) {\r\n      return this.http.post(`/savingsaccounts/${accountId}/transactions/${transactionId}`, data, { params: httpParams });\r\n    }\r\n    return this.http.post(`/savingsaccounts/${accountId}/transactions`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId savings account Id\r\n   * @param {string} chargeId savings charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getSavingsAccountCharge(accountId: string, chargeId: string): Observable<any> {\r\n    return this.http.get(`/savingsaccounts/${accountId}/charges/${chargeId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeSavingsAccountChargesCommand(accountId: string, command: string, data: any, chargeId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/savingsaccounts/${accountId}/charges/${chargeId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId  Savings Account Id\r\n   * @param {any} data Charge Data\r\n   * @param {any} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  editSavingsAccountCharge(accountId: string, data: any, chargeId: any): Observable<any> {\r\n    return this.http.put(`/savingsaccounts/${accountId}/charges/${chargeId}`, data);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId  Savings Account Id\r\n   * @param {any} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteSavingsAccountCharge(accountId: string, chargeId: any): Observable<any> {\r\n    return this.http.delete(`/savingsaccounts/${accountId}/charges/${chargeId}`);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}