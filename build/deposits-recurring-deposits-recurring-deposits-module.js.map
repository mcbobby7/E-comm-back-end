{"version":3,"sources":["./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposit-account-actions.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposit-account-and-template.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposit-account-transaction-template.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposit-account-transaction.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposits-account-data.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposits-account-template.resolver.ts","./src/app/deposits/recurring-deposits/common-resolvers/recurring-deposits-account-view.resolver.ts","./src/app/deposits/recurring-deposits/create-recurring-deposits-account/create-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/create-recurring-deposits-account/create-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/edit-recurring-deposit-account/edit-recurring-deposit-account.component.ts","./src/app/deposits/recurring-deposits/edit-recurring-deposit-account/edit-recurring-deposit-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/activate-recurring-deposits-account/activate-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/activate-recurring-deposits-account/activate-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/add-charge-recurring-deposits-account/add-charge-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/add-charge-recurring-deposits-account/add-charge-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/approve-recurring-deposits-account/approve-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/approve-recurring-deposits-account/approve-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/close-recurring-deposits-account/close-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/close-recurring-deposits-account/close-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/deposit-recurring-deposits-account/deposit-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/deposit-recurring-deposits-account/deposit-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/premature-close-recurring-deposit-account/premature-close-recurring-deposit-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/premature-close-recurring-deposit-account/premature-close-recurring-deposit-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/recurring-deposits-account-actions.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/recurring-deposits-account-actions.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/reject-recurring-deposits-account/reject-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/reject-recurring-deposits-account/reject-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/undo-approval-recurring-deposits-account/undo-approval-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/undo-approval-recurring-deposits-account/undo-approval-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/withdraw-by-client-recurring-deposits-account/withdraw-by-client-recurring-deposits-account.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-actions/withdraw-by-client-recurring-deposits-account/withdraw-by-client-recurring-deposits-account.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-charges-step/recurring-deposits-account-charges-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-charges-step/recurring-deposits-account-charges-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-currency-step/recurring-deposits-account-currency-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-currency-step/recurring-deposits-account-currency-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-details-step/recurring-deposits-account-details-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-details-step/recurring-deposits-account-details-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-interest-rate-chart-step/recurring-deposits-account-interest-rate-chart-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-interest-rate-chart-step/recurring-deposits-account-interest-rate-chart-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-preview-step/recurring-deposits-account-preview-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-preview-step/recurring-deposits-account-preview-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-settings-step/recurring-deposits-account-settings-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-settings-step/recurring-deposits-account-settings-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-terms-step/recurring-deposits-account-terms-step.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-stepper/recurring-deposits-account-terms-step/recurring-deposits-account-terms-step.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/charges-tab/charges-tab.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/charges-tab/charges-tab.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/datatable-tabs.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/datatable-tabs.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/multi-row/multi-row.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/multi-row/multi-row.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/single-row/single-row.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/datatable-tabs/single-row/single-row.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/recurring-deposits-account-view.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/recurring-deposits-account-view.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/recurring-deposits-buttons.config.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/standing-instructions-tab/standing-instructions-tab.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/standing-instructions-tab/standing-instructions-tab.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/edit-transaction/edit-transaction.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/edit-transaction/edit-transaction.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/transactions-tab.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/transactions-tab.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/view-transaction/view-transaction.component.ts","./src/app/deposits/recurring-deposits/recurring-deposits-account-view/transactions-tab/view-transaction/view-transaction.component.html","./src/app/deposits/recurring-deposits/recurring-deposits-routing.module.ts","./src/app/deposits/recurring-deposits/recurring-deposits.module.ts","./src/app/deposits/recurring-deposits/recurring-deposits.service.ts"],"names":[],"mappings":"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","file":"deposits-recurring-deposits-recurring-deposits-module.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * Recurring Deposits Account Actions data resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountActionsResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service.\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n    private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Recurring deposits account actions data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const actionName = route.paramMap.get('name');\r\n    const recurringDepositAccountId = route.paramMap.get('recurringDepositAccountId') || route.parent.parent.paramMap.get('recurringDepositAccountId');\r\n    switch (actionName) {\r\n      case 'Add Charge':\r\n        return this.savingsService.getSavingsChargeTemplateResource(recurringDepositAccountId);\r\n      case 'Close':\r\n        return this.recurringDepositsService.getRecurringDepositAccountActionResource(recurringDepositAccountId, 'close');\r\n      case 'Deposit':\r\n        return this.recurringDepositsService.getRecurringDepositAccountTransactionTemplateResource(recurringDepositAccountId, 'deposit');\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * Recurring Deposits Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountAndTemplateResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits service.\r\n     */\r\n    constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n    /**\r\n     * Returns the Recurring Deposits Account Template.\r\n     * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const recurringDepositAccountId = route.paramMap.get('recurringDepositAccountId');\r\n        return this.recurringDepositsService.getRecurringDepositsAccountAndTemplate(recurringDepositAccountId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * Recurring Deposits Account Transaction Template data resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountTransactionTemplateResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits service.\r\n     */\r\n    constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n    /**\r\n     * Returns the Recurring Deposits Account Transaction data.\r\n     * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const recurringDepositAccountId = route.parent.paramMap.get('recurringDepositAccountId');\r\n        const transactionId = route.paramMap.get('id');\r\n        return this.recurringDepositsService.getRecurringDepositsAccountTransactionTemplate(recurringDepositAccountId, transactionId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * Recurring Deposits Account Transaction data resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountTransactionResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits service.\r\n     */\r\n    constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n    /**\r\n     * Returns the Recurring Deposits Account Transaction data.\r\n     * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const recurringDepositAccountId = route.parent.paramMap.get('recurringDepositAccountId');\r\n        const transactionId = route.paramMap.get('id');\r\n        return this.recurringDepositsService.getRecurringDepositsAccountTransaction(recurringDepositAccountId, transactionId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * RecurringDeposits Account data resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountDataResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {RecurringDepositsService} RecurringDepositsService RecurringDeposits service.\r\n   */\r\n  constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n  /**\r\n   * Returns the RecurringDeposits Account data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const recurringDepositAccountId = route.parent.paramMap.get('recurringDepositAccountId');\r\n    return this.recurringDepositsService.getRecurringDepositsAccountData(recurringDepositAccountId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * Savings Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {recurringDepositsService} RecurringDepositsService Savings service.\r\n   */\r\n  constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n  /**\r\n   * Returns the Shares Account Template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const clientId = route.parent.parent.paramMap.get('clientId');\r\n    return this.recurringDepositsService.getRecurringDepositsAccountTemplate(clientId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\n\r\n/**\r\n * RecurringDeposits Account data resolver.\r\n */\r\n@Injectable()\r\nexport class RecurringDepositsAccountViewResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {RecurringDepositsService} RecurringDepositsService RecurringDeposits service.\r\n   */\r\n  constructor(private recurringDepositsService: RecurringDepositsService) { }\r\n\r\n  /**\r\n   * Returns the RecurringDeposits Account data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const recurringDepositAccountId = route.paramMap.get('recurringDepositAccountId');\r\n    return this.recurringDepositsService.getRecurringDepositsAccountData(recurringDepositAccountId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Step Components */\r\nimport { RecurringDepositsAccountDetailsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-details-step/recurring-deposits-account-details-step.component';\r\nimport { RecurringDepositsAccountTermsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-terms-step/recurring-deposits-account-terms-step.component';\r\nimport { RecurringDepositsAccountCurrencyStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-currency-step/recurring-deposits-account-currency-step.component';\r\nimport { RecurringDepositsAccountSettingsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-settings-step/recurring-deposits-account-settings-step.component';\r\nimport { RecurringDepositsAccountChargesStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-charges-step/recurring-deposits-account-charges-step.component';\r\n\r\n/**\r\n * Create new recurring deposit account\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-recurring-deposits-account',\r\n  templateUrl: './create-recurring-deposits-account.component.html',\r\n  styleUrls: ['./create-recurring-deposits-account.component.scss']\r\n})\r\nexport class CreateRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Imports all the step component */\r\n  @ViewChild(RecurringDepositsAccountDetailsStepComponent, { static: true }) recurringDepositsAccountDetailsStep: RecurringDepositsAccountDetailsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountCurrencyStepComponent, { static: true }) recurringDepositAccountCurrencyStep: RecurringDepositsAccountCurrencyStepComponent;\r\n  @ViewChild(RecurringDepositsAccountTermsStepComponent, { static: true }) recurringDepositAccountTermsStep: RecurringDepositsAccountTermsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountSettingsStepComponent, { static: true }) recurringDepositAccountSettingsStep: RecurringDepositsAccountSettingsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountChargesStepComponent, { static: true }) recurringDepositAccountChargesStep: RecurringDepositsAccountChargesStepComponent;\r\n\r\n  /** Recurring Deposits Account Template */\r\n  recurringDepositsAccountTemplate: any;\r\n  /** Recurring Deposit Account Product Template */\r\n  recurringDepositsAccountProductTemplate: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private settingsService: SettingsService,\r\n  ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountTemplate: any }) => {\r\n      this.recurringDepositsAccountTemplate = data.recurringDepositsAccountTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets recurring deposits account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.recurringDepositsAccountProductTemplate = $event;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Details Form Data */\r\n  get recurringDepositAccountDetailsForm() {\r\n    return this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetailsForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Currency Form Data */\r\n  get recurringDepositAccountCurrencyForm() {\r\n    return this.recurringDepositAccountCurrencyStep.recurringDepositAccountCurrencyForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Terms Form Data */\r\n  get recurringDepositAccountTermsForm() {\r\n    return this.recurringDepositAccountTermsStep.recurringDepositAccountTermsForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Settings Form Data */\r\n  get recurringDepositAccountSettingsForm() {\r\n    return this.recurringDepositAccountSettingsStep.recurringDepositAccountSettingsForm;\r\n  }\r\n\r\n  /** Checks wheter all the forms in different steps are valid or not */\r\n  get recurringDepositAccountFormValid() {\r\n    return (\r\n      this.recurringDepositAccountDetailsForm.valid &&\r\n      this.recurringDepositAccountTermsForm.valid &&\r\n      this.recurringDepositAccountSettingsForm.valid\r\n    );\r\n  }\r\n\r\n  /** Retrieves Data of all the forms */\r\n  get recurringDepositAccountData() {\r\n    return {\r\n      ...this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetails,\r\n      ...this.recurringDepositAccountCurrencyStep.recurringDepositAccountCurrency,\r\n      ...this.recurringDepositAccountTermsStep.recurringDepositAccountTerms,\r\n      ...this.recurringDepositAccountSettingsStep.recurringDepositAccountSettings,\r\n      ...this.recurringDepositAccountChargesStep.recurringDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n\r\n  /** Retrieves Data of all forms except Currency to submit the data */\r\n  get recurringDepositAccount() {\r\n    return {\r\n      ...this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetails,\r\n      ...this.recurringDepositAccountTermsStep.recurringDepositAccountTerms,\r\n      ...this.recurringDepositAccountSettingsStep.recurringDepositAccountSettings,\r\n      ...this.recurringDepositAccountChargesStep.recurringDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits the recurring deposit form to create a new recurring deposit account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const recurringDepositAccount = {\r\n      ...this.recurringDepositAccount,\r\n      clientId: this.recurringDepositsAccountTemplate.clientId,\r\n      charges: this.recurringDepositAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n        feeOnMonthDay: charge.feeOnMonthDay,\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      isCalendarInherited: this.recurringDepositAccount.recurringDepositAccount ? this.recurringDepositAccount.recurringDepositAccount : false,\r\n      submittedOnDate: this.datePipe.transform(this.recurringDepositAccount.submittedOnDate, dateFormat),\r\n      expectedFirstDepositOnDate: this.datePipe.transform(this.recurringDepositAccount.expectedFirstDepositOnDate, dateFormat),\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n\r\n    this.recurringDepositsService.createRecurringDepositAccount(recurringDepositAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #recurringDepositAccountStepper>\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-details-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        (recurringDepositsAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-recurring-deposits-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountCurrencyForm\">\r\n\r\n      <ng-template matStepLabel>CURRENCY</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-currency-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-currency-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-terms-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountSettingsForm\">\r\n\r\n      <ng-template matStepLabel>SETTINGS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-settings-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-settings-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>INTEREST RATE CHART</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-interest-rate-chart-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-interest-rate-chart-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-charges-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\"\r\n        [recurringDepositAccountFormValid]=\"recurringDepositAccountFormValid\"\r\n        [currencyCode]=\"recurringDepositAccountCurrencyForm.get('currencyCode')\">\r\n      </mifosx-recurring-deposits-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"recurringDepositAccountFormValid\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-preview-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\"\r\n        [recurringDepositAccountData]=\"recurringDepositAccountData\" (submit)=\"submit()\">\r\n      </mifosx-recurring-deposits-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Step Components */\r\nimport { RecurringDepositsAccountDetailsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-details-step/recurring-deposits-account-details-step.component';\r\nimport { RecurringDepositsAccountTermsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-terms-step/recurring-deposits-account-terms-step.component';\r\nimport { RecurringDepositsAccountCurrencyStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-currency-step/recurring-deposits-account-currency-step.component';\r\nimport { RecurringDepositsAccountSettingsStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-settings-step/recurring-deposits-account-settings-step.component';\r\nimport { RecurringDepositsAccountChargesStepComponent } from '../recurring-deposits-account-stepper/recurring-deposits-account-charges-step/recurring-deposits-account-charges-step.component';\r\n\r\n/**\r\n * Edit new recurring deposit account\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-recurring-deposit-account',\r\n  templateUrl: './edit-recurring-deposit-account.component.html',\r\n  styleUrls: ['./edit-recurring-deposit-account.component.scss']\r\n})\r\nexport class EditRecurringDepositAccountComponent implements OnInit {\r\n\r\n  /** Imports all the step component */\r\n  @ViewChild(RecurringDepositsAccountDetailsStepComponent, { static: true }) recurringDepositsAccountDetailsStep: RecurringDepositsAccountDetailsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountCurrencyStepComponent, { static: true }) recurringDepositAccountCurrencyStep: RecurringDepositsAccountCurrencyStepComponent;\r\n  @ViewChild(RecurringDepositsAccountTermsStepComponent, { static: true }) recurringDepositAccountTermsStep: RecurringDepositsAccountTermsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountSettingsStepComponent, { static: true }) recurringDepositAccountSettingsStep: RecurringDepositsAccountSettingsStepComponent;\r\n  @ViewChild(RecurringDepositsAccountChargesStepComponent, { static: true }) recurringDepositAccountChargesStep: RecurringDepositsAccountChargesStepComponent;\r\n\r\n  /** Recurring Deposits Account And Template */\r\n  recurringDepositsAccountAndTemplate: any;\r\n  /** Recurring Deposit Account Product Template */\r\n  recurringDepositsAccountProductTemplate: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private settingsService: SettingsService,\r\n  ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountAndTemplate: any }) => {\r\n      this.recurringDepositsAccountAndTemplate = data.recurringDepositsAccountAndTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets recurring deposits account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.recurringDepositsAccountProductTemplate = $event;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Details Form Data */\r\n  get recurringDepositAccountDetailsForm() {\r\n    return this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetailsForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Currency Form Data */\r\n  get recurringDepositAccountCurrencyForm() {\r\n    return this.recurringDepositAccountCurrencyStep.recurringDepositAccountCurrencyForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Terms Form Data */\r\n  get recurringDepositAccountTermsForm() {\r\n    return this.recurringDepositAccountTermsStep.recurringDepositAccountTermsForm;\r\n  }\r\n\r\n  /** Get Recurring Deposit Account Settings Form Data */\r\n  get recurringDepositAccountSettingsForm() {\r\n    return this.recurringDepositAccountSettingsStep.recurringDepositAccountSettingsForm;\r\n  }\r\n\r\n  // Checks if stepper is valid and not pristine.\r\n  get recurringDepositAccountFormValidAndNotPristine() {\r\n    return (\r\n      this.recurringDepositAccountDetailsForm.valid &&\r\n      this.recurringDepositAccountTermsForm.valid &&\r\n      this.recurringDepositAccountSettingsForm.valid &&\r\n      (\r\n        !this.recurringDepositAccountDetailsForm.pristine ||\r\n        !this.recurringDepositAccountTermsForm.pristine ||\r\n        !this.recurringDepositAccountSettingsForm.pristine ||\r\n        !this.recurringDepositAccountChargesStep.pristine\r\n      )\r\n    );\r\n  }\r\n\r\n  /** Retrieves Data of all the forms */\r\n  get recurringDepositAccountData() {\r\n    return {\r\n      ...this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetails,\r\n      ...this.recurringDepositAccountCurrencyStep.recurringDepositAccountCurrency,\r\n      ...this.recurringDepositAccountTermsStep.recurringDepositAccountTerms,\r\n      ...this.recurringDepositAccountSettingsStep.recurringDepositAccountSettings,\r\n      ...this.recurringDepositAccountChargesStep.recurringDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n\r\n  /** Retrieves Data of all forms except Currency to submit the data */\r\n  get recurringDepositAccount() {\r\n    return {\r\n      ...this.recurringDepositsAccountDetailsStep.recurringDepositAccountDetails,\r\n      ...this.recurringDepositAccountTermsStep.recurringDepositAccountTerms,\r\n      ...this.recurringDepositAccountSettingsStep.recurringDepositAccountSettings,\r\n      ...this.recurringDepositAccountChargesStep.recurringDepositAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits the recurring deposit form to create a new recurring deposit account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const recurringDepositAccount = {\r\n      ...this.recurringDepositAccount,\r\n      clientId: this.recurringDepositsAccountAndTemplate.clientId,\r\n      charges: this.recurringDepositAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n        feeOnMonthDay: charge.feeOnMonthDay,\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      isCalendarInherited: this.recurringDepositAccount.recurringDepositAccount ? this.recurringDepositAccount.recurringDepositAccount : false,\r\n      submittedOnDate: this.datePipe.transform(this.recurringDepositAccount.submittedOnDate, dateFormat),\r\n      expectedFirstDepositOnDate: this.datePipe.transform(this.recurringDepositAccount.expectedFirstDepositOnDate, dateFormat),\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n\r\n    this.recurringDepositsService.updateRecurringDepositAccount(this.recurringDepositsAccountAndTemplate.id, recurringDepositAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #recurringDepositAccountStepper>\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-details-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        (recurringDepositsAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-recurring-deposits-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountCurrencyForm\">\r\n\r\n      <ng-template matStepLabel>CURRENCY</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-currency-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-currency-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-terms-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"recurringDepositAccountSettingsForm\">\r\n\r\n      <ng-template matStepLabel>SETTINGS</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-settings-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-settings-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>INTEREST RATE CHART</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-interest-rate-chart-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\">\r\n      </mifosx-recurring-deposits-account-interest-rate-chart-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-charges-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\"\r\n        [recurringDepositAccountFormValid]=\"recurringDepositAccountFormValidAndNotPristine\"\r\n        [currencyCode]=\"recurringDepositAccountCurrencyForm.get('currencyCode')\">\r\n      </mifosx-recurring-deposits-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"recurringDepositAccountFormValidAndNotPristine\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-recurring-deposits-account-preview-step\r\n        [recurringDepositsAccountTemplate]=\"recurringDepositsAccountAndTemplate\"\r\n        [recurringDepositsAccountProductTemplate]=\"recurringDepositsAccountProductTemplate\"\r\n        [recurringDepositAccountData]=\"recurringDepositAccountData\" (submit)=\"submit()\">\r\n      </mifosx-recurring-deposits-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Activate Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-activate-recurring-deposits-account',\r\n  templateUrl: './activate-recurring-deposits-account.component.html',\r\n  styleUrls: ['./activate-recurring-deposits-account.component.scss']\r\n})\r\nexport class ActivateRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Activate Recurring Deposits Account form. */\r\n  activateRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {recurringDepositsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SavingsService} savingsService Savings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the activate recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createActivateRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the activate recurring deposits account form.\r\n   */\r\n  createActivateRecurringDepositsAccountForm() {\r\n    this.activateRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'activatedOnDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and activates the recurring deposit account,\r\n   * if successful redirects to the recurring deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevActivatedOnDate: Date = this.activateRecurringDepositsAccountForm.value.activatedOnDate;\r\n    this.activateRecurringDepositsAccountForm.patchValue({\r\n      activatedOnDate: this.datePipe.transform(prevActivatedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.activateRecurringDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'activate', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"activateRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Activated On Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"activatedOnDatePicker\" required\r\n            formControlName=\"activatedOnDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"activatedOnDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #activatedOnDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"activateRecurringDepositsAccountForm.controls.activatedOnDate.hasError('required')\">\r\n            Activated On Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!activateRecurringDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Add Recurring Deposits Charge component.\r\n * Recurring deposits endpoint is not supported so using Savings endpoint.\r\n */\r\n@Component({\r\n  selector: 'mifosx-add-charge-recurring-deposits-account',\r\n  templateUrl: './add-charge-recurring-deposits-account.component.html',\r\n  styleUrls: ['./add-charge-recurring-deposits-account.component.scss']\r\n})\r\nexport class AddChargeRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Add Recurring Deposits Charge form. */\r\n  recurringDepositsChargeForm: FormGroup;\r\n  /** savings charge options. */\r\n  savingsChargeOptions: any;\r\n  /** savings Id of the savings account. */\r\n  recurringDepositAccountId: string;\r\n  /** charge details */\r\n  chargeDetails: any;\r\n\r\n  /**\r\n   * Retrieves charge template data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SavingsService} savingsService Savings Service\r\n   */\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private savingsService: SavingsService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountActionData: any }) => {\r\n      this.savingsChargeOptions = data.recurringDepositsAccountActionData.chargeOptions;\r\n    });\r\n    this.recurringDepositAccountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Recurring Deposits Charge form.\r\n   */\r\n  ngOnInit() {\r\n    this.createRecurringDepositsChargeForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  buildDependencies() {\r\n    this.recurringDepositsChargeForm.controls.chargeId.valueChanges.subscribe(chargeId => {\r\n      this.savingsService.getChargeTemplate(chargeId).subscribe((data: any) => {\r\n        this.chargeDetails = data;\r\n        const chargeTimeType = data.chargeTimeType.id;\r\n        if (data.chargeTimeType.value === 'Withdrawal Fee' || data.chargeTimeType.value === 'Saving No Activity Fee') {\r\n          this.chargeDetails.dueDateNotRequired = true;\r\n        }\r\n        if (data.chargeTimeType.value === 'Annual Fee' || data.chargeTimeType.value === 'Monthly Fee') {\r\n          this.chargeDetails.chargeTimeTypeAnnualOrMonth = true;\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && !this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.recurringDepositsChargeForm.addControl('dueDate', new FormControl('', Validators.required));\r\n        } else {\r\n          this.recurringDepositsChargeForm.removeControl('dueDate');\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.recurringDepositsChargeForm.addControl('feeOnMonthDay', new FormControl('', Validators.required));\r\n        } else {\r\n          this.recurringDepositsChargeForm.removeControl('feeOnMonthDay');\r\n        }\r\n        if (chargeTimeType.value === 'Monthly Fee') {\r\n          this.recurringDepositsChargeForm.addControl('feeInterval', new FormControl(data.feeInterval, Validators.required));\r\n        } else {\r\n          this.recurringDepositsChargeForm.removeControl('feeInterval');\r\n        }\r\n        this.recurringDepositsChargeForm.patchValue({\r\n          'amount': data.amount,\r\n          'chargeCalculationType': data.chargeCalculationType.id,\r\n          'chargeTimeType': data.chargeTimeType.id\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the Recurring Deposits Charge form.\r\n   */\r\n  createRecurringDepositsChargeForm() {\r\n    this.recurringDepositsChargeForm = this.formBuilder.group({\r\n      'chargeId': ['', Validators.required],\r\n      'amount': ['', Validators.required],\r\n      'chargeCalculationType': [{ value: '', disabled: true }],\r\n      'chargeTimeType': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits savings charge.\r\n   */\r\n  submit() {\r\n    const savingsCharge = this.recurringDepositsChargeForm.value;\r\n    savingsCharge.locale = this.settingsService.language.code;\r\n    if (!savingsCharge.feeInterval) {\r\n      savingsCharge.feeInterval = this.chargeDetails.feeInterval;\r\n    }\r\n    if (this.chargeDetails.dueDateNotRequired !== true) {\r\n      if (this.chargeDetails.chargeTimeTypeAnnualOrMonth === true) {\r\n        const monthDayFormat = 'MMMM-dd'; // TODO: Update once language and date settings are setup\r\n        savingsCharge.monthDayFormat = monthDayFormat;\r\n        if (savingsCharge.feeOnMonthDay) {\r\n          const prevDate = this.recurringDepositsChargeForm.value.feeOnMonthDay;\r\n          savingsCharge.feeOnMonthDay = this.datePipe.transform(prevDate, monthDayFormat);\r\n        }\r\n      } else {\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        savingsCharge.dateFormat = dateFormat;\r\n        if (savingsCharge.dueDate) {\r\n          const prevDate = this.recurringDepositsChargeForm.value.dueDate;\r\n          savingsCharge.dueDate = this.datePipe.transform(prevDate, dateFormat);\r\n        }\r\n      }\r\n    }\r\n    this.savingsService.createSavingsCharge(this.recurringDepositAccountId, 'charges', savingsCharge).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"recurringDepositsChargeForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n          <mat-form-field>\r\n            <mat-label>Charge</mat-label>\r\n            <mat-select required formControlName=\"chargeId\">\r\n              <mat-option *ngFor=\"let savingsCharge of savingsChargeOptions\" [value]=\"savingsCharge.id\">\r\n                {{ savingsCharge.name + ' (' + savingsCharge.currency.name + ')' }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"recurringDepositsChargeForm.controls.chargeId.hasError('required')\">\r\n              Charge is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div *ngIf=\"chargeDetails\" fxLayout=\"column\">\r\n\r\n            <mat-form-field>\r\n              <mat-label>Amount</mat-label>\r\n              <input type=number required matInput formControlName=\"amount\" />\r\n              <mat-error *ngIf=\"recurringDepositsChargeForm.controls.amount.hasError('required')\">\r\n                Amount is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge Calculation</mat-label>\r\n              <mat-select formControlName=\"chargeCalculationType\">\r\n                <mat-option *ngFor=\"let chargeCalculation of chargeDetails.chargeCalculationTypeOptions\"\r\n                  [value]=\"chargeCalculation.id\">\r\n                  {{ chargeCalculation.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge time type</mat-label>\r\n              <mat-select formControlName=\"chargeTimeType\">\r\n                <mat-option *ngFor=\"let chargeTime of chargeDetails.chargeTimeTypeOptions\" [value]=\"chargeTime.id\">\r\n                  {{ chargeTime.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"recurringDepositsChargeForm.contains('dueDate')\">\r\n              <mat-label>Due for collection on</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\" required\r\n                formControlName=\"dueDate\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dueDatePicker></mat-datepicker>\r\n              <mat-error *ngIf=\"recurringDepositsChargeForm.controls.dueDate.hasError('required')\">\r\n                Due for collection on is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"recurringDepositsChargeForm.contains('feeOnMonthDay')\">\r\n              <mat-label>Due On</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"feeOnMonthDayPicker\" required\r\n                formControlName=\"feeOnMonthDay\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"feeOnMonthDayPicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #feeOnMonthDayPicker></mat-datepicker>\r\n              <mat-error *ngIf=\"recurringDepositsChargeForm.controls.feeOnMonthDay.hasError('required')\">\r\n                Due Date is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"recurringDepositsChargeForm.contains('feeInterval')\">\r\n              <mat-label>Repeats Every</mat-label>\r\n              <input matInput formControlName=\"feeInterval\" />\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!recurringDepositsChargeForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-recurring-deposits-account',\r\n  templateUrl: './approve-recurring-deposits-account.component.html',\r\n  styleUrls: ['./approve-recurring-deposits-account.component.scss']\r\n})\r\nexport class ApproveRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Approve Recurring Deposits Account form. */\r\n  approveRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the approve recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createApproveRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the approve recurring deposits account form.\r\n   */\r\n  createApproveRecurringDepositsAccountForm() {\r\n    this.approveRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'approvedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and approves the recurring deposit account,\r\n   * if successful redirects to the recurring deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevApprovedOnDate: Date = this.approveRecurringDepositsAccountForm.value.approvedOnDate;\r\n    this.approveRecurringDepositsAccountForm.patchValue({\r\n      approvedOnDate: this.datePipe.transform(prevApprovedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.approveRecurringDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'approve', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"approveRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"approvedOnDatePicker\" required\r\n              formControlName=\"approvedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"approvedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #approvedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"approveRecurringDepositsAccountForm.controls.approvedOnDate.hasError('required')\">\r\n              Approved On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!approveRecurringDepositsAccountForm\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Close Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-close-recurring-deposits-account',\r\n  templateUrl: './close-recurring-deposits-account.component.html',\r\n  styleUrls: ['./close-recurring-deposits-account.component.scss']\r\n})\r\nexport class CloseRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Maturity Amount */\r\n  maturityAmount: any;\r\n  /** On Account Closure Options */\r\n  onAccountClosureOptions: any;\r\n  /** Payment Types */\r\n  paymentTypes: any;\r\n  /** Title */\r\n  title: string;\r\n  /** Account Id */\r\n  accountId: string;\r\n  /** Show payment details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Close Recurring Deposit Account form. */\r\n  closeRecurringDepositForm: FormGroup;\r\n\r\n  /**\r\n   * Retrieves action details template data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountActionData: any }) => {\r\n      this.maturityAmount = data.recurringDepositsAccountActionData.maturityAmount;\r\n      this.onAccountClosureOptions = data.recurringDepositsAccountActionData.onAccountClosureOptions;\r\n      this.paymentTypes = data.recurringDepositsAccountActionData.paymentTypeOptions;\r\n      if (data.recurringDepositsAccountActionData.maturityAmount) {\r\n        this.title = 'Recurring Deposit Closure on Maturity';\r\n      } else {\r\n        this.title = 'Recurring Deposit Closure';\r\n      }\r\n    });\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createcloseRecurringDepositForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the close form.\r\n   */\r\n  createcloseRecurringDepositForm() {\r\n    this.closeRecurringDepositForm = this.formBuilder.group({\r\n      'closedOnDate': [new Date(), Validators.required],\r\n      'maturityAmount': [{ value: this.maturityAmount, disabled: true}],\r\n      'onAccountClosureId': ['', Validators.required],\r\n      'paymentTypeId': ['', Validators.required],\r\n      'accountNumber': '',\r\n      'chequeNumber': '',\r\n      'routingCode': '',\r\n      'receiptNumber': '',\r\n      'bankNumber': '',\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles the display of payment details\r\n   */\r\n  toggleDisplay() {\r\n    this.showPaymentDetails = !(this.showPaymentDetails);\r\n  }\r\n\r\n  /**\r\n   * Submits the close recurring deposit form\r\n   */\r\n  submit() {\r\n    const closedOnDate = this.closeRecurringDepositForm.value.closedOnDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const locale = this.settingsService.language.code;\r\n    this.closeRecurringDepositForm.patchValue({\r\n      closedOnDate: this.datePipe.transform(closedOnDate, dateFormat)\r\n    });\r\n    const data = {\r\n      ...this.closeRecurringDepositForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'close', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeRecurringDepositForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <h3 class=\"mat-h3\" fxFlexFill>{{title}}</h3>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedOnDatePicker\" required\r\n              formControlName=\"closedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeRecurringDepositForm.controls.closedOnDate.hasError('required')\">\r\n              Closed On <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Maturity Amount</mat-label>\r\n            <input matInput required formControlName=\"maturityAmount\">\r\n            <mat-error *ngIf=\"closeRecurringDepositForm.controls.maturityAmount.hasError('required')\">\r\n              Maturity Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Action</mat-label>\r\n            <mat-select formControlName=\"onAccountClosureId\" required>\r\n              <mat-option *ngFor=\"let onAccountClosureOption of onAccountClosureOptions\"\r\n                [value]=\"onAccountClosureOption.id\">\r\n                {{ onAccountClosureOption.value }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"closeRecurringDepositForm.controls.onAccountClosureId.hasError('required')\">\r\n              Action <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type Id</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\" required>\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"closeRecurringDepositForm.controls.paymentTypeId.hasError('required')\">\r\n              Payment Type <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"toggleDisplay()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"chequeNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../general']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!closeRecurringDepositForm.valid\">Submit</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Deposits Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-deposit-recurring-deposits-account',\r\n  templateUrl: './deposit-recurring-deposits-account.component.html',\r\n  styleUrls: ['./deposit-recurring-deposits-account.component.scss']\r\n})\r\nexport class DepositRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Transactions Amount */\r\n  transactionAmount: any;\r\n  /** Outstanding Charge Amount */\r\n  outstandingChargeAmount: any;\r\n  /** Payment Types */\r\n  paymentTypes: any;\r\n  /** Account Id */\r\n  accountId: string;\r\n  /** Show payment details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Deposits Recurring Deposit Account form. */\r\n  depositRecurringDepositForm: FormGroup;\r\n\r\n  /**\r\n   * Retrieves action details transactions template data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountActionData: any }) => {\r\n      this.transactionAmount = data.recurringDepositsAccountActionData.amount;\r\n      this.paymentTypes = data.recurringDepositsAccountActionData.paymentTypeOptions;\r\n      if (data.recurringDepositsAccountActionData.outstandingChargeAmount && data.recurringDepositsAccountActionData.outstandingChargeAmount > 0) {\r\n        this.outstandingChargeAmount = data.recurringDepositsAccountActionData.outstandingChargeAmount;\r\n        this.transactionAmount = this.transactionAmount + this.outstandingChargeAmount;\r\n      }\r\n    });\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createdepositRecurringDepositForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the deposits form.\r\n   */\r\n  createdepositRecurringDepositForm() {\r\n    this.depositRecurringDepositForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(), Validators.required],\r\n      'transactionAmount': [this.transactionAmount, Validators.required],\r\n      'paymentTypeId': ['', Validators.required],\r\n      'accountNumber': '',\r\n      'chequeNumber': '',\r\n      'routingCode': '',\r\n      'receiptNumber': '',\r\n      'bankNumber': '',\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles the display of payment details\r\n   */\r\n  toggleDisplay() {\r\n    this.showPaymentDetails = !(this.showPaymentDetails);\r\n  }\r\n\r\n  /**\r\n   * Submits the deposits recurring deposit form\r\n   */\r\n  submit() {\r\n    const transactionDate = this.depositRecurringDepositForm.value.transactionDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const locale = this.settingsService.language.code;\r\n    this.depositRecurringDepositForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat)\r\n    });\r\n    const data = {\r\n      ...this.depositRecurringDepositForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'deposit', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"depositRecurringDepositForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"transactionDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"depositRecurringDepositForm.controls.transactionDate.hasError('required')\">\r\n              Transaction Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"depositRecurringDepositForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type Id</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\" required>\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"depositRecurringDepositForm.controls.paymentTypeId.hasError('required')\">\r\n              Payment Type <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"toggleDisplay()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"chequeNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../general']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!depositRecurringDepositForm.valid\">Submit</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Premature Close Recurring Deposits Account Component\r\n */\r\n\r\n@Component({\r\n  selector: 'mifosx-premature-close-recurring-deposit-account',\r\n  templateUrl: './premature-close-recurring-deposit-account.component.html',\r\n  styleUrls: ['./premature-close-recurring-deposit-account.component.scss']\r\n})\r\nexport class PrematureCloseRecurringDepositAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** premature close Recurring Deposits Account form. */\r\n  prematureCloseRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService, ) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the premature close recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createprematureCloseRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the premature close recurring deposits account form.\r\n   */\r\n  createprematureCloseRecurringDepositsAccountForm() {\r\n    this.prematureCloseRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'closedOnDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and premature closes the recurring deposit account,\r\n   * if successful redirects to the recurring deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevClosedOnDate: Date = this.prematureCloseRecurringDepositsAccountForm.value.closedOnDate;\r\n    this.prematureCloseRecurringDepositsAccountForm.patchValue({\r\n      closedOnDate: this.datePipe.transform(prevClosedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.prematureCloseRecurringDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'prematureClose', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"prematureCloseRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedOnDatePicker\" required\r\n              formControlName=\"closedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"prematureCloseRecurringDepositsAccountForm.controls.closedOnDate.hasError('required')\">\r\n              Closed On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!prematureCloseRecurringDepositsAccountForm\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-actions',\r\n  templateUrl: './recurring-deposits-account-actions.component.html',\r\n  styleUrls: ['./recurring-deposits-account-actions.component.scss']\r\n})\r\nexport class RecurringDepositsAccountActionsComponent {\r\n\r\n  /** Flag object to store possible actions and render appropriate UI to the user */\r\n  actions: {\r\n    'Activate': boolean\r\n    'Undo Approval': boolean\r\n    'Approve': boolean\r\n    'Reject': boolean\r\n    'Withdraw By Client': boolean\r\n    'Add Charge': boolean\r\n    'Premature Close': boolean\r\n    'Close': boolean\r\n    'Deposit': boolean\r\n  } = {\r\n      'Activate': false,\r\n      'Undo Approval': false,\r\n      'Approve': false,\r\n      'Reject': false,\r\n      'Withdraw By Client': false,\r\n      'Add Charge': false,\r\n      'Premature Close': false,\r\n      'Close': false,\r\n      'Deposit': false\r\n    };\r\n\r\n  /**\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    const name = this.route.snapshot.params['name'];\r\n    this.actions[name] = true;\r\n  }\r\n\r\n}\r\n","<mifosx-activate-recurring-deposits-account *ngIf=\"actions['Activate']\"></mifosx-activate-recurring-deposits-account>\r\n<mifosx-undo-approval-recurring-deposits-account *ngIf=\"actions['Undo Approval']\"></mifosx-undo-approval-recurring-deposits-account>\r\n<mifosx-approve-recurring-deposits-account *ngIf=\"actions['Approve']\"></mifosx-approve-recurring-deposits-account>\r\n<mifosx-reject-recurring-deposits-account *ngIf=\"actions['Reject']\"></mifosx-reject-recurring-deposits-account>\r\n<mifosx-withdraw-by-client-recurring-deposits-account *ngIf=\"actions['Withdraw By Client']\"></mifosx-withdraw-by-client-recurring-deposits-account>\r\n<mifosx-add-charge-recurring-deposits-account *ngIf=\"actions['Add Charge']\"></mifosx-add-charge-recurring-deposits-account>\r\n<mifosx-premature-close-recurring-deposit-account *ngIf=\"actions['Premature Close']\"></mifosx-premature-close-recurring-deposit-account>\r\n<mifosx-close-recurring-deposits-account *ngIf=\"actions['Close']\"></mifosx-close-recurring-deposits-account>\r\n<mifosx-deposit-recurring-deposits-account *ngIf=\"actions['Deposit']\"></mifosx-deposit-recurring-deposits-account>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n\r\n/**\r\n * Reject Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-recurring-deposits-account',\r\n  templateUrl: './reject-recurring-deposits-account.component.html',\r\n  styleUrls: ['./reject-recurring-deposits-account.component.scss']\r\n})\r\nexport class RejectRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Reject Recurring Deposits Account form. */\r\n  rejectRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the reject recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createRejectRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the reject recurring deposits account form.\r\n   */\r\n  createRejectRecurringDepositsAccountForm() {\r\n    this.rejectRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'rejectedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and rejects the recurring deposit account,\r\n   * if successful redirects to the recurring deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRejectedOnDate: Date = this.rejectRecurringDepositsAccountForm.value.rejectedOnDate;\r\n    this.rejectRecurringDepositsAccountForm.patchValue({\r\n      rejectedOnDate: this.datePipe.transform(prevRejectedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.rejectRecurringDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'reject', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rejectRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Rejected On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rejectedOnDatePicker\" required\r\n              formControlName=\"rejectedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rejectedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rejectedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rejectRecurringDepositsAccountForm.controls.rejectedOnDate.hasError('required')\">\r\n              Rejected On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!rejectRecurringDepositsAccountForm\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\n\r\n/**\r\n * Undo Approval Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-approval-recurring-deposits-account',\r\n  templateUrl: './undo-approval-recurring-deposits-account.component.html',\r\n  styleUrls: ['./undo-approval-recurring-deposits-account.component.scss']\r\n})\r\nexport class UndoApprovalRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Undo Approval Recurring Deposits Account form. */\r\n  undoApprovalRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createUndoApprovalRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval recurring deposits account form.\r\n   */\r\n  createUndoApprovalRecurringDepositsAccountForm() {\r\n    this.undoApprovalRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and undo the approval of recurring deposits account,\r\n   * if successful redirects to the recurring deposits account.\r\n   */\r\n  submit() {\r\n    const data = {\r\n      ...this.undoApprovalRecurringDepositsAccountForm.value,\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'undoapproval', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"undoApprovalRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Note</mat-label>\r\n          <textarea matInput formControlName=\"note\"></textarea>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!undoApprovalRecurringDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from 'app/deposits/recurring-deposits/recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n/**\r\n * Withdraw By Client Recurring Deposits Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-withdraw-by-client-recurring-deposits-account',\r\n  templateUrl: './withdraw-by-client-recurring-deposits-account.component.html',\r\n  styleUrls: ['./withdraw-by-client-recurring-deposits-account.component.scss']\r\n})\r\nexport class WithdrawByClientRecurringDepositsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Withdraw Recurring Deposits Account form. */\r\n  withdrawRecurringDepositsAccountForm: FormGroup;\r\n  /** Recurring Deposits Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private settingsService: SettingsService, ) {\r\n    this.accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw recurring deposits form.\r\n   */\r\n  ngOnInit() {\r\n    this.createWithdrawRecurringDepositsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw recurring deposits account form.\r\n   */\r\n  createWithdrawRecurringDepositsAccountForm() {\r\n    this.withdrawRecurringDepositsAccountForm = this.formBuilder.group({\r\n      'withdrawnOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and withdraws the recurring deposit account by client,\r\n   * if successful redirects to the recurring deposit account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevWithdrawnOnDate: Date = this.withdrawRecurringDepositsAccountForm.value.withdrawnOnDate;\r\n    this.withdrawRecurringDepositsAccountForm.patchValue({\r\n      withdrawnOnDate: this.datePipe.transform(prevWithdrawnOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.withdrawRecurringDepositsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.accountId, 'withdrawnByApplicant', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"withdrawRecurringDepositsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Withdrawn On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"withdrawnOnDatePicker\" required\r\n              formControlName=\"withdrawnOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"withdrawnOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #withdrawnOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"withdrawRecurringDepositsAccountForm.controls.withdrawnOnDate.hasError('required')\">\r\n              Withdrawn On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!withdrawRecurringDepositsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\n\r\n/** Custom Services */\r\nimport { DatePipe } from '@angular/common';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Recurring Deposit Account Charges Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-charges-step',\r\n  templateUrl: './recurring-deposits-account-charges-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-charges-step.component.scss']\r\n})\r\nexport class RecurringDepositsAccountChargesStepComponent implements OnInit, OnChanges {\r\n\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n  @Input() currencyCode: FormControl;\r\n  @Input() recurringDepositAccountFormValid: boolean;\r\n\r\n  /** Charges Data */\r\n  chargeData: any;\r\n  /** Charges Data Source */\r\n  chargesDataSource: {}[] = [];\r\n  /** Charges table columns */\r\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery', 'action'];\r\n  /** Component is pristine if there has been no changes by user interaction */\r\n  pristine = true;\r\n  /** For Edit Recurring Deposits Account Form */\r\n  isChargesPatched = false;\r\n\r\n  constructor(public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService, ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currencyCode.valueChanges.subscribe(() => {\r\n      if (!this.isChargesPatched && this.recurringDepositsAccountTemplate.charges) {\r\n        this.chargesDataSource = this.recurringDepositsAccountTemplate.charges.map((charge: any) => ({ ...charge, id: charge.chargeId })) || [];\r\n        this.isChargesPatched = true;\r\n      } else {\r\n        this.chargesDataSource = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.chargeData = this.recurringDepositsAccountProductTemplate.chargeOptions;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add a charge\r\n   */\r\n  addCharge(charge: any) {\r\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\r\n    charge.value = '';\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Amount\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeAmount(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount,\r\n        type: 'number',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Amount',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, amount: response.data.value.amount };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Date\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeDate(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new DatepickerBase({\r\n        controlName: 'date',\r\n        label: 'Date',\r\n        value: charge.dueDate || charge.feeOnMonthDay || '',\r\n        type: 'datetime-local',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Date',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        let newCharge: any;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const date = this.datePipe.transform(response.data.value.date, dateFormat);\r\n        switch (charge.chargeTimeType.value) {\r\n          case 'Specified due date':\r\n          case 'Weekly Fee':\r\n            newCharge = { ...charge, dueDate: date };\r\n            break;\r\n          case 'Annual Fee':\r\n            newCharge = { ...charge, feeOnMonthDay: date };\r\n            break;\r\n        }\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Fee Interval\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeFeeInterval(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'feeInterval',\r\n        label: 'Fee Interval',\r\n        value: charge.feeInterval,\r\n        type: 'text',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Fee Interval',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, feeInterval: response.data.value.feeInterval };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Delete a particular charge\r\n   * @param charge Charge\r\n   */\r\n  deleteCharge(charge: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge ${charge.name}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n        this.pristine = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns Recurring Deposits Account Charges Form\r\n   */\r\n  get recurringDepositAccountCharges() {\r\n    return {\r\n      charges: this.chargesDataSource\r\n    };\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n  <mat-form-field fxFlex=\"48%\">\r\n    <mat-label>Charge</mat-label>\r\n    <mat-select #charge>\r\n      <mat-option *ngFor=\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\"\r\n        [value]=\"charge\">\r\n        {{ charge.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div fxFlex=\"48%\" fxFlexAlign=\"center\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addCharge(charge)\" [disabled]=\"!charge.value\">\r\n      <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;\r\n      Add\r\n    </button>\r\n  </div>\r\n\r\n  <table fxFlex=\"98%\" class=\"mat-elevation-z1\" mat-table [dataSource]=\"chargesDataSource\"\r\n    [hidden]=\"chargesDataSource.length === 0\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeCalculationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeCalculationType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.amount }}\r\n        <button mat-icon-button color=\"primary\" (click)=\"editChargeAmount(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeTimeType\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeTimeType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n          {{(charge.dueDate | date) || 'Unassigned'}}\r\n        </span>\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n          {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n        </span>\r\n        <span *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n          N/A\r\n        </span>\r\n        <button mat-icon-button color=\"primary\" *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                      || charge.chargeTimeType.value === 'Specified due date'\" (click)=\"editChargeDate(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"repaymentsEvery\">\r\n      <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.feeInterval || 'Not Provided' }}\r\n        <button mat-icon-button color=\"primary\"\r\n          *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Monthly Fee'\"\r\n          (click)=\"editChargeFeeInterval(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCharge(charge)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext [disabled]=\"!recurringDepositAccountFormValid\">\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/**\r\n * Recurring Deposit Account Currency Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-currency-step',\r\n  templateUrl: './recurring-deposits-account-currency-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-currency-step.component.scss']\r\n})\r\nexport class RecurringDepositsAccountCurrencyStepComponent implements OnInit, OnChanges {\r\n\r\n\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n\r\n  /** Recurring Deposit Account Currency Form */\r\n  recurringDepositAccountCurrencyForm: FormGroup;\r\n  /** Currency Data */\r\n  currencyData: any;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createRecurringDepositAccountCurrencyForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.recurringDepositAccountCurrencyForm.patchValue({\r\n        'currencyCode': this.recurringDepositsAccountProductTemplate.currency.code,\r\n        'decimalPlaces': this.recurringDepositsAccountProductTemplate.currency.decimalPlaces\r\n      });\r\n    }\r\n  }\r\n\r\n  createRecurringDepositAccountCurrencyForm() {\r\n    this.recurringDepositAccountCurrencyForm = this.formBuilder.group({\r\n      'currencyCode': [{ value: '', disabled: true }],\r\n      'decimalPlaces': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns Recurring Deposits Account Currency Form\r\n   */\r\n  get recurringDepositAccountCurrency() {\r\n    return this.recurringDepositAccountCurrencyForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"recurringDepositAccountCurrencyForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency</mat-label>\r\n      <input type=\"text\" matInput formControlName=\"currencyCode\" required>\r\n\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Decimal Places</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"decimalPlaces\" required>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../../recurring-deposits.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/**\r\n * Recurring Deposits Account Details Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-details-step',\r\n  templateUrl: './recurring-deposits-account-details-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-details-step.component.scss']\r\n})\r\nexport class RecurringDepositsAccountDetailsStepComponent implements OnInit {\r\n\r\n  /** Recurring Deposits Account Template */\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Product Data */\r\n  productData: any;\r\n  /** Field Officer Data */\r\n  fieldOfficerData: any;\r\n  /** For edit recurring deposits form */\r\n  isFieldOfficerPatched = false;\r\n  /** Recurring Deposits Account Details Form */\r\n  recurringDepositAccountDetailsForm: FormGroup;\r\n\r\n  /** Recurring Deposits Account Template with product data  */\r\n  @Output() recurringDepositsAccountProductTemplate = new EventEmitter();\r\n\r\n  /**\r\n   * Sets recurring deposits account details form.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private datePipe: DatePipe) {\r\n    this.createRecurringDepositsAccountDetailsForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildDependencies();\r\n    if (this.recurringDepositsAccountTemplate) {\r\n      this.productData = this.recurringDepositsAccountTemplate.productOptions;\r\n      if (this.recurringDepositsAccountTemplate.depositProductId) {\r\n        this.recurringDepositAccountDetailsForm.patchValue({\r\n          'productId': this.recurringDepositsAccountTemplate.depositProductId,\r\n          'submittedOnDate': this.recurringDepositsAccountTemplate.timeline.submittedOnDate && new Date(this.recurringDepositsAccountTemplate.timeline.submittedOnDate),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates recurring deposits account details form.\r\n   */\r\n  createRecurringDepositsAccountDetailsForm() {\r\n    this.recurringDepositAccountDetailsForm = this.formBuilder.group({\r\n      'productId': ['', Validators.required],\r\n      'submittedOnDate': ['', Validators.required],\r\n      'fieldOfficerId': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches recurring deposits account product template on productId value changes\r\n   */\r\n  buildDependencies() {\r\n    const clientId = this.recurringDepositsAccountTemplate.clientId;\r\n    this.recurringDepositAccountDetailsForm.get('productId').valueChanges.subscribe((productId: string) => {\r\n      this.recurringDepositsService.getRecurringDepositsAccountTemplate(clientId, productId).subscribe((response: any) => {\r\n        this.recurringDepositsAccountProductTemplate.emit(response);\r\n        this.fieldOfficerData = response.fieldOfficerOptions;\r\n        if (!this.isFieldOfficerPatched && this.recurringDepositsAccountTemplate.fieldOfficerId) {\r\n          this.recurringDepositAccountDetailsForm.get('fieldOfficerId').patchValue(this.recurringDepositsAccountTemplate.fieldOfficerId);\r\n          this.isFieldOfficerPatched = true;\r\n        } else {\r\n          this.recurringDepositAccountDetailsForm.get('fieldOfficerId').patchValue('');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns recurring deposits account details form value.\r\n   */\r\n  get recurringDepositAccountDetails() {\r\n    return this.recurringDepositAccountDetailsForm.value;\r\n  }\r\n}\r\n","<form [formGroup]=\"recurringDepositAccountDetailsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Product Name</mat-label>\r\n      <mat-select formControlName=\"productId\" required>\r\n        <mat-option *ngFor=\"let product of productData\" [value]=\"product.id\">\r\n          {{ product.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Product Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Submitted On</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"submittedOnDatePicker\"\r\n        formControlName=\"submittedOnDate\" required>\r\n      <mat-datepicker-toggle matSuffix [for]=\"submittedOnDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #submittedOnDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        Submission Date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Field Officer</mat-label>\r\n      <mat-select formControlName=\"fieldOfficerId\">\r\n        <mat-option *ngFor=\"let officer of fieldOfficerData\" [value]=\"officer.id\">\r\n          {{ officer.displayName }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges, ViewChild } from '@angular/core';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\n/**\r\n * Recurring Deposits Account Interest Rate Chart Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-interest-rate-chart-step',\r\n  templateUrl: './recurring-deposits-account-interest-rate-chart-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-interest-rate-chart-step.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class RecurringDepositsAccountInterestRateChartStepComponent implements OnInit, OnChanges {\r\n\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to disblac incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n  @ViewChild('chartsTable', { static: true }) chartsTableRef: MatTable<Element>;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.interestRateChartData = this.recurringDepositsAccountProductTemplate.accountChart.chartSlabs;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.interestRateChartData = [];\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\r\n\r\n  <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.name\">\r\n    <span fxFlex=\"40%\">Name:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate.accountChart.name }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Valid from Date:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.fromDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.endDate\">\r\n    <span fxFlex=\"40%\">End Date:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.endDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.description\">\r\n    <span fxFlex=\"40%\">Description:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.description }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Primary Grouping by Amount:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.isPrimaryGroupingByAmount ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <table class=\"mat-elevation-z1\" mat-table [dataSource]=\"interestRateChartData\" #chartsTable multiTemplateDataRows>\r\n\r\n    <ng-container matColumnDef=\"period\">\r\n      <th mat-header-cell *matHeaderCellDef> Period </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\">\r\n        {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amountRange\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interest\">\r\n      <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Description </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n        <button mat-button color=\"primary\"\r\n          (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n          <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n            <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n            View Incentives\r\n          </span>\r\n          <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n            <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n            Hide Incentives\r\n          </span>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"incentives\">\r\n      <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\"\r\n        [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n\r\n        <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\"\r\n          [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n\r\n          <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n\r\n            <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n              Incentives\r\n            </h4>\r\n\r\n            <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\"\r\n              *ngIf=\"chartSlab.incentives.length\">\r\n\r\n              <ng-container matColumnDef=\"entityType\">\r\n                <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.entityType.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"attributeName\">\r\n                <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.attributeName.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"conditionType\">\r\n                <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.conditionType.value | titlecase }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"attributeValue\">\r\n                <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                  {{ incentive.attributeValueDesc }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"incentiveType\">\r\n                <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.incentiveType.value }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"amount\">\r\n                <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                <td mat-cell *matCellDef=\"let incentive\">\r\n                  {{ incentive.amount }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n\r\n            </table>\r\n\r\n          </mat-card>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext>\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * Recurring Deposit Preview Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-preview-step',\r\n  templateUrl: './recurring-deposits-account-preview-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-preview-step.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class RecurringDepositsAccountPreviewStepComponent implements OnChanges {\r\n\r\n  /** Input Data */\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n  @Input() recurringDepositAccountData: any;\r\n  /** Output the submit action */\r\n  @Output() submit = new EventEmitter();\r\n\r\n  /** Charges Displayed Columns */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery'];\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to disblac incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.interestRateChartData = this.recurringDepositsAccountProductTemplate.accountChart.chartSlabs;\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Details</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Product</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.productId | find:recurringDepositsAccountTemplate.productOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Submitted On</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositAccountData.submittedOnDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Field Officer</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.fieldOfficerId | find:recurringDepositsAccountProductTemplate.fieldOfficerOptions:'id':'displayName' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Currency</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate.currency.code  }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Decimal Places</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate.currency.decimalPlaces }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency In Multiples Of</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate.currency.inMultiplesOf }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Terms</h3>\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Compounding Period:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.interestCompoundingPeriodType | find:recurringDepositsAccountProductTemplate.interestCompoundingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Posting Period:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.interestPostingPeriodType | find:recurringDepositsAccountProductTemplate.interestPostingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Calculated using:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.interestCalculationType | find:recurringDepositsAccountProductTemplate.interestCalculationTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Days in Year:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.interestCalculationDaysInYearType | find:recurringDepositsAccountProductTemplate.interestCalculationDaysInYearTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Settings</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill *ngIf=\"recurringDepositAccountData.lockinPeriodFrequency\">\r\n    <span fxFlex=\"40%\">Lock-in Period:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.lockinPeriodFrequency + ' ' + (recurringDepositAccountData.lockinPeriodFrequencyType | find:recurringDepositsAccountProductTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Recurring Deposit Amount:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositAccountData?.mandatoryRecommendedDepositAmount}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Deposit Period:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ recurringDepositAccountData.depositPeriod + ' ' + (recurringDepositAccountData.depositPeriodFrequencyId | find:recurringDepositsAccountProductTemplate.periodFrequencyTypeData:'id':'value') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Deposit Frequency Same as Group/Center meeting:</span>\r\n    <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate.isCalendarInherited === true ? 'Yes' : 'No'  }}</span>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"!recurringDepositsAccountProductTemplate.isCalendarInherited\">\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Deposit Start Date:</span>\r\n      <span fxFlex=\"60%\">{{ recurringDepositAccountData.expectedFirstDepositOnDate | date}}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Deposit Frequency:</span>\r\n      <span *ngIf=\"recurringDepositAccountData.recurringFrequency\"\r\n        fxFlex=\"60%\">{{ recurringDepositAccountData.recurringFrequency + ' ' + (recurringDepositAccountData.recurringFrequencyType | find:recurringDepositsAccountProductTemplate.periodFrequencyTypeData:'id':'value')}}</span>\r\n    </div>\r\n  </ng-container>\r\n\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Minimum Deposit Term:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ (recurringDepositsAccountProductTemplate.minDepositTerm ? recurringDepositsAccountProductTemplate.minDepositTerm: '') + ' ' + (this.recurringDepositsAccountProductTemplate.minDepositTermType ? this.recurringDepositsAccountProductTemplate.minDepositTermType.value: '') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">In Multiples Of:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ (recurringDepositsAccountProductTemplate.inMultiplesOfDepositTerm ? recurringDepositsAccountProductTemplate.inMultiplesOfDepositTerm: '') + ' ' + (this.recurringDepositsAccountProductTemplate.inMultiplesOfDepositTermType ? this.recurringDepositsAccountProductTemplate.inMultiplesOfDepositTermType.value: '') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Maximum Deposit Term</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ (recurringDepositsAccountProductTemplate.maxDepositTerm ? recurringDepositsAccountProductTemplate.maxDepositTerm: '') + ' ' + (this.recurringDepositsAccountProductTemplate.maxDepositTermType ? this.recurringDepositsAccountProductTemplate.maxDepositTermType.value: '') }}</span>\r\n  </div>\r\n\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Interest Rate Chart</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div class=\"margin-b\" fxFlexFill fxLayout=\"column\">\r\n\r\n    <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.name\">\r\n      <span fxFlex=\"40%\">Name:</span>\r\n      <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.name }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Valid from Date:</span>\r\n      <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.fromDate | date }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.endDate\">\r\n      <span fxFlex=\"40%\">End Date:</span>\r\n      <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.endDate | date }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"recurringDepositsAccountProductTemplate?.accountChart.description\">\r\n      <span fxFlex=\"40%\">Description:</span>\r\n      <span fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.description }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Primary Grouping by Amount:</span>\r\n      <span\r\n        fxFlex=\"60%\">{{ recurringDepositsAccountProductTemplate?.accountChart.isPrimaryGroupingByAmount ? 'Yes' : 'No' }}</span>\r\n    </div>\r\n\r\n    <table class=\"mat-elevation-z1 irc-table\" mat-table [dataSource]=\"interestRateChartData\" multiTemplateDataRows>\r\n\r\n      <ng-container matColumnDef=\"period\">\r\n        <th mat-header-cell *matHeaderCellDef> Period </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">\r\n          {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amountRange\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"interest\">\r\n        <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n          <button mat-button color=\"primary\"\r\n            (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n            <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n              <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n              View Incentives\r\n            </span>\r\n            <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n              <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n              Hide Incentives\r\n            </span>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"incentives\">\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\"\r\n          [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n\r\n          <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\"\r\n            [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n\r\n            <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n\r\n              <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n                Incentives\r\n              </h4>\r\n\r\n              <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\"\r\n                *ngIf=\"chartSlab.incentives.length\">\r\n\r\n                <ng-container matColumnDef=\"entityType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.entityType.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"attributeName\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.attributeName.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"conditionType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.conditionType.value | titlecase }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"attributeValue\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                    {{ incentive.attributeValueDesc }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"incentiveType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.incentiveType.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.amount }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n\r\n              </table>\r\n\r\n            </mat-card>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"recurringDepositAccountData.charges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Charges</h3>\r\n\r\n    <mat-divider fxFlexFill></mat-divider>\r\n\r\n    <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"recurringDepositAccountData.charges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeCalculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeCalculationType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef> Date </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span\r\n            *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n            {{(charge.dueDate | date) || 'Unassigned'}}\r\n          </span>\r\n          <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n            {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n          </span>\r\n          <span\r\n            *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n              || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n            N/A\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"repaymentsEvery\">\r\n        <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.feeInterval || 'Not Provided' }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeTimeType\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeTimeType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button [routerLink]=\"['../']\">\r\n    Cancel\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"submit.emit()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/**\r\n * Recurring Deposits Account Settings Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-settings-step',\r\n  templateUrl: './recurring-deposits-account-settings-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-settings-step.component.scss']\r\n})\r\nexport class RecurringDepositsAccountSettingsStepComponent implements OnInit, OnChanges {\r\n\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n\r\n  /** Recurring Deposits Account Settings Form */\r\n  recurringDepositAccountSettingsForm: FormGroup;\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Lockin Period Frequency Type Data */\r\n  lockinPeriodFrequencyTypeData: any;\r\n  /** Period Frequency Type Data */\r\n  periodFrequencyTypeData: any;\r\n  /** Preclosure Penal Interest Type on Data */\r\n  preClosurePenalInterestOnTypeData: any;\r\n  /** Tax Group */\r\n  taxGroup: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private datePipe: DatePipe) {\r\n    this.createRecurringDepositAccountSettingsForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.recurringDepositAccountSettingsForm.patchValue({\r\n        'isMandatoryDeposit': this.recurringDepositsAccountProductTemplate.isMandatoryDeposit,\r\n        'adjustAdvanceTowardsFuturePayments': this.recurringDepositsAccountProductTemplate.adjustAdvanceTowardsFuturePayments,\r\n        'allowWithdrawal': this.recurringDepositsAccountProductTemplate.allowWithdrawal,\r\n        'lockinPeriodFrequency': this.recurringDepositsAccountProductTemplate.lockinPeriodFrequency,\r\n        'lockinPeriodFrequencyType': this.recurringDepositsAccountProductTemplate.lockinPeriodFrequencyType ? this.recurringDepositsAccountProductTemplate.lockinPeriodFrequencyType.id : '',\r\n        'minDepositTerm': this.recurringDepositsAccountProductTemplate.minDepositTerm,\r\n        'minDepositTermTypeId': this.recurringDepositsAccountProductTemplate.minDepositTermType ? this.recurringDepositsAccountProductTemplate.minDepositTermType.id : '',\r\n        'inMultiplesOfDepositTerm': this.recurringDepositsAccountProductTemplate.inMultiplesOfDepositTerm,\r\n        'inMultiplesOfDepositTermTypeId': this.recurringDepositsAccountProductTemplate.inMultiplesOfDepositTermType ? this.recurringDepositsAccountProductTemplate.inMultiplesOfDepositTermType.id : '',\r\n        'maxDepositTerm': this.recurringDepositsAccountProductTemplate.maxDepositTerm,\r\n        'maxDepositTermTypeId': this.recurringDepositsAccountProductTemplate.maxDepositTermType ? this.recurringDepositsAccountProductTemplate.maxDepositTermType.id : '',\r\n        'preClosurePenalApplicable': this.recurringDepositsAccountProductTemplate.preClosurePenalApplicable,\r\n        'preClosurePenalInterest': this.recurringDepositsAccountProductTemplate.preClosurePenalInterest,\r\n        'preClosurePenalInterestOnTypeId': this.recurringDepositsAccountProductTemplate.preClosurePenalInterestOnType ? this.recurringDepositsAccountProductTemplate.preClosurePenalInterestOnType.id : '',\r\n        'minBalanceForInterestCalculation': this.recurringDepositsAccountProductTemplate.minBalanceForInterestCalculation,\r\n      });\r\n      if (this.recurringDepositsAccountProductTemplate.withHoldTax) {\r\n        this.recurringDepositAccountSettingsForm.addControl('withHoldTax', new FormControl(false));\r\n        this.recurringDepositAccountSettingsForm.get('withHoldTax').valueChanges.subscribe((value: boolean) => {\r\n          if (value) {\r\n            this.recurringDepositAccountSettingsForm.addControl('taxGroupId', new FormControl({ value: '', disabled: true }));\r\n            this.recurringDepositAccountSettingsForm.get('taxGroupId').patchValue(this.recurringDepositsAccountProductTemplate.taxGroup && this.recurringDepositsAccountProductTemplate.taxGroup.name);\r\n          } else {\r\n            this.recurringDepositAccountSettingsForm.removeControl('taxGroupId');\r\n          }\r\n        });\r\n        this.recurringDepositAccountSettingsForm.get('withHoldTax').patchValue(this.recurringDepositsAccountTemplate.withHoldTax);\r\n      } else {\r\n        this.recurringDepositAccountSettingsForm.removeControl('withHoldTax');\r\n      }\r\n      this.taxGroup = this.recurringDepositsAccountProductTemplate.taxGroup;\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.recurringDepositsAccountTemplate) {\r\n      this.recurringDepositAccountSettingsForm.patchValue({\r\n        'lockinPeriodFrequency': this.recurringDepositsAccountTemplate.lockinPeriodFrequency,\r\n        'lockinPeriodFrequencyType': this.recurringDepositsAccountTemplate.lockinPeriodFrequencyType && this.recurringDepositsAccountTemplate.lockinPeriodFrequencyType.id,\r\n        'mandatoryRecommendedDepositAmount': this.recurringDepositsAccountTemplate.mandatoryRecommendedDepositAmount,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates recurring deposits account terms form.\r\n   */\r\n  createRecurringDepositAccountSettingsForm() {\r\n    this.recurringDepositAccountSettingsForm = this.formBuilder.group({\r\n      'isMandatoryDeposit': [''],\r\n      'adjustAdvanceTowardsFuturePayments': [''],\r\n      'allowWithdrawal': [''],\r\n      'lockinPeriodFrequency': [''],\r\n      'lockinPeriodFrequencyType': [''],\r\n      'mandatoryRecommendedDepositAmount': ['', Validators.required],\r\n      'depositPeriod': ['', Validators.required],\r\n      'depositPeriodFrequencyId': ['', Validators.required],\r\n      'isCalendarInherited': [''],\r\n      'expectedFirstDepositOnDate': [''],\r\n      'recurringFrequency': ['', Validators.required],\r\n      'recurringFrequencyType': ['', Validators.required],\r\n      'minDepositTerm': [{value: '', disabled: true}],\r\n      'minDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'inMultiplesOfDepositTerm': [{ value: '', disabled: true }],\r\n      'inMultiplesOfDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'maxDepositTerm': [{ value: '', disabled: true }],\r\n      'maxDepositTermTypeId': [{ value: '', disabled: true }],\r\n      'preClosurePenalApplicable': [{ value: '', disabled: true }],\r\n      'preClosurePenalInterest': [{ value: '', disabled: true }],\r\n      'preClosurePenalInterestOnTypeId': [{ value: '', disabled: true }],\r\n      'minBalanceForInterestCalculation': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.lockinPeriodFrequencyTypeData = this.recurringDepositsAccountProductTemplate.lockinPeriodFrequencyTypeOptions;\r\n    this.periodFrequencyTypeData = this.recurringDepositsAccountProductTemplate.periodFrequencyTypeOptions;\r\n    this.preClosurePenalInterestOnTypeData = this.recurringDepositsAccountProductTemplate.preClosurePenalInterestOnTypeOptions;\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes and sets new form controls accordingly.\r\n   */\r\n  buildDependencies() {\r\n    this.recurringDepositAccountSettingsForm.get('isCalendarInherited').valueChanges.subscribe((isCalendarInherited: any) => {\r\n      if (isCalendarInherited) {\r\n        this.recurringDepositAccountSettingsForm.removeControl('expectedFirstDepositOnDate');\r\n        this.recurringDepositAccountSettingsForm.removeControl('recurringFrequency');\r\n        this.recurringDepositAccountSettingsForm.removeControl('recurringFrequencyType');\r\n      } else {\r\n        this.recurringDepositAccountSettingsForm.addControl('expectedFirstDepositOnDate', new FormControl());\r\n        this.recurringDepositAccountSettingsForm.addControl('recurringFrequency', new FormControl(''));\r\n        this.recurringDepositAccountSettingsForm.addControl('recurringFrequencyType', new FormControl(''));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns recurring deposits account settings form value.\r\n   */\r\n  get recurringDepositAccountSettings() {\r\n    return this.recurringDepositAccountSettingsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"recurringDepositAccountSettingsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"isMandatoryDeposit\" class=\"margin-v\">\r\n      Is Mandatory Deposit?\r\n    </mat-checkbox>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"adjustAdvanceTowardsFuturePayments\"\r\n      class=\"margin-v\">\r\n      Adjust advance payments toward future installments?\r\n    </mat-checkbox>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"allowWithdrawal\" class=\"margin-v\">\r\n      Allow Withdrawals?\r\n    </mat-checkbox>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Lock-in Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"lockinPeriodFrequency\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"lockinPeriodFrequencyType\">\r\n        <mat-option *ngFor=\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\"\r\n          [value]=\"lockinPeriodFrequencyType.id\">\r\n          {{ lockinPeriodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Recurring Deposit Details</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Recurring Deposit Amount</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"mandatoryRecommendedDepositAmount\" required>\r\n      <mat-error>\r\n        Recurring Deposit Amount is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Deposit Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Deposit Period</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"depositPeriod\" required>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"depositPeriodFrequencyId\" required>\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"isCalendarInherited\" class=\"margin-v\">\r\n      Deposit Frequency Same as Group/Center meeting\r\n    </mat-checkbox>\r\n\r\n    <ng-container *ngIf=\"!recurringDepositAccountSettingsForm.value.isCalendarInherited\">\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Deposit Start Date</mat-label>\r\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"expectedFirstDepositOnDatePicker\"\r\n          formControlName=\"expectedFirstDepositOnDate\" required>\r\n        <mat-datepicker-toggle matSuffix [for]=\"expectedFirstDepositOnDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #expectedFirstDepositOnDatePicker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n      <h4 fxFlex=\"98%\" class=\"mat-h4\">Deposit Frequency</h4>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Deposit Frequency</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"recurringFrequency\" required>\r\n        <mat-error>\r\n          Deposit Frequency is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Type</mat-label>\r\n        <mat-select formControlName=\"recurringFrequencyType\" required>\r\n          <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n            {{ periodFrequencyType.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error>\r\n          Deposit Frequency Type is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </ng-container>\r\n\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Minimum Deposit Term</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minDepositTerm\" required>\r\n      <mat-error>\r\n        Minimum Deposit Term Frequency is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency Type</mat-label>\r\n      <mat-select formControlName=\"minDepositTermTypeId\" required>\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Minimum Deposit Term Frequency Type is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">And thereafter, in Multiples of</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"inMultiplesOfDepositTerm\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"inMultiplesOfDepositTermTypeId\">\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Maximum Deposit Term</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"maxDepositTerm\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"maxDepositTermTypeId\">\r\n        <mat-option *ngFor=\"let periodFrequencyType of periodFrequencyTypeData\" [value]=\"periodFrequencyType.id\">\r\n          {{ periodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">For Pre-mature closure</h4>\r\n\r\n    <mat-checkbox fxFlex=\"73%\" labelPosition=\"before\" formControlName=\"preClosurePenalApplicable\" class=\"margin-v\">\r\n      Apply Penal Interest (less)\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Penal Interest (%)</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"preClosurePenalInterest\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Period</mat-label>\r\n      <mat-select formControlName=\"preClosurePenalInterestOnTypeId\">\r\n        <mat-option *ngFor=\"let preClosurePenalInterestOnType of preClosurePenalInterestOnTypeData\"\r\n          [value]=\"preClosurePenalInterestOnType.id\">\r\n          {{ preClosurePenalInterestOnType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field> \r\n\r\n    <!-- <mat-divider fxFlex=\"98%\"></mat-divider> -->\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Minimum Balance For Interest Calculation</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minBalanceForInterestCalculation\">\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"taxGroup\">\r\n      <h4 fxFlex=\"98%\" class=\"mat-h4\">Tax Group</h4>\r\n\r\n      <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"withHoldTax\" class=\"margin-v\">\r\n        Is Withhold Tax Applicable?\r\n      </mat-checkbox>\r\n    \r\n      <mat-form-field fxFlex=\"48%\" *ngIf=\"recurringDepositAccountSettingsForm.controls.taxGroupId\">\r\n        <mat-label>Tax Group</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"taxGroupId\">\r\n      </mat-form-field>\r\n    </ng-container>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n/**\r\n * Recurring Deposits Terms Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-terms-step',\r\n  templateUrl: './recurring-deposits-account-terms-step.component.html',\r\n  styleUrls: ['./recurring-deposits-account-terms-step.component.scss']\r\n})\r\nexport class RecurringDepositsAccountTermsStepComponent implements OnInit, OnChanges {\r\n\r\n  @Input() recurringDepositsAccountTemplate: any;\r\n  @Input() recurringDepositsAccountProductTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Recurring Deposits Account Terms Form */\r\n  recurringDepositAccountTermsForm: FormGroup;\r\n  /** Interest Compounding Period Type Data */\r\n  interestCompoundingPeriodTypeData: any;\r\n  /** Interest Posting Period Type Data */\r\n  interestPostingPeriodTypeData: any;\r\n  /** Interest Calculation Type Data */\r\n  interestCalculationTypeData: any;\r\n  /** Interest Calculation Days in Year Data */\r\n  interestCalculationDaysInYearTypeData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createRecurringDepositsAccountTermsForm();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.recurringDepositsAccountProductTemplate) {\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.recurringDepositsAccountTemplate.interestCompoundingPeriodType) {\r\n      this.recurringDepositAccountTermsForm.patchValue({\r\n        'interestCompoundingPeriodType': this.recurringDepositsAccountTemplate.interestCompoundingPeriodType.id,\r\n        'interestPostingPeriodType': this.recurringDepositsAccountTemplate.interestPostingPeriodType.id,\r\n        'interestCalculationType': this.recurringDepositsAccountTemplate.interestCalculationType.id,\r\n        'interestCalculationDaysInYearType': this.recurringDepositsAccountTemplate.interestCalculationDaysInYearType.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates recurring deposits account terms form.\r\n   */\r\n  createRecurringDepositsAccountTermsForm() {\r\n    this.recurringDepositAccountTermsForm = this.formBuilder.group({\r\n      'interestCompoundingPeriodType': ['', Validators.required],\r\n      'interestPostingPeriodType': ['', Validators.required],\r\n      'interestCalculationType': ['', Validators.required],\r\n      'interestCalculationDaysInYearType': ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.interestCompoundingPeriodTypeData = this.recurringDepositsAccountProductTemplate.interestCompoundingPeriodTypeOptions;\r\n    this.interestPostingPeriodTypeData = this.recurringDepositsAccountProductTemplate.interestPostingPeriodTypeOptions;\r\n    this.interestCalculationTypeData = this.recurringDepositsAccountProductTemplate.interestCalculationTypeOptions;\r\n    this.interestCalculationDaysInYearTypeData = this.recurringDepositsAccountProductTemplate.interestCalculationDaysInYearTypeOptions;\r\n  }\r\n\r\n  /**\r\n   * Returns recurring deposits account terms form value.\r\n   */\r\n  get recurringDepositAccountTerms() {\r\n    return this.recurringDepositAccountTermsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"recurringDepositAccountTermsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Compounding Period</mat-label>\r\n      <mat-select formControlName=\"interestCompoundingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestCompoundingPeriodType of interestCompoundingPeriodTypeData\"\r\n          [value]=\"interestCompoundingPeriodType.id\">\r\n          {{ interestCompoundingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Compounding Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Posting Period</mat-label>\r\n      <mat-select formControlName=\"interestPostingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestPostingPeriodType of interestPostingPeriodTypeData\"\r\n          [value]=\"interestPostingPeriodType.id\">\r\n          {{ interestPostingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Posting Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Calculated using</mat-label>\r\n      <mat-select formControlName=\"interestCalculationType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationType of interestCalculationTypeData\"\r\n          [value]=\"interestCalculationType.id\">\r\n          {{ interestCalculationType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Calculated using is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Days in Year</mat-label>\r\n      <mat-select formControlName=\"interestCalculationDaysInYearType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationDaysInYearType of interestCalculationDaysInYearTypeData\"\r\n          [value]=\"interestCalculationDaysInYearType.id\">\r\n          {{ interestCalculationDaysInYearType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Days in Year is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { RecurringDepositConfirmationDialogComponent } from '../custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * Charges Tab Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-charges-tab',\r\n  templateUrl: './charges-tab.component.html',\r\n  styleUrls: ['./charges-tab.component.scss']\r\n})\r\nexport class ChargesTabComponent implements OnInit {\r\n\r\n  /** Recurring Deposits Account Data */\r\n  recurringDepositsAccountData: any;\r\n  /** Charges Data */\r\n  chargesData: any[];\r\n  /** Data source for charges table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Toggles Charges Table */\r\n  showInactiveCharges = false;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'feeOrPenalty',\r\n    'paymentDueAt',\r\n    'dueAsOf',\r\n    'repeatsOn',\r\n    'calculationType',\r\n    'due',\r\n    'paid',\r\n    'waived',\r\n    'outstanding',\r\n    'actions'\r\n  ];\r\n\r\n  /** Charges Table Reference */\r\n  @ViewChild('chargesTable', { static: true }) chargesTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves Recurring Deposits Account Data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService, ) {\r\n      this.route.parent.data.subscribe((data: { recurringDepositsAccountData: any }) => {\r\n      this.recurringDepositsAccountData = data.recurringDepositsAccountData;\r\n      this.chargesData = this.recurringDepositsAccountData.charges;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const activeCharges = this.chargesData ? this.chargesData.filter(charge => charge.isActive) : [];\r\n    this.dataSource = new MatTableDataSource(activeCharges);\r\n  }\r\n\r\n  /**\r\n   * Pays the charge.\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  payCharge(chargeId: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Pay Charge ${chargeId}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.recurringDepositsAccountData.id, 'paycharge', dataObject, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  waiveCharge(chargeId: any) {\r\n    const waiveChargeDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, { data: { heading: 'Waive Charge', dialogContext: `Are you sure you want to waive charge with id: ${chargeId}?` } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.recurringDepositsAccountData.id, 'waive', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   * @param {any} charge Charge\r\n   */\r\n  editCharge(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount || charge.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Edit Charge ${charge.id}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = 'en';\r\n        const dateFormat = 'dd MMMM yyyy';\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.editSavingsAccountCharge(this.recurringDepositsAccountData.id, dataObject, charge.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  deleteCharge(chargeId: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${chargeId}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteSavingsAccountCharge(this.recurringDepositsAccountData.id, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view charge page.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Refetches data for the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.recurringDepositsAccountData.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/recurringdeposits`, { skipLocationChange: true })\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>All Charges</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #chargesTable [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"feeOrPenalty\">\r\n        <th mat-header-cell *matHeaderCellDef> Fee/Penalty </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.penalty === true ? 'Penalty' : 'Fee' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paymentDueAt\">\r\n        <th mat-header-cell *matHeaderCellDef> Payment Due At </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"dueAsOf\">\r\n        <th mat-header-cell *matHeaderCellDef> Due As Of </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.dueDate | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"repeatsOn\">\r\n        <th mat-header-cell *matHeaderCellDef> Repeats On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{charge.feeOnMonthDay ? ([2000].concat(charge.feeOnMonthDay) | date: 'dd MMMM') : 'Unassigned'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"calculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Calculation Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.chargeCalculationType.value}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"due\">\r\n        <th mat-header-cell *matHeaderCellDef> Due </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amount}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountPaid}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountWaived}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountOutstanding}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span *ngIf=\"recurringDepositsAccountData.status.value === 'Submitted and pending approval'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Charge\"\r\n            *mifosxHasPermission=\"'UPDATE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); editCharge(charge)\">\r\n              <i class=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Charge\"\r\n            *mifosxHasPermission=\"'DELETE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); deleteCharge(charge.id)\">\r\n              <i class=\"fa fa-trash\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"recurringDepositsAccountData.status.value !== 'Submitted and pending approval' && charge.amountOutstanding !== 0\">\r\n            <span *ngIf=\"charge.chargeTimeType.value == 'Monthly Fee' || charge.chargeTimeType.value == 'Annual Fee'|| charge.chargeTimeType.value == 'Specified due date'\"> \r\n              <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Pay Charge\"\r\n              *mifosxHasPermission=\"'PAY_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); payCharge(charge.id)\">\r\n                <i class=\"fa fa-dollar\"></i>\r\n              </button>\r\n              <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Waive Charge\"\r\n              *mifosxHasPermission=\"'WAIVE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); waiveCharge(charge.id)\">\r\n                <i class=\"fa fa-flag\"></i>\r\n              </button>\r\n            </span>\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'mifosx-recurring-deposit-confirmation-action',\r\n  templateUrl: './recurring-deposit-confirmation-dialog.component.html',\r\n  styleUrls: ['./recurring-deposit-confirmation-dialog.component.scss']\r\n})\r\nexport class RecurringDepositConfirmationDialogComponent implements OnInit {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data Provides a confirmation for all the recurring deposit actions.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<RecurringDepositConfirmationDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>{{data.heading}}</h1>\r\n<div mat-dialog-content>\r\n  <p>{{ data.dialogContext }}</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Savings Datatable Tabs Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-datatable-tabs',\r\n  templateUrl: './datatable-tabs.component.html',\r\n  styleUrls: ['./datatable-tabs.component.scss']\r\n})\r\nexport class DatatableTabsComponent {\r\n\r\n  /** Savings Datatable */\r\n  savingsDatatable: any;\r\n  /** Multi Row Datatable Flag */\r\n  multiRowDatatableFlag: boolean;\r\n\r\n  /**\r\n   * Fetches Savings and datatables data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.data.subscribe((data: { savingsDatatable: any }) => {\r\n      this.savingsDatatable = data.savingsDatatable;\r\n      this.multiRowDatatableFlag = this.savingsDatatable.columnHeaders[0].columnName === 'id' ? true : false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  <mifosx-multi-row *ngIf=\"multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-multi-row>\r\n  <mifosx-single-row *ngIf=\"!multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-single-row>\r\n</div>","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/**\r\n * Savings Account Multi Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-multi-row',\r\n  templateUrl: './multi-row.component.html',\r\n  styleUrls: ['./multi-row.component.scss']\r\n})\r\nexport class MultiRowComponent implements OnInit, OnChanges {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Data Table Columns */\r\n  datatableColumns: string[] = [];\r\n  /** Data Table Data */\r\n  datatableData: any;\r\n  /** Account Id */\r\n  accountId: string;\r\n  /** Toggle button visibility */\r\n  showDeleteBotton: boolean;\r\n\r\n  /** Data Table Reference */\r\n  @ViewChild('dataTable', { static: true }) dataTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private datePipe: DatePipe,\r\n    private savingsService: SavingsService,\r\n    private dialog: MatDialog) {\r\n    this.accountId = this.route.parent.parent.snapshot.paramMap.get('recurringDepositAccountId');\r\n  }\r\n\r\n  /**\r\n   * Updates related variables on changes to dataObject.\r\n   */\r\n  ngOnChanges() {\r\n    this.datatableColumns = this.dataObject.columnHeaders.map((columnHeader: any) => {\r\n      return columnHeader.columnName;\r\n    });\r\n    this.datatableData = this.dataObject.data;\r\n    this.showDeleteBotton = this.datatableData[0] ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a new row to the given multi row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: 'en' };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.dataTableRef.renderRows();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes all rows of the given multi row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.accountId, this.datatableName).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.showDeleteBotton = false;\r\n            this.dataTableRef.renderRows();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-5\" fxLayoutGap=\"10px\">\r\n      <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"add()\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n        </button>\r\n      </span>\r\n      <span *mifosxHasPermission=\"'DELETE_' + datatableName\">\r\n        <button class=\"delete-button\" mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"showDeleteBotton\">\r\n          <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete All\r\n        </button>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <table #dataTable mat-table [hidden]=\"!datatableData[0]\" [dataSource]=\"datatableData\" class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <ng-container *ngFor=\"let datatableColumn of datatableColumns;let i = index\" [matColumnDef]=\"datatableColumn\">\r\n      <th mat-header-cell *matHeaderCellDef> {{datatableColumn}} </th>\r\n      <td mat-cell *matCellDef=\"let data\"> {{data.row[i]}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"datatableColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: datatableColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n\r\n/**\r\n * Savings Account Single Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-single-row',\r\n  templateUrl: './single-row.component.html',\r\n  styleUrls: ['./single-row.component.scss']\r\n})\r\nexport class SingleRowComponent implements OnInit {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Account Id */\r\n  accountId: string;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private datePipe: DatePipe,\r\n    private dialog: MatDialog,\r\n    private savingsService: SavingsService,\r\n    private settingsService: SettingsService, ) {\r\n    this.accountId = this.route.parent.parent.snapshot.paramMap.get('recurringDepositAccountId');\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the given single row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the current instance of single row data table.\r\n   */\r\n  edit() {\r\n    let dataTableEntryObject: any = { locale: 'en' };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    let formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    formfields = formfields.map((formfield: FormfieldBase, index: number) => {\r\n      formfield.value = (this.dataObject.data[0].row[index + 1]) ? this.dataObject.data[0].row[index + 1] : '';\r\n      return formfield;\r\n    });\r\n    const data = {\r\n      title: 'Edit ' + this.datatableName,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.editSavingsDatatableEntry(this.accountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the current instance of single row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.accountId, this.datatableName)\r\n          .subscribe(() => {\r\n            this.savingsService.getSavingsDatatable(this.accountId, this.datatableName).subscribe((dataObject: any) => {\r\n              this.dataObject = dataObject;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Maps API response to data table form fields.\r\n   * @param {any} columns Data Table Columns.\r\n   * @param {string[]} dateTransformColumns Columns transformed with date pipe.\r\n   * @param {any} dataTableEntryObject Additional data table details.\r\n   */\r\n  getFormfields(columns: any, dateTransformColumns: string[], dataTableEntryObject: any) {\r\n    return columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"50%\" class=\"tableName\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"50%\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n        <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"add()\" *ngIf=\"!dataObject.data[0]\">\r\n            <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n          </button>\r\n        </span>\r\n        <span *mifosxHasPermission=\"'UPDATE_' + datatableName\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"edit()\" *ngIf=\"dataObject.data[0]\">\r\n            <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n          </button>\r\n        </span>\r\n        <span *mifosxHasPermission=\"'DELETE_' + datatableName\" class=\"delete-button\">\r\n          <button mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"dataObject.data[0]\">\r\n            <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div>\r\n    <mat-list role=\"list\" *ngIf=\"dataObject.data[0]\">\r\n      <mat-list-item role=\"listitem\" *ngFor=\"let columnHeader of dataObject.columnHeaders;let i = index\">\r\n        {{columnHeader.columnName}} : {{dataObject.data[0].row[i]}}\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * Interest Rate Chart Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-interest-rate-chart-tab',\r\n  templateUrl: './interest-rate-chart-tab.component.html',\r\n  styleUrls: ['./interest-rate-chart-tab.component.scss'],\r\n  animations: [\r\n    trigger('expandChartSlab', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class InterestRateChartTabComponent {\r\n\r\n  /** Interest Rate Chart Data */\r\n  interestRateChartData: any = [];\r\n  /** Columns to be displayed in interest rate chart table. */\r\n  chartSlabsDisplayedColumns: any[] = ['period', 'amountRange', 'interest', 'description', 'actions'];\r\n  /** Columns to be displayed in incentives sub-table. */\r\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\r\n  /** Additional Column to display in incentives table  */\r\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\r\n  /** Expand Chart Slab Index used in the view */\r\n  expandChartSlabIndex: number;\r\n\r\n\r\n  /**\r\n   * Retrieves recurring deposits account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { recurringDepositsAccountData: any }) => {\r\n      this.interestRateChartData = data.recurringDepositsAccountData.accountChart.chartSlabs;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-20\">\r\n      <h3>All Interest Rates</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"interestRateChartData\" #chartsTable multiTemplateDataRows>\r\n\r\n      <ng-container matColumnDef=\"period\">\r\n        <th mat-header-cell *matHeaderCellDef> Period </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">\r\n          {{chartSlab.fromPeriod}}-{{chartSlab.toPeriod}}&nbsp;{{chartSlab.periodType.value}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amountRange\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount Range </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\">{{chartSlab.amountRangeFrom}}-{{chartSlab.amountRangeTo}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"interest\">\r\n        <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.annualInterestRate }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab\"> {{ chartSlab.description }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\">\r\n          <button mat-button color=\"primary\"\r\n            (click)=\"expandChartSlabIndex = expandChartSlabIndex === chartSlabIndex ? null : chartSlabIndex\">\r\n            <span *ngIf=\"expandChartSlabIndex !== chartSlabIndex\">\r\n              <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n              View Incentives\r\n            </span>\r\n            <span *ngIf=\"expandChartSlabIndex === chartSlabIndex\">\r\n              <fa-icon icon=\"eye-slash\"></fa-icon>&nbsp;&nbsp;\r\n              Hide Incentives\r\n            </span>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"incentives\">\r\n        <td mat-cell *matCellDef=\"let chartSlab; let chartSlabIndex = dataIndex\"\r\n          [attr.colspan]=\"chartSlabsDisplayedColumns.length\">\r\n\r\n          <div fxLayout=\"row wrap\" fxFlexFill class=\"incentives\"\r\n            [@expandChartSlab]=\"chartSlabIndex === expandChartSlabIndex ? 'expanded' : 'collapsed'\">\r\n\r\n            <mat-card fxLayout=\"row wrap\" fxFlexFill>\r\n\r\n              <h4 class=\"m-b-10\" fxFlex=\"13%\">\r\n                Incentives\r\n              </h4>\r\n\r\n              <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"chartSlab.incentives\"\r\n                *ngIf=\"chartSlab.incentives?.length\">\r\n\r\n                <ng-container matColumnDef=\"entityType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Entity Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.entityType.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"attributeName\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.attributeName.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"conditionType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Condition Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.conditionType.value | titlecase }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"attributeValue\">\r\n                  <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\" [ngSwitch]=\"incentive.attributeName\">\r\n                    {{ incentive.attributeValueDesc }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"incentiveType\">\r\n                  <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.incentiveType.value }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n                  <td mat-cell *matCellDef=\"let incentive\">\r\n                    {{ incentive.amount }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"incentivesDisplayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: incentivesDisplayedColumns;\"></tr>\r\n\r\n              </table>\r\n\r\n            </mat-card>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chartSlabsDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsDisplayedColumns;\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chartSlabsIncentivesDisplayedColumns;\" class=\"incentives-row\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from '../recurring-deposits.service';\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/** Custom Buttons Configuration */\r\nimport { RecurringDepositsButtonsConfiguration } from './recurring-deposits-buttons.config';\r\n\r\n/** Custom Dialogs */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { RecurringDepositConfirmationDialogComponent } from './custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component';\r\n\r\n\r\n/**\r\n * RecurringDeposits Account View Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-recurring-deposits-account-view',\r\n  templateUrl: './recurring-deposits-account-view.component.html',\r\n  styleUrls: ['./recurring-deposits-account-view.component.scss']\r\n})\r\nexport class RecurringDepositsAccountViewComponent implements OnInit {\r\n\r\n  /** RecurringDeposits Account Data */\r\n  recurringDepositsAccountData: any;\r\n  /** Button Configuration */\r\n  buttonConfig: RecurringDepositsButtonsConfiguration;\r\n  /** Charges Data */\r\n  charges: any;\r\n  /** Savings Data Tables */\r\n  savingsDatatables: any;\r\n  /** Is Prematured Allowed */\r\n  isprematureAllowed: any;\r\n  /**\r\n   * Fetches recurringDeposits account data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {RecurringDepositsService} recurringDepositsService RecurringDeposits Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private recurringDepositsService: RecurringDepositsService,\r\n              private savingsService: SavingsService,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountData: any, savingsDatatables: any }) => {\r\n      this.recurringDepositsAccountData = data.recurringDepositsAccountData;\r\n      this.charges = this.recurringDepositsAccountData.charges;\r\n      this.savingsDatatables = data.savingsDatatables;\r\n      this.isprematureAllowed = data.recurringDepositsAccountData.maturityDate != null;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setConditionalButtons();\r\n  }\r\n\r\n  /**\r\n   * Adds options to button config. conditionaly.\r\n   */\r\n  setConditionalButtons() {\r\n    const status = this.recurringDepositsAccountData.status.value;\r\n    this.buttonConfig = new RecurringDepositsButtonsConfiguration(status);\r\n    if (this.recurringDepositsAccountData.clientId && this.recurringDepositsAccountData.status.value === 'Matured') {\r\n      this.buttonConfig.addOption({\r\n        name: 'Transfer Funds',\r\n      });\r\n    }\r\n\r\n    if (this.recurringDepositsAccountData.charges && this.recurringDepositsAccountData.status.value === 'Matured') {\r\n      this.charges.forEach((element: any) => {\r\n        if (element.name === 'Annual fee - INR') {\r\n          this.buttonConfig.addOption({\r\n            name: 'Apply Annual Fees',\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.recurringDepositsAccountData.clientId && this.recurringDepositsAccountData.status.value === 'Active') {\r\n      if (this.recurringDepositsAccountData.allowWithdrawal === true) {\r\n        this.buttonConfig.addOption({\r\n          name: 'Withdraw'\r\n        });\r\n      }\r\n      if (this.recurringDepositsAccountData.charges) {\r\n        this.charges.forEach((element: any) => {\r\n          if (element.name === 'Annual fee - INR') {\r\n            this.buttonConfig.addOption({\r\n              name: 'Apply Annual Fees',\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if (!this.isprematureAllowed) {\r\n        this.buttonConfig.addButton({\r\n          name: 'Close',\r\n          icon: 'fa fa-arrow-right'\r\n        });\r\n      }\r\n\r\n      if (this.recurringDepositsAccountData.taxGroup) {\r\n        if (this.recurringDepositsAccountData.withHoldTax) {\r\n          this.buttonConfig.addOption({\r\n            name: 'Disable Withhold Tax',\r\n            taskPermissionName: 'UPDATEWITHHOLDTAX_SAVINGSACCOUNT'\r\n          });\r\n        } else {\r\n          this.buttonConfig.addOption({\r\n            name: 'Enable Withhold Tax',\r\n            taskPermissionName: 'UPDATEWITHHOLDTAX_SAVINGSACCOUNT'\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Refetches data for the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  reload() {\r\n    const clientId = this.recurringDepositsAccountData.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/recurringdeposits`, { skipLocationChange: true })\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n  /**\r\n   * Performs action button/option action.\r\n   * @param {string} name action name.\r\n   */\r\n  doAction(name: string) {\r\n    switch (name) {\r\n      case 'Activate':\r\n      case 'Approve':\r\n      case 'Reject':\r\n      case 'Undo Approval':\r\n      case 'Add Charge':\r\n      case 'Withdraw By Client':\r\n      case 'Premature Close':\r\n      case 'Close':\r\n      case 'Deposit':\r\n        this.router.navigate([`actions/${name}`], { relativeTo: this.route });\r\n        break;\r\n      case 'Modify Application':\r\n        this.router.navigate(['edit-recurring-deposit-account'], { relativeTo: this.route });\r\n        break;\r\n      case 'Delete':\r\n        this.deleteRecurringDepositsAccount();\r\n        break;\r\n      case 'Calculate Interest':\r\n        this.calculateInterest();\r\n        break;\r\n      case 'Post Interest':\r\n        this.postInterest();\r\n        break;\r\n      case 'Enable Withhold Tax':\r\n        this.enableWithHoldTax();\r\n        break;\r\n      case 'Disable Withhold Tax':\r\n        this.disableWithHoldTax();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes Recurring Deposits Account.\r\n   */\r\n  private deleteRecurringDepositsAccount() {\r\n    const deleteRecurringDepositsAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `Recurring deposit account with id: ${this.recurringDepositsAccountData.id}` }\r\n    });\r\n    deleteRecurringDepositsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.recurringDepositsService.deleteRecurringDepositsAccount(this.recurringDepositsAccountData.id).subscribe(() => {\r\n          this.router.navigate(['../../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculates savings account's interest\r\n   */\r\n  private calculateInterest() {\r\n    const calculateInterestAccountDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, {\r\n      data: { heading: 'Calculate Interest', dialogContext: `Are you sure you want to calculate interest ?` }\r\n    });\r\n    calculateInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.recurringDepositsAccountData.id, 'calculateInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Posts savings account's interest\r\n   */\r\n  private postInterest() {\r\n    const postInterestAccountDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, {\r\n      data: { heading: 'Post Interest', dialogContext: 'Are you sure you want to post interest ?' }\r\n    });\r\n    postInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.recurringDepositsService.executeRecurringDepositsAccountCommand(this.recurringDepositsAccountData.id, 'postInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Enables withhold tax for recurring deposits account.\r\n   * Recurring deposits endpoint is not supported so using Savings endpoint.\r\n   */\r\n  private enableWithHoldTax() {\r\n    const deleteSavingsAccountDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, {\r\n      data: { heading: 'Enable Withhold Tax', dialogContext: `Enable withhold tax for this account ?` }\r\n    });\r\n    deleteSavingsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.recurringDepositsAccountData.id, 'updateWithHoldTax', { withHoldTax: true })\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disables withhold tax for recurring deposits account\r\n   * Recurring deposits endpoint is not supported so using Savings endpoint.\r\n   */\r\n  private disableWithHoldTax() {\r\n    const disableWithHoldTaxDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, {\r\n      data: { heading: 'Disable Withhold Tax', dialogContext: 'Disable withhold tax for this account ?' }\r\n    });\r\n    disableWithHoldTaxDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.recurringDepositsAccountData.id, 'updateWithHoldTax', { withHoldTax: false })\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"recurringDeposits-account-card\">\r\n\r\n  <mat-card-header fxLayout=\"column\" class=\"header\">\r\n\r\n    <mat-card-title-group class=\"header-title-group\">\r\n\r\n      <div class=\"profile-image-container\">\r\n        <div>\r\n          <img mat-card-md-image class=\"profile-image\" matTooltip=\"Recurring Deposits Account\"\r\n            [src]=\"'assets/images/recurring-deposits_account_placeholder.png'\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-typography account-card-title\">\r\n        <mat-card-title>\r\n          <h3>\r\n            <i class=\"fa fa-stop\" [ngClass]=\"recurringDepositsAccountData.status.code | statusLookup\"\r\n              [matTooltip]=\"recurringDepositsAccountData.status.value\"></i>\r\n            Account Name : {{recurringDepositsAccountData.depositProductName}}\r\n          </h3>\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          <p>\r\n            Account #: {{recurringDepositsAccountData.accountNo}} | Client Name:\r\n            {{recurringDepositsAccountData.clientName}}<br />\r\n            <span\r\n              *ngIf=\"!recurringDepositsAccountData.status.rejected && !recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n              Current Balance:\r\n              {{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.accountBalance}}<br />\r\n              Available Balance:\r\n              {{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.availableBalance}}<br />\r\n            </span>\r\n          </p>\r\n        </mat-card-subtitle>\r\n      </div>\r\n\r\n    </mat-card-title-group>\r\n\r\n    <mat-card-actions class=\"account-actions\">\r\n\r\n      <ng-container *ngFor=\"let button of buttonConfig.singleButtons\">\r\n        <button mat-raised-button (click)=\"doAction(button.name)\">\r\n          <i class=\"{{button.icon}}\"></i> {{button.name}}</button>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"buttonConfig.options.length\">\r\n        <button mat-raised-button [matMenuTriggerFor]=\"More\">More</button>\r\n        <mat-menu #More=\"matMenu\">\r\n        <span *ngFor=\"let option of buttonConfig.options\">\r\n          <button mat-menu-item (click)=\"doAction(option.name)\">{{option.name}}</button>\r\n        </span>\r\n        </mat-menu>\r\n      </ng-container>\r\n\r\n    </mat-card-actions>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content class=\"content\">\r\n\r\n    <div class=\"recurringDeposits-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"!recurringDepositsAccountData.status.rejected && !recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <h4 class=\"table-headers\">Savings Details</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Field Officer</td>\r\n              <td>{{recurringDepositsAccountData.fieldOfficerName}}<span\r\n                  *ngIf=\"!recurringDepositsAccountData.fieldOfficerName\">Unassigned</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Activation date</td>\r\n              <td>{{recurringDepositsAccountData.timeline.activatedOnDate | date}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Maturity Date</td>\r\n              <td><span>{{recurringDepositsAccountData.maturityDate | date}}</span></td>\r\n            </tr>\r\n            <tr\r\n              *ngIf=\"recurringDepositsAccountData.timeline.closedOnDate || recurringDepositsAccountData.summary.totalWitddrawals\">\r\n              <td *ngIf=\"recurringDepositsAccountData.timeline.closedOnDate\">\r\n                Closed on Date</td>\r\n              <td><span>{{recurringDepositsAccountData.timeline.closedOnDate | date}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Period</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.depositPeriod}}&nbsp;{{recurringDepositsAccountData.depositPeriodFrequency.value}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Deposit Frequency</td>\r\n              <td><span>{{recurringDepositsAccountData.recurringFrequency}}\r\n                  &nbsp;{{recurringDepositsAccountData.recurringFrequencyType.value}}\r\n                </span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.minBalanceForInterestCalculation\">\r\n              <td> Balance Required For Interest Calculation</td>\r\n              <td><span>{{recurringDepositsAccountData.minBalanceForInterestCalculation}}</span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.witdHoldTax\">\r\n              <td> Witdhold Tax Group </td>\r\n              <td><span>{{recurringDepositsAccountData.taxGroup.name}}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"!recurringDepositsAccountData.status.rejected && !recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <h4 class=\"table-headers\">Performance History</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Principal Amount</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.depositAmount}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Maturity Amount</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.maturityAmount | number}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Recurring Deposit Amount</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData?.mandatoryRecommendedDepositAmount | number}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Deposits till Date</td>\r\n              <td><span\r\n                  *ngIf=\"recurringDepositsAccountData.summary.totalDeposits\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.totalDeposits | number}}</span>\r\n                <span\r\n                  *ngIf=\"!recurringDepositsAccountData.summary.totalDeposits\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Withdrwals till Date</td>\r\n              <td><span\r\n                  *ngIf=\"recurringDepositsAccountData.summary.totalWithdrawals\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.totalWithdrawals | number}}</span>\r\n                <span\r\n                  *ngIf=\"!recurringDepositsAccountData.summary.totalWithdrawals\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"recurringDepositsAccountData.summary.totalInterestEarned >= 0\">\r\n              <td >Interest Earned</td>\r\n              <td><span>{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.totalInterestEarned| number}}</span>\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"recurringDepositsAccountData.status.rejected || recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Date of Deposit</td>\r\n              <td>\r\n                <span *ngIf=\"!recurringDepositsAccountData.expectedFirstDepositOnDate\">{{recurringDepositsAccountData.timeline.activatedOnDate | date}}\r\n                  <span *ngIf=\"!recurringDepositsAccountData.timeline.activatedOnDate\">Not Activated</span>\r\n                </span>\r\n                <span *ngIf=\"recurringDepositsAccountData.expectedFirstDepositOnDate\" >{{recurringDepositsAccountData.expectedFirstDepositOnDate | date}}\r\n                  <span *ngIf=\"!recurringDepositsAccountData.expectedFirstDepositOnDate\">Not Activated</span>\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Period</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.depositPeriod}}&nbsp;{{recurringDepositsAccountData.depositPeriodFrequency.value}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.maturityDate\">\r\n              <td>Maturity Date</td>\r\n              <td><span>{{recurringDepositsAccountData.maturityDate | date}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Deposits </td>\r\n              <td>\r\n                <span *ngIf=\"recurringDepositsAccountData.summary.totalDeposits\">{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.summary.totalDeposits }}</span>\r\n                <span *ngIf=\"!recurringDepositsAccountData.summary.totalDeposits\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n            <tr >\r\n              <td> Actual Available Balance</td>\r\n              <td>{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.summary.accountBalance }}\r\n            </tr>\r\n            <tr>\r\n              <td> Recurring Deposits Amount</td>\r\n              <td>\r\n                {{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.mandatoryRecommendedDepositAmount }}\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.summary.totalInterestEarned\">\r\n              <td> Interests Earned </td>\r\n              <td><span>{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.summary.totalInterestEarned }}</span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.summary.totalWithdrawals\">\r\n              <td> Total Withdrawls </td>\r\n              <td>\r\n                <span>{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.summary.totalWithdrawals }}</span>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.minBalanceForInterestCalculation\">\r\n              <td> Balance Required For Interest Calculation </td>\r\n              <td>\r\n                <span>{{ recurringDepositsAccountData.minBalanceForInterestCalculation }}</span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"recurringDepositsAccountData.status.rejected || recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Principal Amount</td>\r\n              <td><span\r\n                  *ngIf=\"recurringDepositsAccountData.depositAmount\">{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.depositAmount }}</span>\r\n                <span\r\n                  *ngIf=\"!recurringDepositsAccountData.depositAmount\">{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Rate of Interest</td>\r\n              <td>\r\n                <span>{{recurringDepositsAccountData.nominalAnnualInterestRate}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.maturityDate\">\r\n              <td>Maturity Amount</td>\r\n              <td>\r\n                <span>{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.maturityAmount }}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Withdrawls </td>\r\n              <td>\r\n                <span\r\n                  *ngIf=\"recurringDepositsAccountData.summary.totalWithdrawals\">{{ recurringDepositsAccountData.currency.displaySymbol }}&nbsp;{{ recurringDepositsAccountData.summary.totalWithdrawals }}</span>\r\n                <span\r\n                  *ngIf=\"!recurringDepositsAccountData.summary.totalWithdrawals\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.timeline.closedOnDate\">\r\n              <td> Closed on Date </td>\r\n              <td>\r\n                {{ recurringDepositsAccountData.timeline.closedOnDate | date }}\r\n            </tr>\r\n            <tr>\r\n              <td> Deposits Frequency </td>\r\n              <td>\r\n                {{ recurringDepositsAccountData.recurringFrequency }}&nbsp;{{ recurringDepositsAccountData.recurringFrequencyType.value }}\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.summary.totalInterestEarned\">\r\n              <td> Interests Posted </td>\r\n              <td>\r\n                <span\r\n                  *ngIf=\"recurringDepositsAccountData.summary.totalInterestPosted\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;{{recurringDepositsAccountData.summary.totalInterestPosted}}</span>\r\n                <span\r\n                  *ngIf=\"!recurringDepositsAccountData.summary.totalInterestPosted\">{{recurringDepositsAccountData.currency.displaySymbol}}&nbsp;0</span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"recurringDeposits-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"!recurringDepositsAccountData.status.rejected && !recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <h4 class=\"table-headers\">Interest Details</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td >Interest Rate</td>\r\n              <td><span>{{recurringDepositsAccountData.nominalAnnualInterestRate}}%</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Compounding period</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCompoundingPeriodType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Posting period</td>\r\n              <td><span>{{recurringDepositsAccountData.interestPostingPeriodType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest calculated using</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCalculationType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td># Days in Year</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCalculationDaysInYearType.value}}</span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.preClosurePenalApplicable\">\r\n              <td>Pre-closure penal Interest (less)</td>\r\n              <td><span>{{recurringDepositsAccountData.preClosurePenalInterest}} % on\r\n                  {{recurringDepositsAccountData.preClosurePenalInterestOnType.value}}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\"\r\n        *ngIf=\"recurringDepositsAccountData.status.rejected || recurringDepositsAccountData.status.submittedAndPendingApproval\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Interest Compounding Period</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCompoundingPeriodType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Posting period</td>\r\n              <td><span>{{recurringDepositsAccountData.interestPostingPeriodType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest calculated using</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCalculationType.value}}</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td># Days in Year</td>\r\n              <td><span>{{recurringDepositsAccountData.interestCalculationDaysInYearType.value}}</span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.preClosurePenalApplicable\">\r\n              <td>Pre-closure penal Interest (less)</td>\r\n              <td><span>{{recurringDepositsAccountData.preClosurePenalInterest}} % on\r\n                  {{recurringDepositsAccountData.preClosurePenalInterestOnType.value}}</span></td>\r\n            </tr>\r\n            <tr *ngIf=\"recurringDepositsAccountData.witdHoldTax\">\r\n              <td> Witdhold Tax Group </td>\r\n              <td><span>{{recurringDepositsAccountData.taxGroup.name}}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <nav mat-tab-nav-bar class=\"navigation-tabs\">\r\n        <a mat-tab-link [routerLink]=\"['./interest-rate-chart']\" routerLinkActive #IRC=\"routerLinkActive\"\r\n          [active]=\"IRC.isActive\">\r\n          Interest Rate Chart\r\n        </a>\r\n        <ng-container *ngIf=\"recurringDepositsAccountData.transactions\">\r\n          <a mat-tab-link [routerLink]=\"['./transactions']\" routerLinkActive #transactions=\"routerLinkActive\"\r\n            [active]=\"transactions.isActive\">\r\n            Transactions\r\n          </a>\r\n        </ng-container>\r\n        <a mat-tab-link [routerLink]=\"['./charges']\" routerLinkActive #charges=\"routerLinkActive\" [active]=\"charges.isActive\">\r\n          Charges\r\n        </a>\r\n        <ng-container *ngIf=\"recurringDepositsAccountData.clientId\">\r\n          <a mat-tab-link [routerLink]=\"['./standing-instructions-tab']\" routerLinkActive #standingInstructions=\"routerLinkActive\"\r\n            [active]=\"standingInstructions.isActive\">\r\n            Standing Instructions\r\n          </a>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let savingsDatatable of savingsDatatables\">\r\n          <a mat-tab-link *mifosxHasPermission=\"'READ_' + savingsDatatable.registeredTableName\"\r\n            [routerLink]=\"['./datatables',savingsDatatable.registeredTableName]\" routerLinkActive #datatable=\"routerLinkActive\"\r\n            [active]=\"datatable.isActive\">\r\n            {{savingsDatatable.registeredTableName}}\r\n          </a>\r\n        </ng-container>\r\n    </nav>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","/** Recurring Deposits Account Buttons Configuration */\r\nexport class RecurringDepositsButtonsConfiguration {\r\n\r\n  optionArray: {\r\n    name: string,\r\n    taskPermissionName?: string,\r\n  }[];\r\n\r\n  buttonsArray: {\r\n    name: string,\r\n    icon: string,\r\n    taskPermissionName?: string,\r\n  }[];\r\n\r\n  constructor(status: string) {\r\n    this.setOptions(status);\r\n    this.setButtons(status);\r\n  }\r\n\r\n  get singleButtons() {\r\n    return this.buttonsArray;\r\n  }\r\n\r\n  get options() {\r\n    return this.optionArray;\r\n  }\r\n\r\n  setButtons(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Deposit',\r\n            icon: 'fa fa-arrow-up'\r\n          },\r\n          {\r\n            name: 'Premature Close',\r\n            icon: 'fa fa-arrow-left'\r\n          },\r\n          {\r\n            name: 'Calculate Interest',\r\n            icon: 'fa fa-table',\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Modify Application',\r\n            icon: 'fa fa-pencil ',\r\n          },\r\n          {\r\n            name: 'Approve',\r\n            icon: 'fa fa-check'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Undo Approval',\r\n            icon: 'fa fa-undo'\r\n          },\r\n          {\r\n            name: 'Activate',\r\n            icon: 'fa fa-check'\r\n          }\r\n        ];\r\n      break;\r\n      case 'Matured':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Close',\r\n            icon: 'fa fa-arrow-right'\r\n          },\r\n          {\r\n            name: 'Calculate Interest',\r\n            icon: 'fa fa-table'\r\n          },\r\n          {\r\n            name: 'Post Interest',\r\n            icon: 'fa fa-table'\r\n          }\r\n        ];\r\n      break;\r\n      default:\r\n        this.buttonsArray = [];\r\n    }\r\n  }\r\n\r\n  setOptions(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Post Interest',\r\n          },\r\n          {\r\n            name: 'Add Charge',\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Reject'\r\n          },\r\n          {\r\n            name: 'Withdraw By Client'\r\n          },\r\n          {\r\n            name: 'Add Charge'\r\n          },\r\n          {\r\n            name: 'Delete'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Matured':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Add Charge'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n      default:\r\n        this.optionArray = [];\r\n    }\r\n  }\r\n\r\n  addOption(option: {name: string, icon?: string, taskPermissionName?: string}) {\r\n    this.optionArray.push(option);\r\n  }\r\n\r\n  addButton(option: { name: string, icon: string, taskPermissionName?: string }) {\r\n    this.buttonsArray.push(option);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from 'app/deposits/recurring-deposits/recurring-deposits.service';\r\nimport { AccountTransfersService } from 'app/account-transfers/account-transfers.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/**\r\n * Recurring Deposits Standing Instructions Tab\r\n */\r\n@Component({\r\n  selector: 'mifosx-standing-instructions-tab',\r\n  templateUrl: './standing-instructions-tab.component.html',\r\n  styleUrls: ['./standing-instructions-tab.component.scss']\r\n})\r\nexport class StandingInstructionsTabComponent implements OnInit {\r\n\r\n  /** Recurring Deposits Data */\r\n  recurringDepositsData: any;\r\n  /** Instructions Data */\r\n  instructionsData: any[];\r\n  /** Data source for instructions table. */\r\n  dataSource = new MatTableDataSource();\r\n  /** Columns to be displayed in instructions table. */\r\n  displayedColumns: string[] = ['client', 'fromAccount', 'beneficiary', 'toAccount', 'amount', 'validity', 'actions'];\r\n\r\n  /** Instruction Table Reference */\r\n  @ViewChild('instructionsTable', { static: true }) instructionTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves Recurring Deposits Account Data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private dialog: MatDialog,\r\n    private accountTransfersService: AccountTransfersService,\r\n    private settingsService: SettingsService, ) {\r\n    this.route.parent.data.subscribe((data: { recurringDepositsAccountData: any }) => {\r\n      this.recurringDepositsData = data.recurringDepositsAccountData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStandingInstructions();\r\n  }\r\n\r\n  /**\r\n   * Retrieves standing instructions and initializes instructions table.\r\n   */\r\n  getStandingInstructions() {\r\n    const clientId = this.recurringDepositsData.clientId;\r\n    const clientName = this.recurringDepositsData.clientName;\r\n    const accountId = this.recurringDepositsData.id;\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.recurringDepositsService.getStandingInstructions(clientId, clientName, accountId, locale, dateFormat).subscribe((response: any) => {\r\n      this.instructionsData = response.pageItems;\r\n      this.dataSource.data = this.instructionsData;\r\n      this.instructionTableRef.renderRows();\r\n    });\r\n  }\r\n\r\n  deleteStandingInstruction(instructionId: any) {\r\n    const deleteStandingInstructionDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `standing instruction id: ${instructionId}` }\r\n    });\r\n    deleteStandingInstructionDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.accountTransfersService.deleteStandingInstrucions(instructionId)\r\n          .subscribe(() => { });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Standing Instructions</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #instructionsTable [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"client\">\r\n        <th mat-header-cell *matHeaderCellDef> Client </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromClient.displayName}}-{{instruction.fromClient.id}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fromAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> From Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromAccount.accountNo}}\r\n          ({{instruction.fromAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"beneficiary\">\r\n        <th mat-header-cell *matHeaderCellDef> Beneficiary </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toClient.displayName}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"toAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> To Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toAccount.accountNo}}\r\n          ({{instruction.toAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.instructionType.value}}/{{instruction.amount}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"validity\">\r\n        <th mat-header-cell *matHeaderCellDef> Validity </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.validFrom | date}} to {{instruction.validTill | date}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\"\r\n              matTooltip=\"Edit Standing Instruction\" *mifosxHasPermission=\"'UPDATE_STANDINGINSTRUCTION'\"\r\n              [routerLink]=\"['../', 'standing-instructions', instruction.id, 'edit']\">\r\n              <i class=\"fa fa-edit\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\"\r\n              matTooltip=\"Delete Standing Instruction\" *mifosxHasPermission=\"'DELETE_STANDINGINSTRUCTION'\" (click)=\"deleteStandingInstruction(instruction.id)\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </button>\r\n          </span>\r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"View Standing Instruction\"\r\n            *mifosxHasPermission=\"'READ_STANDINGINSTRUCTION'\" [routerLink]=\"['../', 'standing-instructions', instruction.id, 'view']\">\r\n            <i class=\"fa fa-eye\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from 'app/deposits/recurring-deposits/recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Transaction component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-transaction',\r\n  templateUrl: './edit-transaction.component.html',\r\n  styleUrls: ['./edit-transaction.component.scss']\r\n})\r\nexport class EditTransactionComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Recurring Deposits transaction form. */\r\n  editTransactionForm: FormGroup;\r\n  /** Recurring Deposits transaction payment options. */\r\n  paymentTypeOptions: {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    isCashPayment: boolean,\r\n    position: number\r\n  }[];\r\n  /** Flag to enable payment details fields. */\r\n  addPaymentDetailsFlag: Boolean = false;\r\n  /** Recurring deposit account's Id */\r\n  recurringDepositAccountId: string;\r\n  /** Transaction Template */\r\n  transactionTemplateData: any;\r\n\r\n  /**\r\n   * Retrieves the Recurring Deposit Account transaction template data from `resolve`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {RecurringDepositsService} recurringDepositsService Recurring Deposits Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private recurringDepositsService: RecurringDepositsService,\r\n    private settingsService: SettingsService, ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountTransactionTemplate: any }) => {\r\n      this.transactionTemplateData = data.recurringDepositsAccountTransactionTemplate;\r\n      this.paymentTypeOptions = this.transactionTemplateData.paymentTypeOptions;\r\n    });\r\n    this.recurringDepositAccountId = this.route.parent.parent.snapshot.params['recurringDepositAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Recurring Deposits account transaction form when component loads.\r\n   */\r\n  ngOnInit() {\r\n    this.createEditTransactionForm();\r\n    this.editTransactionForm.patchValue({\r\n      'transactionDate': this.transactionTemplateData.date && new Date(this.transactionTemplateData.date),\r\n      'transactionAmount': this.transactionTemplateData.amount,\r\n      'paymentTypeId': this.transactionTemplateData.paymentTypeId\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create Edit Recurring Deposit Account Transaction Form.\r\n   */\r\n  createEditTransactionForm() {\r\n    this.editTransactionForm = this.formBuilder.group({\r\n      'transactionDate': ['', Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': [''],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.addPaymentDetailsFlag = !this.addPaymentDetailsFlag;\r\n    if (this.addPaymentDetailsFlag) {\r\n      this.editTransactionForm.addControl('accountNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('checkNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('routingCode', new FormControl(''));\r\n      this.editTransactionForm.addControl('receiptNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.editTransactionForm.removeControl('accountNumber');\r\n      this.editTransactionForm.removeControl('checkNumber');\r\n      this.editTransactionForm.removeControl('routingCode');\r\n      this.editTransactionForm.removeControl('receiptNumber');\r\n      this.editTransactionForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submit the transaction details.\r\n   */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.editTransactionForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.editTransactionForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const transactionData = this.editTransactionForm.value;\r\n    transactionData.locale = this.settingsService.language.code;\r\n    transactionData.dateFormat = dateFormat;\r\n    this.recurringDepositsService.executeRecurringDepositsAccountTransactionsCommand(this.recurringDepositAccountId, 'modify', transactionData, this.transactionTemplateData.id)\r\n      .subscribe(res => {\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"editTransactionForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content fxLayout=\"column\">\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\"\r\n            formControlName=\"transactionDate\" required>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dueDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionDate.hasError('required')\">\r\n            Transaction Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Amount</mat-label>\r\n          <input type=\"number\" formControlName=\"transactionAmount\" required matInput />\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionAmount.hasError('required')\">\r\n            Transaction Amount is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Payment Type</mat-label>\r\n          <mat-select formControlName=\"paymentTypeId\">\r\n            <mat-option *ngFor=\"let paymentType of paymentTypeOptions\" [value]=\"paymentType.id\">\r\n              {{ paymentType.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n          <mat-label fxFlexAlign=\"center\">Show Payment Details</mat-label>\r\n          <button type=\"button\" mat-mini-fab color=\"primary\" (click)=\"addPaymentDetails()\">\r\n            <fa-icon [icon]=\"!addPaymentDetailsFlag ? 'plus-circle' : 'minus-circle'\" size=\"lg\"></fa-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['accountNumber']\">\r\n          <mat-label>Account Number</mat-label>\r\n          <input type=\"number\" formControlName=\"accountNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['checkNumber']\">\r\n          <mat-label>Cheque</mat-label>\r\n          <input type=\"number\" formControlName=\"checkNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['routingCode']\">\r\n          <mat-label>Routing Code</mat-label>\r\n          <input formControlName=\"routingCode\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['receiptNumber']\">\r\n          <mat-label>Receipt Number</mat-label>\r\n          <input formControlName=\"receiptNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['bankNumber']\">\r\n          <mat-label>Bank</mat-label>\r\n          <input formControlName=\"bankNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!editTransactionForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/**\r\n * Transactions Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-transactions-tab',\r\n  templateUrl: './transactions-tab.component.html',\r\n  styleUrls: ['./transactions-tab.component.scss']\r\n})\r\nexport class TransactionsTabComponent implements OnInit {\r\n\r\n  /** Recurring Deposits Account Status */\r\n  status: any;\r\n  /** Transactions Data */\r\n  transactionsData: any;\r\n  /** Columns to be displayed in transactions table. */\r\n  displayedColumns: string[] = ['id', 'transactionDate', 'transactionType', 'debit', 'credit', 'balance'];\r\n  /** Data source for transactions table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /**\r\n   * Retrieves recurring deposits account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.route.parent.data.subscribe((data: { recurringDepositsAccountData: any }) => {\r\n      this.transactionsData = data.recurringDepositsAccountData.transactions;\r\n      this.status = data.recurringDepositsAccountData.status.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.transactionsData);\r\n  }\r\n\r\n  /**\r\n   * Checks if transaction is debit.\r\n   * @param {any} transactionType Transaction Type\r\n   */\r\n  isDebit(transactionType: any) {\r\n    return transactionType.withdrawal === true || transactionType.feeDeduction === true\r\n      || transactionType.overdraftInterest === true || transactionType.withholdTax === true;\r\n  }\r\n\r\n  /**\r\n   * Show Transactions Details\r\n   * @param transactionsData Transactions Data\r\n   */\r\n  showTransactions(transactionsData: any) {\r\n    if (transactionsData.transfer) {\r\n      this.router.navigate([`account-transfers/account-transfers/${transactionsData.transfer.id}`], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate([transactionsData.id], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\"> {{ transaction.id }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\"> {{ transaction.date | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionType\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Type </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\"> {{ transaction.transactionType.value  }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"debit\">\r\n        <th mat-header-cell *matHeaderCellDef> Debit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\">\r\n          {{ isDebit(transaction.transactionType) ? transaction.amount : 'N/A'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"credit\">\r\n        <th mat-header-cell *matHeaderCellDef> Credit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\">\r\n          {{ !isDebit(transaction.transactionType) ? transaction.amount : 'N/A' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"balance\">\r\n        <th mat-header-cell *matHeaderCellDef> Balance </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.reversed}\"> {{ transaction.runningBalance }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" (click)=\"showTransactions(row)\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { RecurringDepositsService } from 'app/deposits/recurring-deposits/recurring-deposits.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { RecurringDepositConfirmationDialogComponent } from '../../custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component';\r\n\r\n/**\r\n * View Transaction Component.\r\n * TODO: Add support for account transfers.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-transaction',\r\n  templateUrl: './view-transaction.component.html',\r\n  styleUrls: ['./view-transaction.component.scss']\r\n})\r\nexport class ViewTransactionComponent {\r\n\r\n  /** Transaction data. */\r\n  transactionData: any;\r\n\r\n  /**\r\n   * Retrieves the Transaction data from `resolve`.\r\n   * @param {RecurringDepositsService} recurringDepositsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private recurringDepositsService: RecurringDepositsService,\r\n    private route: ActivatedRoute,\r\n    private datePipe: DatePipe,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private settingsService: SettingsService, ) {\r\n    this.route.data.subscribe((data: { recurringDepositsAccountTransaction: any }) => {\r\n      this.transactionData = data.recurringDepositsAccountTransaction;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the recurring deposits transaction\r\n   */\r\n  undoTransaction() {\r\n    const accountId = this.route.parent.snapshot.params['recurringDepositAccountId'];\r\n    const undoTransactionAccountDialogRef = this.dialog.open(RecurringDepositConfirmationDialogComponent, { data: { heading: 'Undo Transaction', dialogContext: 'Are you sure you want to undo this transaction ?' } });\r\n    undoTransactionAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const data = {\r\n          transactionDate: this.datePipe.transform(this.transactionData.date && new Date(this.transactionData.date), dateFormat),\r\n          transactionAmount: 0,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.recurringDepositsService.executeRecurringDepositsAccountTransactionsCommand(accountId, 'undo', data, this.transactionData.id).subscribe(() => {\r\n          this.router.navigate(['../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayoutAlign=\"end\" class=\"container m-b-20\" fxLayoutGap=\"2%\"\r\n  *ngIf=\"!(transactionData.reversed)\">\r\n  <span *mifosxHasPermission=\"'ADJUSTTRANSACTION_SAVINGSACCOUNT'\">\r\n    <button mat-raised-button color=\"primary\"\r\n      *ngIf=\"!(transactionData.transactionType.value == 'Transfer' || transactionData.reversed == 'true')\"\r\n      [routerLink]=\"'edit'\">\r\n      <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n    </button>\r\n  </span>\r\n  <button mat-raised-button color=\"warn\"\r\n    *mifosxHasPermission=\"'UNDOTRANSACTION_SAVINGSACCOUNT'\"\r\n    (click)=\"undoTransaction()\">\r\n    <fa-icon icon=\"undo\"></fa-icon>&nbsp;&nbsp;Undo\r\n  </button>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Id\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.id }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.transactionType.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Date\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.date | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.currency.displayLabel }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Amount\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.amount }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" *ngIf=\"transactionData.note\" class=\"mat-body-strong\">\r\n          Note\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" *ngIf=\"transactionData.note\">\r\n          {{ transactionData.note }}\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"transactionData.paymentDetailData\">\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Payment Type\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.paymentType.name }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Account No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.accountNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Cheque Number\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.checkNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Routing Code\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.routingCode }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Receipt No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.receiptNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Bank No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.bankNumber }}\r\n          </div>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/** Translation Imports */\r\nimport { extract } from '../../core/i18n/i18n.service';\r\n\r\n/** Custom Components */\r\nimport { RecurringDepositsAccountViewComponent } from './recurring-deposits-account-view/recurring-deposits-account-view.component';\r\nimport { InterestRateChartTabComponent } from './recurring-deposits-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component';\r\nimport { TransactionsTabComponent } from './recurring-deposits-account-view/transactions-tab/transactions-tab.component';\r\nimport { StandingInstructionsTabComponent } from './recurring-deposits-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { ChargesTabComponent } from './recurring-deposits-account-view/charges-tab/charges-tab.component';\r\nimport { DatatableTabsComponent } from './recurring-deposits-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { CreateRecurringDepositsAccountComponent } from './create-recurring-deposits-account/create-recurring-deposits-account.component';\r\nimport { RecurringDepositsAccountActionsComponent } from './recurring-deposits-account-actions/recurring-deposits-account-actions.component';\r\nimport { ViewTransactionComponent } from './recurring-deposits-account-view/transactions-tab/view-transaction/view-transaction.component';\r\nimport { EditTransactionComponent } from './recurring-deposits-account-view/transactions-tab/edit-transaction/edit-transaction.component';\r\n\r\n/** Custom Resolvers */\r\nimport { RecurringDepositsAccountViewResolver } from './common-resolvers/recurring-deposits-account-view.resolver';\r\nimport { RecurringDepositsAccountDataResolver } from './common-resolvers/recurring-deposits-account-data.resolver';\r\nimport { SavingsDatatableResolver } from 'app/savings/common-resolvers/savings-datatable.resolver';\r\nimport { SavingsDatatablesResolver } from 'app/savings/common-resolvers/savings-datatables.resolver';\r\nimport { RecurringDepositsAccountTemplateResolver } from './common-resolvers/recurring-deposits-account-template.resolver';\r\nimport { RecurringDepositsAccountActionsResolver } from './common-resolvers/recurring-deposit-account-actions.resolver';\r\nimport { EditRecurringDepositAccountComponent } from './edit-recurring-deposit-account/edit-recurring-deposit-account.component';\r\nimport { RecurringDepositsAccountAndTemplateResolver } from './common-resolvers/recurring-deposit-account-and-template.resolver';\r\nimport { RecurringDepositsAccountTransactionResolver } from './common-resolvers/recurring-deposit-account-transaction.resolver';\r\nimport { RecurringDepositsAccountTransactionTemplateResolver } from './common-resolvers/recurring-deposit-account-transaction-template.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: { title: extract('Recurring Deposits'), breadcrumb: 'Recurring Deposits', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: 'create-recurring-deposits-account',\r\n        data: { title: extract('Create Recurring Deposits Account'), breadcrumb: 'Create Recurring Deposits Account' },\r\n        component: CreateRecurringDepositsAccountComponent,\r\n        resolve: {\r\n          recurringDepositsAccountTemplate: RecurringDepositsAccountTemplateResolver\r\n        }\r\n      },\r\n      {\r\n        path: ':recurringDepositAccountId',\r\n        data: { title: extract('RecurringDeposit Account View'), routeParamBreadcrumb: 'recurringDepositAccountId' },\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: RecurringDepositsAccountViewComponent,\r\n            resolve: {\r\n              recurringDepositsAccountData: RecurringDepositsAccountViewResolver,\r\n              savingsDatatables: SavingsDatatablesResolver\r\n            },\r\n            children: [\r\n              {\r\n                path: 'interest-rate-chart',\r\n                component: InterestRateChartTabComponent,\r\n                data: { title: extract('Recurring Deposit Account Interest Rate Chart'), breadcrumb: 'Interest Rate Chart', routeParamBreadcrumb: false },\r\n                resolve: {\r\n                  recurringDepositsAccountData: RecurringDepositsAccountDataResolver\r\n                }\r\n              },\r\n              {\r\n                path: 'transactions',\r\n                component: TransactionsTabComponent,\r\n                data: { title: extract('Recurring Deposit Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n                resolve: {\r\n                  recurringDepositsAccountData: RecurringDepositsAccountDataResolver\r\n                }\r\n              },\r\n              {\r\n                path: 'charges',\r\n                component: ChargesTabComponent,\r\n                data: { title: extract('Recurring Deposit Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'standing-instructions-tab',\r\n                component: StandingInstructionsTabComponent,\r\n                data: { title: extract('Recurring Deposit Account Standing Instructions'), breadcrumb: 'Standing Instructions', routeParamBreadcrumb: false },\r\n                resolve: {\r\n                  recurringDepositsAccountData: RecurringDepositsAccountDataResolver\r\n                }\r\n              },\r\n              {\r\n                path: 'datatables',\r\n                children: [\r\n                  {\r\n                    path: ':datatableName',\r\n                    component: DatatableTabsComponent,\r\n                    data: { title: extract('View Data Table'), routeParamBreadcrumb: 'datatableName' },\r\n                    resolve: {\r\n                      savingsDatatable: SavingsDatatableResolver\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            path: 'edit-recurring-deposit-account',\r\n            data: { title: extract('Edit Recurring Deposit Account'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n            component: EditRecurringDepositAccountComponent,\r\n            resolve: {\r\n              recurringDepositsAccountAndTemplate: RecurringDepositsAccountAndTemplateResolver\r\n            }\r\n          },\r\n          {\r\n            path: 'transactions',\r\n            data: { title: extract('Recurring Deposits Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: '../transactions', pathMatch: 'prefix'\r\n              },\r\n              {\r\n                path: ':id',\r\n                data: { routeParamBreadcrumb: 'id' },\r\n                children: [\r\n                  {\r\n                    path: '',\r\n                    component: ViewTransactionComponent,\r\n                    resolve: {\r\n                      recurringDepositsAccountTransaction: RecurringDepositsAccountTransactionResolver\r\n                    }\r\n                  },\r\n                  {\r\n                    path: 'edit',\r\n                    component: EditTransactionComponent,\r\n                    resolve: {\r\n                      recurringDepositsAccountTransactionTemplate: RecurringDepositsAccountTransactionTemplateResolver\r\n                    }\r\n                  },\r\n                  {\r\n                    path: 'account-transfers',\r\n                    loadChildren: () => import('../../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'actions/:name',\r\n            data: { title: extract('Recurring Deposits Account Actions'), routeParamBreadcrumb: 'name' },\r\n            component: RecurringDepositsAccountActionsComponent,\r\n            resolve: {\r\n              recurringDepositsAccountActionData: RecurringDepositsAccountActionsResolver\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    data: { title: extract('All Recurring Deposits'), breadcrumb: 'Recurring Deposits', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: ':recurringDepositAccountId',\r\n        data: { title: extract('RecurringDeposit Account View'), routeParamBreadcrumb: 'recurringDepositAccountId' },\r\n        children: [\r\n          {\r\n            path: 'standing-instructions',\r\n            loadChildren: () => import('../../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n          },\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  declarations: [],\r\n  providers: [\r\n    RecurringDepositsAccountViewResolver,\r\n    RecurringDepositsAccountDataResolver,\r\n    SavingsDatatableResolver,\r\n    SavingsDatatablesResolver,\r\n    RecurringDepositsAccountTemplateResolver,\r\n    RecurringDepositsAccountActionsResolver,\r\n    RecurringDepositsAccountAndTemplateResolver,\r\n    RecurringDepositsAccountTransactionResolver,\r\n    RecurringDepositsAccountTransactionTemplateResolver\r\n  ]\r\n})\r\nexport class RecurringDepositsRoutingModule {}\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Modules */\r\nimport { RecurringDepositsRoutingModule } from './recurring-deposits-routing.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\nimport { DirectivesModule } from '../../directives/directives.module';\r\n\r\n/** Custom Components */\r\nimport { RecurringDepositsAccountViewComponent } from './recurring-deposits-account-view/recurring-deposits-account-view.component';\r\nimport { InterestRateChartTabComponent } from './recurring-deposits-account-view/interest-rate-chart-tab/interest-rate-chart-tab.component';\r\nimport { TransactionsTabComponent } from './recurring-deposits-account-view/transactions-tab/transactions-tab.component';\r\nimport { StandingInstructionsTabComponent } from './recurring-deposits-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { ChargesTabComponent } from './recurring-deposits-account-view/charges-tab/charges-tab.component';\r\nimport { DatatableTabsComponent } from './recurring-deposits-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { MultiRowComponent } from './recurring-deposits-account-view/datatable-tabs/multi-row/multi-row.component';\r\nimport { SingleRowComponent } from './recurring-deposits-account-view/datatable-tabs/single-row/single-row.component';\r\nimport { CreateRecurringDepositsAccountComponent } from './create-recurring-deposits-account/create-recurring-deposits-account.component';\r\nimport { RecurringDepositsAccountDetailsStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-details-step/recurring-deposits-account-details-step.component';\r\nimport { RecurringDepositsAccountTermsStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-terms-step/recurring-deposits-account-terms-step.component';\r\nimport { RecurringDepositsAccountCurrencyStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-currency-step/recurring-deposits-account-currency-step.component';\r\nimport { RecurringDepositsAccountSettingsStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-settings-step/recurring-deposits-account-settings-step.component';\r\nimport { RecurringDepositsAccountInterestRateChartStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-interest-rate-chart-step/recurring-deposits-account-interest-rate-chart-step.component';\r\nimport { RecurringDepositsAccountChargesStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-charges-step/recurring-deposits-account-charges-step.component';\r\nimport { RecurringDepositsAccountPreviewStepComponent } from './recurring-deposits-account-stepper/recurring-deposits-account-preview-step/recurring-deposits-account-preview-step.component';\r\nimport { RecurringDepositsAccountActionsComponent } from './recurring-deposits-account-actions/recurring-deposits-account-actions.component';\r\nimport { ActivateRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/activate-recurring-deposits-account/activate-recurring-deposits-account.component';\r\nimport { UndoApprovalRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/undo-approval-recurring-deposits-account/undo-approval-recurring-deposits-account.component';\r\nimport { ApproveRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/approve-recurring-deposits-account/approve-recurring-deposits-account.component';\r\nimport { RejectRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/reject-recurring-deposits-account/reject-recurring-deposits-account.component';\r\nimport { WithdrawByClientRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/withdraw-by-client-recurring-deposits-account/withdraw-by-client-recurring-deposits-account.component';\r\nimport { AddChargeRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/add-charge-recurring-deposits-account/add-charge-recurring-deposits-account.component';\r\nimport { EditRecurringDepositAccountComponent } from './edit-recurring-deposit-account/edit-recurring-deposit-account.component';\r\nimport { PrematureCloseRecurringDepositAccountComponent } from './recurring-deposits-account-actions/premature-close-recurring-deposit-account/premature-close-recurring-deposit-account.component';\r\nimport { CloseRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/close-recurring-deposits-account/close-recurring-deposits-account.component';\r\nimport { DepositRecurringDepositsAccountComponent } from './recurring-deposits-account-actions/deposit-recurring-deposits-account/deposit-recurring-deposits-account.component';\r\nimport { ViewTransactionComponent } from './recurring-deposits-account-view/transactions-tab/view-transaction/view-transaction.component';\r\nimport { EditTransactionComponent } from './recurring-deposits-account-view/transactions-tab/edit-transaction/edit-transaction.component';\r\n\r\n/* Dialog Components */\r\nimport { RecurringDepositConfirmationDialogComponent } from './recurring-deposits-account-view/custom-dialogs/recurring-deposit-confirmation-dialog/recurring-deposit-confirmation-dialog.component';\r\n\r\n/**\r\n * RecurringDeposits Module\r\n *\r\n * All components related to RecurringDeposits functions should be declared here.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    PipesModule,\r\n    DirectivesModule,\r\n    RecurringDepositsRoutingModule\r\n  ],\r\n  declarations: [\r\n    RecurringDepositsAccountViewComponent,\r\n    InterestRateChartTabComponent,\r\n    TransactionsTabComponent,\r\n    StandingInstructionsTabComponent,\r\n    ChargesTabComponent,\r\n    DatatableTabsComponent,\r\n    MultiRowComponent,\r\n    SingleRowComponent,\r\n    CreateRecurringDepositsAccountComponent,\r\n    RecurringDepositsAccountDetailsStepComponent,\r\n    RecurringDepositsAccountTermsStepComponent,\r\n    RecurringDepositsAccountCurrencyStepComponent,\r\n    RecurringDepositsAccountSettingsStepComponent,\r\n    RecurringDepositsAccountInterestRateChartStepComponent,\r\n    RecurringDepositsAccountChargesStepComponent,\r\n    RecurringDepositsAccountPreviewStepComponent,\r\n    RecurringDepositsAccountActionsComponent,\r\n    ActivateRecurringDepositsAccountComponent,\r\n    UndoApprovalRecurringDepositsAccountComponent,\r\n    ApproveRecurringDepositsAccountComponent,\r\n    RejectRecurringDepositsAccountComponent,\r\n    WithdrawByClientRecurringDepositsAccountComponent,\r\n    AddChargeRecurringDepositsAccountComponent,\r\n    RecurringDepositConfirmationDialogComponent,\r\n    EditRecurringDepositAccountComponent,\r\n    PrematureCloseRecurringDepositAccountComponent,\r\n    CloseRecurringDepositsAccountComponent,\r\n    DepositRecurringDepositsAccountComponent,\r\n    ViewTransactionComponent,\r\n    EditTransactionComponent\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class RecurringDepositsModule {}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Recurring Deposits Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecurringDepositsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * @params recurringDepositAccountId\r\n   * Returns the details of a particular Recurring Deposit Account\r\n   */\r\n  getRecurringDepositsAccountData(recurringDepositAccountId: any): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('associations', 'all');\r\n    return this.http.get(`/recurringdepositaccounts/${recurringDepositAccountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(\r\n    clientId: string, clientName: string, fromAccountId: string,\r\n    locale: string, dateFormat: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('clientId', clientId)\r\n      .set('clientName', clientName)\r\n      .set('fromAccountId', fromAccountId)\r\n      .set('fromAccountType', '2')\r\n      .set('locale', locale)\r\n      .set('dateFormat', dateFormat);\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Returns Recurring Deposit Account Template Data\r\n   * @param clientId Client ID\r\n   * @param productId Product ID\r\n   */\r\n  getRecurringDepositsAccountTemplate(clientId: any, productId?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('clientId', clientId);\r\n    httpParams = productId ? httpParams.set('productId', productId) : httpParams;\r\n    return this.http.get(`/recurringdepositaccounts/template`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Post Request to create a recurring deposit account\r\n   * @param recurringAccountData Recurring Deposit Account Data\r\n   */\r\n  createRecurringDepositAccount(recurringAccountData: any): Observable<any> {\r\n    return this.http.post(`/recurringdepositaccounts`, recurringAccountData);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Savings Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeRecurringDepositsAccountCommand(accountId: string, command: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/recurringdepositaccounts/${accountId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId recurring deposits account Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteRecurringDepositsAccount(accountId: string): Observable<any> {\r\n    return this.http.delete(`/recurringdepositaccounts/${accountId}`);\r\n  }\r\n\r\n  /**\r\n   * Get Recurring Deposits Account and Template Data\r\n   * @param accountId Account ID\r\n   */\r\n  getRecurringDepositsAccountAndTemplate(accountId: any) {\r\n    const httpParams = new HttpParams().set('associations', 'charges')\r\n      .set('template', 'true');\r\n    return this.http.get(`/recurringdepositaccounts/${accountId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {any} accountId Account Id\r\n   * @param {any} recurringDepositAccountData Recurring Deposit Account Data\r\n   * @returns {Observable<any>}\r\n   */\r\n  updateRecurringDepositAccount(accountId: any, recurringDepositAccountData: any): Observable<any> {\r\n    return this.http.put(`/recurringdepositaccounts/${accountId}`, recurringDepositAccountData);\r\n  }\r\n\r\n  /**\r\n   * Returns the template for the recurring deposits action\r\n   * @param accountId Account Id\r\n   * @param command Command\r\n   */\r\n  getRecurringDepositAccountActionResource(accountId: any, command: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.get(`/recurringdepositaccounts/${accountId}/template`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Returns the transaction template for the recurring deposits action\r\n   * @param accountId Account Id\r\n   * @param command Command\r\n   */\r\n  getRecurringDepositAccountTransactionTemplateResource(accountId: any, command: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.get(`/recurringdepositaccounts/${accountId}/transactions/template`, { params: httpParams });\r\n  }\r\n  /*\r\n   * @param {string} accountId Recurring Deposits Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getRecurringDepositsAccountTransaction(accountId: string, transactionId: string): Observable<any> {\r\n    return this.http.get(`/recurringdepositaccounts/${accountId}/transactions/${transactionId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Recuring Deposits Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getRecurringDepositsAccountTransactionTemplate(accountId: string, transactionId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('template', 'true');\r\n    return this.http.get(`/recurringdepositaccounts/${accountId}/transactions/${transactionId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Recurring Deposits Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeRecurringDepositsAccountTransactionsCommand(accountId: string, command: string, data: any, transactionId?: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/recurringdepositaccounts/${accountId}/transactions/${transactionId}`, data, { params: httpParams });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}