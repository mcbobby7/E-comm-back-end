{"version":3,"sources":["./src/app/savings/common-resolvers/savings-account-actions.resolver.ts","./src/app/savings/common-resolvers/savings-account-and-template.resolver.ts","./src/app/savings/common-resolvers/savings-account-charge.resolver.ts","./src/app/savings/common-resolvers/savings-account-template.resolver.ts","./src/app/savings/common-resolvers/savings-account-transaction-template.resolver.ts","./src/app/savings/common-resolvers/savings-account-transaction.resolver.ts","./src/app/savings/common-resolvers/savings-account-view.resolver.ts","./src/app/savings/common-resolvers/savings-transaction-reciept.resolver.ts","./src/app/savings/create-savings-account/create-savings-account.component.ts","./src/app/savings/create-savings-account/create-savings-account.component.html","./src/app/savings/edit-savings-account/edit-savings-account.component.ts","./src/app/savings/edit-savings-account/edit-savings-account.component.html","./src/app/savings/saving-account-actions/activate-savings-account/activate-savings-account.component.ts","./src/app/savings/saving-account-actions/activate-savings-account/activate-savings-account.component.html","./src/app/savings/saving-account-actions/add-charge-savings-account/add-charge-savings-account.component.ts","./src/app/savings/saving-account-actions/add-charge-savings-account/add-charge-savings-account.component.html","./src/app/savings/saving-account-actions/apply-annual-fees-savings-account/apply-annual-fees-savings-account.component.ts","./src/app/savings/saving-account-actions/apply-annual-fees-savings-account/apply-annual-fees-savings-account.component.html","./src/app/savings/saving-account-actions/approve-savings-account/approve-savings-account.component.ts","./src/app/savings/saving-account-actions/approve-savings-account/approve-savings-account.component.html","./src/app/savings/saving-account-actions/close-savings-account/close-savings-account.component.ts","./src/app/savings/saving-account-actions/close-savings-account/close-savings-account.component.html","./src/app/savings/saving-account-actions/post-interest-as-on-savings-account/post-interest-as-on-savings-account.component.ts","./src/app/savings/saving-account-actions/post-interest-as-on-savings-account/post-interest-as-on-savings-account.component.html","./src/app/savings/saving-account-actions/reject-savings-account/reject-savings-account.component.ts","./src/app/savings/saving-account-actions/reject-savings-account/reject-savings-account.component.html","./src/app/savings/saving-account-actions/saving-account-actions.component.ts","./src/app/savings/saving-account-actions/saving-account-actions.component.html","./src/app/savings/saving-account-actions/savings-account-assign-staff/savings-account-assign-staff.component.ts","./src/app/savings/saving-account-actions/savings-account-assign-staff/savings-account-assign-staff.component.html","./src/app/savings/saving-account-actions/savings-account-transactions/savings-account-transactions.component.ts","./src/app/savings/saving-account-actions/savings-account-transactions/savings-account-transactions.component.html","./src/app/savings/saving-account-actions/savings-account-unassign-staff/savings-account-unassign-staff.component.ts","./src/app/savings/saving-account-actions/savings-account-unassign-staff/savings-account-unassign-staff.component.html","./src/app/savings/saving-account-actions/undo-approval-savings-account/undo-approval-savings-account.component.ts","./src/app/savings/saving-account-actions/undo-approval-savings-account/undo-approval-savings-account.component.html","./src/app/savings/saving-account-actions/withdraw-by-client-savings-account/withdraw-by-client-savings-account.component.ts","./src/app/savings/saving-account-actions/withdraw-by-client-savings-account/withdraw-by-client-savings-account.component.html","./src/app/savings/savings-account-stepper/savings-account-charges-step/savings-account-charges-step.component.ts","./src/app/savings/savings-account-stepper/savings-account-charges-step/savings-account-charges-step.component.html","./src/app/savings/savings-account-stepper/savings-account-details-step/savings-account-details-step.component.ts","./src/app/savings/savings-account-stepper/savings-account-details-step/savings-account-details-step.component.html","./src/app/savings/savings-account-stepper/savings-account-preview-step/savings-account-preview-step.component.ts","./src/app/savings/savings-account-stepper/savings-account-preview-step/savings-account-preview-step.component.html","./src/app/savings/savings-account-stepper/savings-account-terms-step/savings-account-terms-step.component.ts","./src/app/savings/savings-account-stepper/savings-account-terms-step/savings-account-terms-step.component.html","./src/app/savings/savings-account-view/charges-tab/charges-tab.component.ts","./src/app/savings/savings-account-view/charges-tab/charges-tab.component.html","./src/app/savings/savings-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component.html","./src/app/savings/savings-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component.html","./src/app/savings/savings-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component.html","./src/app/savings/savings-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component.html","./src/app/savings/savings-account-view/custom-dialogs/undo-transaction-dialog/undo-transaction-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/undo-transaction-dialog/undo-transaction-dialog.component.html","./src/app/savings/savings-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component.ts","./src/app/savings/savings-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component.html","./src/app/savings/savings-account-view/datatable-tabs/datatable-tabs.component.ts","./src/app/savings/savings-account-view/datatable-tabs/datatable-tabs.component.html","./src/app/savings/savings-account-view/datatable-tabs/multi-row/multi-row.component.ts","./src/app/savings/savings-account-view/datatable-tabs/multi-row/multi-row.component.html","./src/app/savings/savings-account-view/datatable-tabs/single-row/single-row.component.ts","./src/app/savings/savings-account-view/datatable-tabs/single-row/single-row.component.html","./src/app/savings/savings-account-view/savings-account-view.component.ts","./src/app/savings/savings-account-view/savings-account-view.component.html","./src/app/savings/savings-account-view/savings-buttons.config.ts","./src/app/savings/savings-account-view/standing-instructions-tab/standing-instructions-tab.component.ts","./src/app/savings/savings-account-view/standing-instructions-tab/standing-instructions-tab.component.html","./src/app/savings/savings-account-view/transactions-tab/export-transactions/export-transactions.component.ts","./src/app/savings/savings-account-view/transactions-tab/export-transactions/export-transactions.component.html","./src/app/savings/savings-account-view/transactions-tab/transactions-tab.component.ts","./src/app/savings/savings-account-view/transactions-tab/transactions-tab.component.html","./src/app/savings/savings-account-view/transactions/edit-transaction/edit-transaction.component.ts","./src/app/savings/savings-account-view/transactions/edit-transaction/edit-transaction.component.html","./src/app/savings/savings-account-view/transactions/view-reciept/view-reciept.component.ts","./src/app/savings/savings-account-view/transactions/view-reciept/view-reciept.component.html","./src/app/savings/savings-account-view/transactions/view-transaction/view-transaction.component.ts","./src/app/savings/savings-account-view/transactions/view-transaction/view-transaction.component.html","./src/app/savings/savings-account-view/view-charge/view-charge.component.ts","./src/app/savings/savings-account-view/view-charge/view-charge.component.html","./src/app/savings/savings-routing.module.ts","./src/app/savings/savings.module.ts"],"names":[],"mappings":"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","file":"savings-savings-module.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account Actions data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountActionsResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings account actions data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const actionName = route.paramMap.get('name');\r\n    const savingAccountId = route.paramMap.get('savingAccountId') || route.parent.parent.paramMap.get('savingAccountId');\r\n    switch (actionName) {\r\n      case 'Assign Staff':\r\n        return this.savingsService.getSavingsAccountAndTemplate(savingAccountId, true);\r\n      case 'Add Charge':\r\n        return this.savingsService.getSavingsChargeTemplateResource(savingAccountId);\r\n      case 'Withdrawal':\r\n      case 'Deposit':\r\n        return this.savingsService.getSavingsTransactionTemplateResource(savingAccountId);\r\n      case 'Close':\r\n        return forkJoin([\r\n          this.savingsService.getSavingsTransactionTemplateResource(savingAccountId),\r\n          this.savingsService.getSavingsAccountData(savingAccountId)\r\n        ]);\r\n      case 'Apply Annual Fees':\r\n        return this.savingsService.getSavingsAccountData(savingAccountId);\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account data and template resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountAndTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account data and template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const savingAccountId = route.paramMap.get('savingAccountId');\r\n    return this.savingsService.getSavingsAccountAndTemplate(savingAccountId, true);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account Charge data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountChargeResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account Charge data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const savingAccountId = route.parent.paramMap.get('savingAccountId');\r\n    const chargeId = route.paramMap.get('id');\r\n    return this.savingsService.getSavingsAccountCharge(savingAccountId, chargeId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account Template resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {savingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Shares Account Template.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const entityId = route.paramMap.get('clientId') || route.paramMap.get('groupId') || route.paramMap.get('centerId');\r\n    const isGroup = (route.paramMap.get('groupId') || route.paramMap.get('centerId')) ? true : false;\r\n    return this.savingsService.getSavingsAccountTemplate(entityId, undefined, isGroup);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account Transaction Template data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountTransactionTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account Transaction Template data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const savingAccountId = route.parent.paramMap.get('savingAccountId');\r\n    const transactionId = route.paramMap.get('id');\r\n    return this.savingsService.getSavingsAccountTransactionTemplate(savingAccountId, transactionId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account Transaction data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountTransactionResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account Transaction data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const savingAccountId = route.parent.paramMap.get('savingAccountId');\r\n    const transactionId = route.paramMap.get('id');\r\n    return this.savingsService.getSavingsAccountTransaction(savingAccountId, transactionId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account data resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsAccountViewResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {SavingsService} SavingsService Savings service.\r\n   */\r\n  constructor(private savingsService: SavingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Account data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const savingAccountId = route.paramMap.get('savingAccountId');\r\n    return this.savingsService.getSavingsAccountData(savingAccountId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { ReportsService } from 'app/reports/reports.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Savings Transaction Reciept resolver.\r\n */\r\n@Injectable()\r\nexport class SavingsTransactionRecieptResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {ReportsService} reportsService Reports service.\r\n   * @param {SettingsService} settingsService Settings Service.\r\n   */\r\n  constructor(private reportsService: ReportsService,\r\n              private settingsService: SettingsService) { }\r\n\r\n  /**\r\n   * Returns the Savings Transaction Reciept\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const transactionId = route.paramMap.get('id');\r\n    const data = {\r\n      'output-type':\t'PDF',\r\n      R_transactionId:\ttransactionId\r\n    };\r\n    return this.reportsService.getPentahoRunReportData('Savings Transaction Receipt', data, 'default', this.settingsService.language.code, this.settingsService.dateFormat);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { SavingsAccountDetailsStepComponent } from '../savings-account-stepper/savings-account-details-step/savings-account-details-step.component';\r\nimport { SavingsAccountTermsStepComponent } from '../savings-account-stepper/savings-account-terms-step/savings-account-terms-step.component';\r\nimport { SavingsAccountChargesStepComponent } from '../savings-account-stepper/savings-account-charges-step/savings-account-charges-step.component';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Create Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-savings-account',\r\n  templateUrl: './create-savings-account.component.html',\r\n  styleUrls: ['./create-savings-account.component.scss']\r\n})\r\nexport class CreateSavingsAccountComponent {\r\n\r\n  /** Savings Account Template */\r\n  savingsAccountTemplate: any;\r\n  /** Savings Account Product Template */\r\n  savingsAccountProductTemplate: any;\r\n\r\n  /** Savings Account Details Step */\r\n  @ViewChild(SavingsAccountDetailsStepComponent, { static: true }) savingsAccountDetailsStep: SavingsAccountDetailsStepComponent;\r\n  /** Savings Account Terms Step */\r\n  @ViewChild(SavingsAccountTermsStepComponent, { static: true }) savingsAccountTermsStep: SavingsAccountTermsStepComponent;\r\n  /** Savings Account Charges Step */\r\n  @ViewChild(SavingsAccountChargesStepComponent, { static: true }) savingsAccountChargesStep: SavingsAccountChargesStepComponent;\r\n\r\n  /**\r\n   * Fetches savings account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService\r\n              ) {\r\n    this.route.data.subscribe((data: { savingsAccountTemplate: any }) => {\r\n      this.savingsAccountTemplate = data.savingsAccountTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets savings account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.savingsAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account details form.\r\n   */\r\n  get savingsAccountDetailsForm() {\r\n    return this.savingsAccountDetailsStep.savingsAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account terms form.\r\n   */\r\n  get savingsAccountTermsForm() {\r\n    return this.savingsAccountTermsStep.savingsAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks validity of overall savings account form.\r\n   */\r\n  get savingsAccountFormValid() {\r\n    return (\r\n      this.savingsAccountDetailsForm.valid &&\r\n      this.savingsAccountTermsForm.valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account object.\r\n   */\r\n  get savingsAccount() {\r\n    return {\r\n      ...this.savingsAccountDetailsStep.savingsAccountDetails,\r\n      ...this.savingsAccountTermsStep.savingsAccountTerms,\r\n      ...this.savingsAccountChargesStep.savingsAccountCharges\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a new share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const savingsAccount = {\r\n      ...this.savingsAccount,\r\n      charges: this.savingsAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate,\r\n        feeOnMonthDay: charge.feeOnMonthDay,\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      submittedOnDate: this.datePipe.transform(this.savingsAccount.submittedOnDate, dateFormat),\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n    if (this.savingsAccountTemplate.clientId) {\r\n      savingsAccount.clientId = this.savingsAccountTemplate.clientId;\r\n    } else {\r\n      savingsAccount.groupId = this.savingsAccountTemplate.groupId;\r\n    }\r\n    this.savingsService.createSavingsAccount(savingsAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #savingProductStepper>\r\n\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"savingsAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-savings-account-details-step\r\n        [savingsAccountTemplate]=\"savingsAccountTemplate\" \r\n        (savingsAccountProductTemplate)=\"setTemplate($event)\"\r\n      >\r\n      </mifosx-savings-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"savingsAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-savings-account-terms-step \r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n      ></mifosx-savings-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-savings-account-charges-step\r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n        [savingsAccountTemplate]=\"savingsAccountTemplate\"\r\n        [currencyCode]=\"savingsAccountTermsForm.get('currencyCode')\"\r\n      >\r\n      </mifosx-savings-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step *ngIf=\"savingsAccountFormValid\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-savings-account-preview-step\r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n        [savingsAccountTemplate]=\"savingsAccountTemplate\"\r\n        [savingsAccountTermsForm]=\"savingsAccountTermsForm\"\r\n        [savingsAccount]=\"savingsAccount\"\r\n        (submit)=\"submit()\"\r\n      >\r\n      </mifosx-savings-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { SavingsAccountDetailsStepComponent } from '../savings-account-stepper/savings-account-details-step/savings-account-details-step.component';\r\nimport { SavingsAccountTermsStepComponent } from '../savings-account-stepper/savings-account-terms-step/savings-account-terms-step.component';\r\nimport { SavingsAccountChargesStepComponent } from '../savings-account-stepper/savings-account-charges-step/savings-account-charges-step.component';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-savings-account',\r\n  templateUrl: './edit-savings-account.component.html',\r\n  styleUrls: ['./edit-savings-account.component.scss']\r\n})\r\nexport class EditSavingsAccountComponent {\r\n\r\n  /** Savings Account Template */\r\n  savingsAccountAndTemplate: any;\r\n  /** Savings Account Product Template */\r\n  savingsAccountProductTemplate: any;\r\n\r\n  /** Savings Account Details Step */\r\n  @ViewChild(SavingsAccountDetailsStepComponent, { static: true }) savingsAccountDetailsStep: SavingsAccountDetailsStepComponent;\r\n  /** Savings Account Terms Step */\r\n  @ViewChild(SavingsAccountTermsStepComponent, { static: true }) savingsAccountTermsStep: SavingsAccountTermsStepComponent;\r\n  /** Savings Account Charges Step */\r\n  @ViewChild(SavingsAccountChargesStepComponent, { static: true }) savingsAccountChargesStep: SavingsAccountChargesStepComponent;\r\n\r\n  /**\r\n   * Fetches savings account template from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService\r\n              ) {\r\n    this.route.data.subscribe((data: { savingsAccountAndTemplate: any }) => {\r\n      this.savingsAccountAndTemplate = data.savingsAccountAndTemplate;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets savings account product template.\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.savingsAccountProductTemplate = $event;\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account details form.\r\n   */\r\n  get savingsAccountDetailsForm() {\r\n    return this.savingsAccountDetailsStep.savingsAccountDetailsForm;\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account terms form.\r\n   */\r\n  get savingsAccountTermsForm() {\r\n    return this.savingsAccountTermsStep.savingsAccountTermsForm;\r\n  }\r\n\r\n  /**\r\n   * Checks validity and pristinity of overall savings account form .\r\n   */\r\n  get savingsAccountFormValidAndNotPristine() {\r\n    return (\r\n      this.savingsAccountDetailsForm.valid &&\r\n      this.savingsAccountTermsForm.valid &&\r\n      (\r\n        !this.savingsAccountDetailsForm.pristine ||\r\n        !this.savingsAccountTermsForm.pristine ||\r\n        !this.savingsAccountChargesStep.pristine\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Retrieves savings account object.\r\n   */\r\n  get savingsAccount() {\r\n    return {\r\n      ...this.savingsAccountDetailsStep.savingsAccountDetails,\r\n      ...this.savingsAccountTermsStep.savingsAccountTerms,\r\n      ...this.savingsAccountChargesStep.savingsAccountCharges\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a new share account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const monthDayFormat = 'dd MMMM';\r\n    const savingsAccount = {\r\n      ...this.savingsAccount,\r\n      charges: this.savingsAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: this.datePipe.transform(charge.dueDate, dateFormat),\r\n        feeOnMonthDay: this.datePipe.transform(charge.feeOnMonthDay, dateFormat),\r\n        feeInterval: charge.feeInterval\r\n      })),\r\n      submittedOnDate: this.datePipe.transform(this.savingsAccount.submittedOnDate, dateFormat),\r\n      dateFormat,\r\n      monthDayFormat,\r\n      locale\r\n    };\r\n    if (this.savingsAccountAndTemplate.clientId) {\r\n      savingsAccount.clientId = this.savingsAccountAndTemplate.clientId;\r\n    } else {\r\n      savingsAccount.groupId = this.savingsAccountAndTemplate.groupId;\r\n    }\r\n    this.savingsService.updateSavingsAccount(this.savingsAccountAndTemplate.id, savingsAccount).subscribe((response: any) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #savingProductStepper>\r\n\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"savingsAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-savings-account-details-step\r\n        [savingsAccountTemplate]=\"savingsAccountAndTemplate\" \r\n        (savingsAccountProductTemplate)=\"setTemplate($event)\"\r\n      >\r\n      </mifosx-savings-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"savingsAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-savings-account-terms-step \r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n        [savingsAccountTemplate]=\"savingsAccountAndTemplate\"\r\n      ></mifosx-savings-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-savings-account-charges-step\r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n        [savingsAccountTemplate]=\"savingsAccountAndTemplate\"\r\n        [currencyCode]=\"savingsAccountTermsForm.get('currencyCode')\"\r\n      >\r\n      </mifosx-savings-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step *ngIf=\"savingsAccountFormValidAndNotPristine\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-savings-account-preview-step\r\n        [savingsAccountProductTemplate]=\"savingsAccountProductTemplate\"\r\n        [savingsAccountTemplate]=\"savingsAccountAndTemplate\"\r\n        [savingsAccountTermsForm]=\"savingsAccountTermsForm\"\r\n        [savingsAccount]=\"savingsAccount\"\r\n        (submit)=\"submit()\"\r\n      >\r\n      </mifosx-savings-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Activate Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-activate-savings-account',\r\n  templateUrl: './activate-savings-account.component.html',\r\n  styleUrls: ['./activate-savings-account.component.scss']\r\n})\r\nexport class ActivateSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Activate Savings Account form. */\r\n  activateSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the activate savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createActivateSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the activate savings account form.\r\n   */\r\n  createActivateSavingsAccountForm() {\r\n    this.activateSavingsAccountForm = this.formBuilder.group({\r\n      'activatedOnDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and activates the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevActivatedOnDate: Date = this.activateSavingsAccountForm.value.activatedOnDate;\r\n    this.activateSavingsAccountForm.patchValue({\r\n      activatedOnDate: this.datePipe.transform(prevActivatedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.activateSavingsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'activate', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"activateSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Activated On Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"activatedOnDatePicker\" required formControlName=\"activatedOnDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"activatedOnDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #activatedOnDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"activateSavingsAccountForm.controls.activatedOnDate.hasError('required')\">\r\n            Activated On Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!activateSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../../savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Add Savings Charge component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-add-charge-savings-account',\r\n  templateUrl: './add-charge-savings-account.component.html',\r\n  styleUrls: ['./add-charge-savings-account.component.scss']\r\n})\r\nexport class AddChargeSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Add Savings Charge form. */\r\n  savingsChargeForm: FormGroup;\r\n  /** savings charge options. */\r\n  savingsChargeOptions: any;\r\n  /** savings Id of the savings account. */\r\n  savingAccountId: string;\r\n  /** charge details */\r\n  chargeDetails: any;\r\n\r\n  /**\r\n   * Retrieves charge template data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountActionData: any }) => {\r\n      this.savingsChargeOptions = data.savingsAccountActionData.chargeOptions;\r\n    });\r\n    this.savingAccountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Savings Charge form.\r\n   */\r\n  ngOnInit() {\r\n    this.createSavingsChargeForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  buildDependencies() {\r\n    this.savingsChargeForm.controls.chargeId.valueChanges.subscribe(chargeId => {\r\n      this.savingsService.getChargeTemplate(chargeId).subscribe((data: any) => {\r\n        this.chargeDetails = data;\r\n        const chargeTimeType = data.chargeTimeType.id;\r\n        if (data.chargeTimeType.value === 'Withdrawal Fee' || data.chargeTimeType.value === 'Saving No Activity Fee') {\r\n          this.chargeDetails.dueDateNotRequired = true;\r\n        }\r\n        if (data.chargeTimeType.value === 'Annual Fee' || data.chargeTimeType.value === 'Monthly Fee') {\r\n          this.chargeDetails.chargeTimeTypeAnnualOrMonth = true;\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && !this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.savingsChargeForm.addControl('dueDate', new FormControl('', Validators.required));\r\n        } else {\r\n          this.savingsChargeForm.removeControl('dueDate');\r\n        }\r\n        if (!this.chargeDetails.dueDateNotRequired && this.chargeDetails.chargeTimeTypeAnnualOrMonth) {\r\n          this.savingsChargeForm.addControl('feeOnMonthDay', new FormControl('', Validators.required));\r\n        } else {\r\n          this.savingsChargeForm.removeControl('feeOnMonthDay');\r\n        }\r\n        if (chargeTimeType.value === 'Monthly Fee') {\r\n          this.savingsChargeForm.addControl('feeInterval', new FormControl(data.feeInterval, Validators.required));\r\n        } else {\r\n          this.savingsChargeForm.removeControl('feeInterval');\r\n        }\r\n        this.savingsChargeForm.patchValue({\r\n          'amount': data.amount,\r\n          'chargeCalculationType': data.chargeCalculationType.id,\r\n          'chargeTimeType': data.chargeTimeType.id\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the Savings Charge form.\r\n   */\r\n  createSavingsChargeForm() {\r\n    this.savingsChargeForm = this.formBuilder.group({\r\n      'chargeId': ['', Validators.required],\r\n      'amount': ['', Validators.required],\r\n      'chargeCalculationType': [{ value: '', disabled: true }],\r\n      'chargeTimeType': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits savings charge.\r\n   */\r\n  submit() {\r\n    const savingsCharge = this.savingsChargeForm.value;\r\n    savingsCharge.locale = this.settingsService.language.code;\r\n    if (!savingsCharge.feeInterval) {\r\n      savingsCharge.feeInterval = this.chargeDetails.feeInterval;\r\n    }\r\n    if (this.chargeDetails.dueDateNotRequired !== true) {\r\n      if (this.chargeDetails.chargeTimeTypeAnnualOrMonth === true) {\r\n        const monthDayFormat = 'MMMM-dd'; // TODO: Update once language and date settings are setup\r\n        savingsCharge.monthDayFormat = monthDayFormat;\r\n        if (savingsCharge.feeOnMonthDay) {\r\n          const prevDate = this.savingsChargeForm.value.feeOnMonthDay;\r\n          savingsCharge.feeOnMonthDay = this.datePipe.transform(prevDate, monthDayFormat);\r\n        }\r\n      } else {\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        savingsCharge.dateFormat = dateFormat;\r\n        if (savingsCharge.dueDate) {\r\n          const prevDate = this.savingsChargeForm.value.dueDate;\r\n          savingsCharge.dueDate = this.datePipe.transform(prevDate, dateFormat);\r\n        }\r\n      }\r\n    }\r\n    this.savingsService.createSavingsCharge(this.savingAccountId, 'charges', savingsCharge).subscribe( () => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"savingsChargeForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n          <mat-form-field>\r\n            <mat-label>Charge</mat-label>\r\n            <mat-select required formControlName=\"chargeId\">\r\n              <mat-option *ngFor=\"let savingsCharge of savingsChargeOptions\" [value]=\"savingsCharge.id\">\r\n                {{ savingsCharge.name + ' (' + savingsCharge.currency.name + ')' }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"savingsChargeForm.controls.chargeId.hasError('required')\">\r\n              Charge is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div *ngIf=\"chargeDetails\" fxLayout=\"column\">\r\n\r\n            <mat-form-field>\r\n              <mat-label>Amount</mat-label>\r\n              <input type=number required matInput formControlName=\"amount\" />\r\n              <mat-error *ngIf=\"savingsChargeForm.controls.amount.hasError('required')\">\r\n                Amount is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge Calculation</mat-label>\r\n              <mat-select formControlName=\"chargeCalculationType\">\r\n                <mat-option *ngFor=\"let chargeCalculation of chargeDetails.chargeCalculationTypeOptions\"\r\n                  [value]=\"chargeCalculation.id\">\r\n                  {{ chargeCalculation.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Charge time type</mat-label>\r\n              <mat-select formControlName=\"chargeTimeType\">\r\n                <mat-option *ngFor=\"let chargeTime of chargeDetails.chargeTimeTypeOptions\" [value]=\"chargeTime.id\">\r\n                  {{ chargeTime.value }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"savingsChargeForm.contains('dueDate')\">\r\n              <mat-label>Due for collection on</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\" required\r\n                formControlName=\"dueDate\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dueDatePicker></mat-datepicker>\r\n              <mat-error *ngIf=\"savingsChargeForm.controls.dueDate.hasError('required')\">\r\n                Due for collection on is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"savingsChargeForm.contains('feeOnMonthDay')\">\r\n              <mat-label>Due On</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"feeOnMonthDayPicker\" required\r\n                formControlName=\"feeOnMonthDay\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"feeOnMonthDayPicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #feeOnMonthDayPicker></mat-datepicker>\r\n              <mat-error *ngIf=\"savingsChargeForm.controls.feeOnMonthDay.hasError('required')\">\r\n                Due Date is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"savingsChargeForm.contains('feeInterval')\">\r\n              <mat-label>Repeats Every</mat-label>\r\n              <input matInput formControlName=\"feeInterval\" />\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!savingsChargeForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Apply Annual Fees Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-apply-annual-fees-savings-account',\r\n  templateUrl: './apply-annual-fees-savings-account.component.html',\r\n  styleUrls: ['./apply-annual-fees-savings-account.component.scss']\r\n})\r\nexport class ApplyAnnualFeesSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Apply annual fees form. */\r\n  applyAnnualFeesForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n  /** Annual Fees charge Id */\r\n  chargeId: any;\r\n  /** Savings Account Data */\r\n  savingsAccountData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n    this.route.data.subscribe((data: { savingsAccountActionData: any }) => {\r\n      this.savingsAccountData = data.savingsAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the apply annual fees form.\r\n   */\r\n  ngOnInit() {\r\n    this.createApplyAnnualFeesForm();\r\n    this.applyCharge();\r\n  }\r\n\r\n  /**\r\n   * Creates the apply annual fees form.\r\n   */\r\n  createApplyAnnualFeesForm() {\r\n    this.applyAnnualFeesForm = this.formBuilder.group({\r\n      'dueDate': ['', Validators.required],\r\n      'amount': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retireves apply annual fees charge for ID and amount.\r\n   */\r\n  applyCharge() {\r\n    const charges: any[] = this.savingsAccountData.charges;\r\n      charges.forEach((charge: any) => {\r\n        if (charge.name === 'Annual fee - INR') {\r\n          this.chargeId = charge.id;\r\n          this.applyAnnualFeesForm.get('amount').patchValue(charge.amount);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and applies the annual fees,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevApprovedOnDate: Date = this.applyAnnualFeesForm.value.dueDate;\r\n    this.applyAnnualFeesForm.patchValue({\r\n      dueDate: this.datePipe.transform(prevApprovedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.applyAnnualFeesForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountChargesCommand(this.accountId, 'paycharge', data, this.chargeId).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"applyAnnualFeesForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Annual Fees Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\" required formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dueDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"applyAnnualFeesForm.controls.dueDate.hasError('required')\">\r\n              Due Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Amount</mat-label>\r\n            <input type=\"number\" formControlName=\"amount\" required matInput />\r\n            <mat-error *ngIf=\"applyAnnualFeesForm.controls.amount.hasError('required')\">\r\n              Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!applyAnnualFeesForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-savings-account',\r\n  templateUrl: './approve-savings-account.component.html',\r\n  styleUrls: ['./approve-savings-account.component.scss']\r\n})\r\nexport class ApproveSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Approve Savings Account form. */\r\n  approveSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the approve savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createApproveSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the approve savings account form.\r\n   */\r\n  createApproveSavingsAccountForm() {\r\n    this.approveSavingsAccountForm = this.formBuilder.group({\r\n      'approvedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and approves the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevApprovedOnDate: Date = this.approveSavingsAccountForm.value.approvedOnDate;\r\n    this.approveSavingsAccountForm.patchValue({\r\n      approvedOnDate: this.datePipe.transform(prevApprovedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.approveSavingsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'approve', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"approveSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"approvedOnDatePicker\" required formControlName=\"approvedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"approvedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #approvedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"approveSavingsAccountForm.controls.approvedOnDate.hasError('required')\">\r\n              Approved On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\" [disabled]=\"!approveSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Close Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-close-savings-account',\r\n  templateUrl: './close-savings-account.component.html',\r\n  styleUrls: ['./close-savings-account.component.scss']\r\n})\r\nexport class CloseSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Close Savings Account form. */\r\n  closeSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n  /** Flag to enable payment details fields. */\r\n  addPaymentDetailsFlag = false;\r\n  /** Payment Type Options */\r\n  paymentTypeOptions: any;\r\n  /** Transaction Amount */\r\n  transactionAmount: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountActionData: any }) => {\r\n      this.paymentTypeOptions = data.savingsAccountActionData[0].paymentTypeOptions;\r\n      this.transactionAmount = data.savingsAccountActionData[1].summary.accountBalance;\r\n    });\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the close savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createCloseSavingsAccountForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  /**\r\n   * Creates the close savings account form.\r\n   */\r\n  createCloseSavingsAccountForm() {\r\n    this.closeSavingsAccountForm = this.formBuilder.group({\r\n      'closedOnDate': ['', Validators.required],\r\n      'withdrawBalance': [false],\r\n      'postInterestValidationOnClosure': [false],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to value changes of withdraw balance checkbox.\r\n   */\r\n  buildDependencies() {\r\n    this.closeSavingsAccountForm.get('withdrawBalance').valueChanges.subscribe((value: boolean) => {\r\n      if (value) {\r\n        this.closeSavingsAccountForm.addControl('amount', new FormControl({value: this.transactionAmount, disabled: true}));\r\n        this.closeSavingsAccountForm.addControl('paymentTypeId', new FormControl(''));\r\n      } else {\r\n        this.closeSavingsAccountForm.removeControl('amount');\r\n        this.closeSavingsAccountForm.removeControl('paymentTypeId');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.addPaymentDetailsFlag = !this.addPaymentDetailsFlag;\r\n    if (this.addPaymentDetailsFlag) {\r\n      this.closeSavingsAccountForm.addControl('accountNumber', new FormControl(''));\r\n      this.closeSavingsAccountForm.addControl('checkNumber', new FormControl(''));\r\n      this.closeSavingsAccountForm.addControl('routingCode', new FormControl(''));\r\n      this.closeSavingsAccountForm.addControl('receiptNumber', new FormControl(''));\r\n      this.closeSavingsAccountForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.closeSavingsAccountForm.removeControl('accountNumber');\r\n      this.closeSavingsAccountForm.removeControl('checkNumber');\r\n      this.closeSavingsAccountForm.removeControl('routingCode');\r\n      this.closeSavingsAccountForm.removeControl('receiptNumber');\r\n      this.closeSavingsAccountForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submits the form and closes the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevClosedOnDate: Date = this.closeSavingsAccountForm.value.closedOnDate;\r\n    this.closeSavingsAccountForm.patchValue({\r\n      closedOnDate: this.datePipe.transform(prevClosedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.closeSavingsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'close', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedOnDatePicker\" required formControlName=\"closedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeSavingsAccountForm.controls.closedOnDate.hasError('required')\">\r\n              Closed On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-checkbox class=\"m-b-25 m-t-15\" formControlName=\"withdrawBalance\">\r\n            Withdraw Balance\r\n          </mat-checkbox>\r\n\r\n          <mat-checkbox  formControlName=\"postInterestValidationOnClosure\">\r\n            Is Interest Posting required on closure date?\r\n          </mat-checkbox>\r\n\r\n          <div *ngIf=\"closeSavingsAccountForm.controls['withdrawBalance'].value\" fxLayout=\"column\">\r\n\r\n            <mat-form-field class=\"m-t-20\" *ngIf=\"closeSavingsAccountForm.controls['amount']\">\r\n              <mat-label>Transaction Amount</mat-label>\r\n              <input type=number required matInput formControlName=\"amount\"/>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['paymentTypeId']\">\r\n              <mat-label>Payment Type</mat-label>\r\n              <mat-select formControlName=\"paymentTypeId\">\r\n                <mat-option *ngFor=\"let paymentType of paymentTypeOptions\"\r\n                  [value]=\"paymentType.id\">\r\n                  {{ paymentType.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" class=\"m-t-10\">\r\n              <mat-label fxFlexAlign=\"center\">Show Payment Details</mat-label>\r\n              <button type=\"button\" mat-mini-fab color=\"primary\" (click)=\"addPaymentDetails()\">\r\n                <fa-icon [icon]=\"!addPaymentDetailsFlag ? 'plus-circle' : 'minus-circle'\" size=\"lg\"></fa-icon>\r\n              </button>\r\n            </div>\r\n    \r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['accountNumber']\">\r\n              <mat-label>Account Number</mat-label>\r\n              <input type=\"number\" formControlName=\"accountNumber\" matInput />\r\n            </mat-form-field>\r\n    \r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['checkNumber']\">\r\n              <mat-label>Cheque</mat-label>\r\n              <input type=\"number\" formControlName=\"checkNumber\" matInput />\r\n            </mat-form-field>\r\n    \r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['routingCode']\">\r\n              <mat-label>Routing Code</mat-label>\r\n              <input formControlName=\"routingCode\" matInput />\r\n            </mat-form-field>\r\n    \r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['receiptNumber']\">\r\n              <mat-label>Receipt Number</mat-label>\r\n              <input formControlName=\"receiptNumber\" matInput />\r\n            </mat-form-field>\r\n    \r\n            <mat-form-field *ngIf=\"closeSavingsAccountForm.controls['bankNumber']\">\r\n              <mat-label>Bank</mat-label>\r\n              <input formControlName=\"bankNumber\" matInput />\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!closeSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Post Interest Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-post-interest-as-on-savings-account',\r\n  templateUrl: './post-interest-as-on-savings-account.component.html',\r\n  styleUrls: ['./post-interest-as-on-savings-account.component.scss']\r\n})\r\nexport class PostInterestAsOnSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Post Interest Savings Account form. */\r\n  postInterestSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the post interest savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createPostInterestSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the post interest savings account form.\r\n   */\r\n  createPostInterestSavingsAccountForm() {\r\n    this.postInterestSavingsAccountForm = this.formBuilder.group({\r\n      'transactionDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and post interests of the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevTransactionDate: Date = this.postInterestSavingsAccountForm.value.transactionDate;\r\n    this.postInterestSavingsAccountForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.postInterestSavingsAccountForm.value,\r\n      IsPostInterestAsOn: true,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountTransactionsCommand(this.accountId, 'postInterestAsOn', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"postInterestSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Transaction Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionDatePicker\" required formControlName=\"transactionDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"transactionDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #transactionDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"postInterestSavingsAccountForm.controls.transactionDate.hasError('required')\">\r\n            Transaction Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!postInterestSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Reject Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-savings-account',\r\n  templateUrl: './reject-savings-account.component.html',\r\n  styleUrls: ['./reject-savings-account.component.scss']\r\n})\r\nexport class RejectSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Reject Saving Account form. */\r\n  rejectSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the reject savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createRejectSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the reject savings account form.\r\n   */\r\n  createRejectSavingsAccountForm() {\r\n    this.rejectSavingsAccountForm = this.formBuilder.group({\r\n      'rejectedOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and rejects the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevRejectedOnDate: Date = this.rejectSavingsAccountForm.value.rejectedOnDate;\r\n    this.rejectSavingsAccountForm.patchValue({\r\n      rejectedOnDate: this.datePipe.transform(prevRejectedOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.rejectSavingsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'reject', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rejectSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Rejected On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rejectedOnDatePicker\" required formControlName=\"rejectedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rejectedOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rejectedOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rejectSavingsAccountForm.controls.rejectedOnDate.hasError('required')\">\r\n              Rejected On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!rejectSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Savings account actions component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-saving-account-actions',\r\n  templateUrl: './saving-account-actions.component.html',\r\n  styleUrls: ['./saving-account-actions.component.scss']\r\n})\r\nexport class SavingAccountActionsComponent {\r\n\r\n  /** Flag object to store possible actions and render appropriate UI to the user */\r\n  actions: {\r\n    'Approve': boolean\r\n    'Reject': boolean\r\n    'Withdrawal': boolean\r\n    'Deposit': boolean\r\n    'Activate': boolean\r\n    'Close': boolean\r\n    'Undo Approval': boolean\r\n    'Post Interest As On': boolean\r\n    'Assign Staff': boolean\r\n    'Add Charge': boolean\r\n    'Unassign Staff': boolean\r\n    'Withdraw By Client': boolean\r\n    'Apply Annual Fees': boolean\r\n  } = {\r\n    'Approve': false,\r\n    'Reject': false,\r\n    'Withdrawal': false,\r\n    'Deposit': false,\r\n    'Activate': false,\r\n    'Close': false,\r\n    'Undo Approval': false,\r\n    'Post Interest As On': false,\r\n    'Assign Staff': false,\r\n    'Add Charge': false,\r\n    'Unassign Staff': false,\r\n    'Withdraw By Client': false,\r\n    'Apply Annual Fees': false\r\n  };\r\n\r\n  /**\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    const name = this.route.snapshot.params['name'];\r\n    this.actions[name] = true;\r\n  }\r\n\r\n}\r\n","<mifosx-approve-savings-account *ngIf=\"actions['Approve']\"></mifosx-approve-savings-account>\r\n<mifosx-reject-savings-account *ngIf=\"actions['Reject']\"></mifosx-reject-savings-account>\r\n<mifosx-activate-savings-account *ngIf=\"actions['Activate']\"></mifosx-activate-savings-account>\r\n<mifosx-undo-approval-savings-account *ngIf=\"actions['Undo Approval']\"></mifosx-undo-approval-savings-account>\r\n<mifosx-post-interest-as-on-savings-account *ngIf=\"actions['Post Interest As On']\"></mifosx-post-interest-as-on-savings-account>\r\n<mifosx-savings-account-assign-staff *ngIf=\"actions['Assign Staff']\"></mifosx-savings-account-assign-staff>\r\n<mifosx-savings-account-unassign-staff *ngIf=\"actions['Unassign Staff']\"></mifosx-savings-account-unassign-staff>\r\n<mifosx-withdraw-by-client-savings-account *ngIf=\"actions['Withdraw By Client']\"></mifosx-withdraw-by-client-savings-account>\r\n<mifosx-add-charge-savings-account *ngIf=\"actions['Add Charge']\"></mifosx-add-charge-savings-account>\r\n<mifosx-savings-transactions *ngIf=\"actions['Withdrawal'] || actions['Deposit']\"></mifosx-savings-transactions>\r\n<mifosx-close-savings-account *ngIf=\"actions['Close']\"></mifosx-close-savings-account>\r\n<mifosx-apply-annual-fees-savings-account *ngIf=\"actions['Apply Annual Fees']\"></mifosx-apply-annual-fees-savings-account>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Savings Account Assign Staff Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-assign-staff',\r\n  templateUrl: './savings-account-assign-staff.component.html',\r\n  styleUrls: ['./savings-account-assign-staff.component.scss']\r\n})\r\nexport class SavingsAccountAssignStaffComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Savings Account Assign Staff form. */\r\n  savingsAssignStaffForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n  /** Field Officer Data */\r\n  fieldOfficerData: any;\r\n  /** Savings Account Data */\r\n  savingsAccountData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n    this.route.data.subscribe((data: { savingsAccountActionData: any }) => {\r\n      this.savingsAccountData = data.savingsAccountActionData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the savings account assign staff form.\r\n   */\r\n  ngOnInit() {\r\n    this.fieldOfficerData = this.savingsAccountData.fieldOfficerOptions;\r\n    this.createSavingsAssignStaffForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the savings account assign staff form.\r\n   */\r\n  createSavingsAssignStaffForm() {\r\n    this.savingsAssignStaffForm = this.formBuilder.group({\r\n      'toSavingsOfficerId': [''],\r\n      'assignmentDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and assigns staff the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevAssignmentDate: Date = this.savingsAssignStaffForm.value.assignmentDate;\r\n    this.savingsAssignStaffForm.patchValue({\r\n      assignmentDate: this.datePipe.transform(prevAssignmentDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.savingsAssignStaffForm.value,\r\n      fromSavingsOfficerId: '',\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'assignSavingsOfficer', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"savingsAssignStaffForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field fxFlex=\"48%\">\r\n            <mat-label>To Savings Officer</mat-label>\r\n            <mat-select formControlName=\"toSavingsOfficerId\">\r\n              <mat-option *ngFor=\"let officer of fieldOfficerData\" [value]=\"officer.id\">\r\n                {{ officer.displayName }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Assignment Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"assignmentDatePicker\" required formControlName=\"assignmentDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"assignmentDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #assignmentDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"savingsAssignStaffForm.controls.assignmentDate.hasError('required')\">\r\n              Assignment Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!savingsAssignStaffForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../../savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Create savings account transactions component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-transactions',\r\n  templateUrl: './savings-account-transactions.component.html',\r\n  styleUrls: ['./savings-account-transactions.component.scss']\r\n})\r\nexport class SavingsAccountTransactionsComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Savings account transaction form. */\r\n  savingAccountTransactionForm: FormGroup;\r\n  /** savings account transaction payment options. */\r\n  paymentTypeOptions: {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    isCashPayment: boolean,\r\n    position: number\r\n  }[];\r\n  /** Flag to enable payment details fields. */\r\n  addPaymentDetailsFlag: Boolean = false;\r\n  /** transaction type flag to render required UI */\r\n  transactionType: { deposit: boolean, withdrawal: boolean } = { deposit: false, withdrawal: false };\r\n  /** transaction command for submit request */\r\n  transactionCommand: string;\r\n  /** saving account's Id */\r\n  savingAccountId: string;\r\n\r\n  /**\r\n   * Retrieves the Saving Account transaction template data from `resolve`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {SavingsService} savingsService Savings Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountActionData: any }) => {\r\n      this.paymentTypeOptions = data.savingsAccountActionData.paymentTypeOptions;\r\n    });\r\n    this.transactionCommand = this.route.snapshot.params['name'].toLowerCase();\r\n    this.transactionType[this.transactionCommand] = true;\r\n    this.savingAccountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Saving account transaction form when component loads.\r\n   */\r\n  ngOnInit() {\r\n    this.createSavingAccountTransactionForm();\r\n  }\r\n\r\n  /**\r\n   * Method to create the Saving Account Transaction Form.\r\n   */\r\n  createSavingAccountTransactionForm() {\r\n    this.savingAccountTransactionForm = this.formBuilder.group({\r\n      'transactionDate': ['', Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': [''],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.addPaymentDetailsFlag = !this.addPaymentDetailsFlag;\r\n    if (this.addPaymentDetailsFlag) {\r\n      this.savingAccountTransactionForm.addControl('accountNumber', new FormControl(''));\r\n      this.savingAccountTransactionForm.addControl('checkNumber', new FormControl(''));\r\n      this.savingAccountTransactionForm.addControl('routingCode', new FormControl(''));\r\n      this.savingAccountTransactionForm.addControl('receiptNumber', new FormControl(''));\r\n      this.savingAccountTransactionForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.savingAccountTransactionForm.removeControl('accountNumber');\r\n      this.savingAccountTransactionForm.removeControl('checkNumber');\r\n      this.savingAccountTransactionForm.removeControl('routingCode');\r\n      this.savingAccountTransactionForm.removeControl('receiptNumber');\r\n      this.savingAccountTransactionForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to submit the transaction details.\r\n   */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.savingAccountTransactionForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.savingAccountTransactionForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const transactionData = this.savingAccountTransactionForm.value;\r\n    transactionData.locale = this.settingsService.language.code;\r\n    transactionData.dateFormat = dateFormat;\r\n    this.savingsService.executeSavingsAccountTransactionsCommand(this.savingAccountId, this.transactionCommand, transactionData).subscribe(res => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <h2 mat-title *ngIf=\"transactionType.withdrawal\">Withdraw Money From Saving Account</h2>\r\n    <h2 mat-title *ngIf=\"transactionType.deposit\">Deposit Money To Saving Account</h2>\r\n\r\n    <form [formGroup]=\"savingAccountTransactionForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content fxLayout=\"column\">\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\"\r\n            formControlName=\"transactionDate\" required>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dueDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"savingAccountTransactionForm.controls.transactionDate.hasError('required')\">\r\n            Transaction Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Amount</mat-label>\r\n          <input type=\"number\" formControlName=\"transactionAmount\" required matInput />\r\n          <mat-error *ngIf=\"savingAccountTransactionForm.controls.transactionAmount.hasError('required')\">\r\n            Transaction Amount is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Payment Type</mat-label>\r\n          <mat-select formControlName=\"paymentTypeId\">\r\n            <mat-option *ngFor=\"let paymentType of paymentTypeOptions\" [value]=\"paymentType.id\">\r\n              {{ paymentType.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n          <mat-label fxFlexAlign=\"center\">Show Payment Details</mat-label>\r\n          <button type=\"button\" mat-mini-fab color=\"primary\" (click)=\"addPaymentDetails()\">\r\n            <fa-icon [icon]=\"!addPaymentDetailsFlag ? 'plus-circle' : 'minus-circle'\" size=\"lg\"></fa-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <mat-form-field *ngIf=\"savingAccountTransactionForm.controls['accountNumber']\">\r\n          <mat-label>Account Number</mat-label>\r\n          <input type=\"number\" formControlName=\"accountNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"savingAccountTransactionForm.controls['checkNumber']\">\r\n          <mat-label>Cheque</mat-label>\r\n          <input type=\"number\" formControlName=\"checkNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"savingAccountTransactionForm.controls['routingCode']\">\r\n          <mat-label>Routing Code</mat-label>\r\n          <input formControlName=\"routingCode\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"savingAccountTransactionForm.controls['receiptNumber']\">\r\n          <mat-label>Receipt Number</mat-label>\r\n          <input formControlName=\"receiptNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"savingAccountTransactionForm.controls['bankNumber']\">\r\n          <mat-label>Bank</mat-label>\r\n          <input formControlName=\"bankNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Notes</mat-label>\r\n          <textarea formControlName=\"note\" matInput></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!savingAccountTransactionForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n      \r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n  ","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Savings Account Unassign Staff Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-unassign-staff',\r\n  templateUrl: './savings-account-unassign-staff.component.html',\r\n  styleUrls: ['./savings-account-unassign-staff.component.scss']\r\n})\r\nexport class SavingsAccountUnassignStaffComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Savings Account Unassign Staff form. */\r\n  savingsUnassignStaffForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the savings account unassign staff form.\r\n   */\r\n  ngOnInit() {\r\n    this.createSavingsUnassignStaffForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the savings account unassign staff form.\r\n   */\r\n  createSavingsUnassignStaffForm() {\r\n    this.savingsUnassignStaffForm = this.formBuilder.group({\r\n      'unassignedDate': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and unassigns staff of the saving account,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevUnassignmentDate: Date = this.savingsUnassignStaffForm.value.unassignedDate;\r\n    this.savingsUnassignStaffForm.patchValue({\r\n      unassignedDate: this.datePipe.transform(prevUnassignmentDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.savingsUnassignStaffForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'unassignSavingsOfficer', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"savingsUnassignStaffForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Unassignment Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"unassignedDatePicker\" required formControlName=\"unassignedDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"unassignedDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #unassignedDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"savingsUnassignStaffForm.controls.unassignedDate.hasError('required')\">\r\n            Unassignment Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!savingsUnassignStaffForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/**\r\n * Undo Approval Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-approval-savings-account',\r\n  templateUrl: './undo-approval-savings-account.component.html',\r\n  styleUrls: ['./undo-approval-savings-account.component.scss']\r\n})\r\nexport class UndoApprovalSavingsAccountComponent implements OnInit {\r\n\r\n  /** Undo Approval Savings Account form. */\r\n  undoApprovalSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createUndoApprovalSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the undo-approval savings account form.\r\n   */\r\n  createUndoApprovalSavingsAccountForm() {\r\n    this.undoApprovalSavingsAccountForm = this.formBuilder.group({\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and undo the approval of share account,\r\n   * if successful redirects to the share account.\r\n   */\r\n  submit() {\r\n    const data = {\r\n      ...this.undoApprovalSavingsAccountForm.value,\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'undoapproval', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"undoApprovalSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <mat-form-field fxFlex>\r\n          <mat-label>Note</mat-label>\r\n          <textarea matInput formControlName=\"note\"></textarea>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"warn\" [disabled]=\"!undoApprovalSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Withdraw By Client Savings Account Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-withdraw-by-client-savings-account',\r\n  templateUrl: './withdraw-by-client-savings-account.component.html',\r\n  styleUrls: ['./withdraw-by-client-savings-account.component.scss']\r\n})\r\nexport class WithdrawByClientSavingsAccountComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Withdraw Savings Account form. */\r\n  withdrawSavingsAccountForm: FormGroup;\r\n  /** Savings Account Id */\r\n  accountId: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private settingsService: SettingsService) {\r\n    this.accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw savings form.\r\n   */\r\n  ngOnInit() {\r\n    this.createWithdrawSavingsAccountForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw savings account form.\r\n   */\r\n  createWithdrawSavingsAccountForm() {\r\n    this.withdrawSavingsAccountForm = this.formBuilder.group({\r\n      'withdrawnOnDate': ['', Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the form and withdraws the saving account by client,\r\n   * if successful redirects to the saving account.\r\n   */\r\n  submit() {\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const prevWithdrawnOnDate: Date = this.withdrawSavingsAccountForm.value.withdrawnOnDate;\r\n    this.withdrawSavingsAccountForm.patchValue({\r\n      withdrawnOnDate: this.datePipe.transform(prevWithdrawnOnDate, dateFormat),\r\n    });\r\n    const data = {\r\n      ...this.withdrawSavingsAccountForm.value,\r\n      dateFormat,\r\n      locale\r\n    };\r\n    this.savingsService.executeSavingsAccountCommand(this.accountId, 'withdrawnByApplicant', data).subscribe(() => {\r\n      this.router.navigate(['../../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"withdrawSavingsAccountForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Withdrawn On Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"withdrawnOnDatePicker\" required formControlName=\"withdrawnOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"withdrawnOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #withdrawnOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"withdrawSavingsAccountForm.controls.withdrawnOnDate.hasError('required')\">\r\n              Withdrawn On Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!withdrawSavingsAccountForm.valid\">Confirm</button>\r\n      </mat-card-actions>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, OnChanges, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * Savings Account Charges Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-charges-step',\r\n  templateUrl: './savings-account-charges-step.component.html',\r\n  styleUrls: ['./savings-account-charges-step.component.scss']\r\n})\r\nexport class SavingsAccountChargesStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Savings Account Product Template */\r\n  @Input() savingsAccountProductTemplate: any;\r\n  /** Savings Account Template */\r\n  @Input() savingsAccountTemplate: any;\r\n  /** Currency Code */\r\n  @Input() currencyCode: FormControl;\r\n\r\n  /** Charge Data */\r\n  chargeData: any = [];\r\n  /** Charges Data Source */\r\n  chargesDataSource: {}[] = [];\r\n  /** Component is pristine if there has been no changes by user interaction */\r\n  pristine = true;\r\n  /** For Edit Savings Account Form */\r\n  isChargesPatched = false;\r\n  /** Display columns for charges table */\r\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery', 'action'];\r\n\r\n  /**\r\n   * @param {MatDialog} dialog Mat Dialog\r\n   */\r\n  constructor(public dialog: MatDialog,\r\n              private datePipe: DatePipe) {}\r\n\r\n   ngOnInit() {\r\n    this.currencyCode.valueChanges.subscribe(() => {\r\n      if (!this.isChargesPatched && this.savingsAccountTemplate.charges) {\r\n        this.chargesDataSource = this.savingsAccountTemplate.charges.map((charge: any) => ({...charge, id: charge.chargeId})) || [];\r\n        this.isChargesPatched = true;\r\n      } else {\r\n        this.chargesDataSource = [];\r\n      }\r\n    });\r\n   }\r\n\r\n   ngOnChanges() {\r\n    if (this.savingsAccountProductTemplate) {\r\n      this.chargeData = this.savingsAccountProductTemplate.chargeOptions;\r\n    }\r\n   }\r\n\r\n  /**\r\n   * Adds the charge to charges table\r\n   * @param {any} charge Charge\r\n   */\r\n  addCharge(charge: any) {\r\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\r\n    charge.value = '';\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Amount\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeAmount(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount,\r\n        type: 'number',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Amount',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, amount: response.data.value.amount };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Date\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeDate(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new DatepickerBase({\r\n        controlName: 'date',\r\n        label: 'Date',\r\n        value: charge.dueDate || charge.feeOnMonthDay || '',\r\n        type: 'datetime-local',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Date',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        let newCharge: any;\r\n        const dateFormat = 'dd MMMM yyyy';\r\n        const date = this.datePipe.transform(response.data.value.date, dateFormat);\r\n        switch (charge.chargeTimeType.value) {\r\n          case 'Specified due date':\r\n          case 'Weekly Fee':\r\n          newCharge = { ...charge, dueDate: date };\r\n          break;\r\n          case 'Annual Fee':\r\n          newCharge = { ...charge, feeOnMonthDay: date };\r\n          break;\r\n        }\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Fee Interval\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeFeeInterval(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'feeInterval',\r\n        label: 'Fee Interval',\r\n        value: charge.feeInterval,\r\n        type: 'text',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Fee Interval',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, feeInterval: response.data.value.feeInterval };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Removes the charge from charges table\r\n   * @param {any} charge Charge\r\n   */\r\n  deleteCharge(charge: any) {\r\n    this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\r\n    this.chargesDataSource = this.chargesDataSource.concat([]);\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Returns savings account charges\r\n   */\r\n  get savingsAccountCharges() {\r\n    return { charges: this.chargesDataSource };\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n  <mat-form-field fxFlex=\"48%\">\r\n    <mat-label>Charge</mat-label>\r\n    <mat-select #charge>\r\n      <mat-option *ngFor=\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\" [value]=\"charge\">\r\n        {{ charge.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div fxFlex=\"48%\" fxFlexAlign=\"center\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addCharge(charge)\" [disabled]=\"!charge.value\">\r\n      <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;\r\n      Add\r\n    </button>\r\n  </div>\r\n\r\n  <table fxFlex=\"98%\" class=\"mat-elevation-z1\" mat-table [dataSource]=\"chargesDataSource\" [hidden]=\"chargesDataSource.length === 0\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeCalculationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeCalculationType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.amount }} \r\n        <button mat-icon-button color=\"primary\" (click)=\"editChargeAmount(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeTimeType\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeTimeType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n          {{(charge.dueDate | date) || 'Unassigned'}}\r\n        </span>\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n          {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n        </span>\r\n        <span \r\n          *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n            || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n          N/A\r\n        </span>\r\n        <button mat-icon-button color=\"primary\"\r\n          *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                  || charge.chargeTimeType.value === 'Specified due date'\" \r\n          (click)=\"editChargeDate(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"repaymentsEvery\">\r\n      <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.feeInterval || 'Not Provided' }} \r\n        <button mat-icon-button color=\"primary\" \r\n          *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Monthly Fee'\"\r\n          (click)=\"editChargeFeeInterval(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCharge(charge)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext>\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\n\r\n/**\r\n * Savings Account Details Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-details-step',\r\n  templateUrl: './savings-account-details-step.component.html',\r\n  styleUrls: ['./savings-account-details-step.component.scss']\r\n})\r\nexport class SavingsAccountDetailsStepComponent implements OnInit {\r\n\r\n  /** Savings Account Template */\r\n  @Input() savingsAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Product Data */\r\n  productData: any;\r\n  /** Field Officer Data */\r\n  fieldOfficerData: any;\r\n  /** For edit savings form */\r\n  isFieldOfficerPatched = false;\r\n  /** Savings Account Details Form */\r\n  savingsAccountDetailsForm: FormGroup;\r\n\r\n  /** Savings Account Template with product data  */\r\n  @Output() savingsAccountProductTemplate = new EventEmitter();\r\n\r\n  /**\r\n   * Sets share account details form.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {SavingsService} savingsService Savings Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private savingsService: SavingsService) {\r\n    this.createSavingsAccountDetailsForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildDependencies();\r\n    if (this.savingsAccountTemplate) {\r\n      this.productData = this.savingsAccountTemplate.productOptions;\r\n      if (this.savingsAccountTemplate.savingsProductId) {\r\n        this.savingsAccountDetailsForm.patchValue({\r\n          'productId': this.savingsAccountTemplate.savingsProductId,\r\n          'submittedOnDate': this.savingsAccountTemplate.timeline.submittedOnDate && new Date(this.savingsAccountTemplate.timeline.submittedOnDate),\r\n          'externalId': this.savingsAccountTemplate.externalId\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates savings account details form.\r\n   */\r\n  createSavingsAccountDetailsForm() {\r\n    this.savingsAccountDetailsForm = this.formBuilder.group({\r\n      'productId': ['', Validators.required],\r\n      'submittedOnDate': ['', Validators.required],\r\n      'fieldOfficerId': [''],\r\n      'externalId': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches savings account product template on productId value changes\r\n   */\r\n  buildDependencies() {\r\n    const entityId = this.savingsAccountTemplate.clientId || this.savingsAccountTemplate.groupId;\r\n    this.savingsAccountDetailsForm.get('productId').valueChanges.subscribe((productId: string) => {\r\n      this.savingsService.getSavingsAccountTemplate(entityId, productId, this.savingsAccountTemplate.groupId ? true : false)\r\n      .subscribe((response: any) => {\r\n        this.savingsAccountProductTemplate.emit(response);\r\n        this.fieldOfficerData = response.fieldOfficerOptions;\r\n        if (!this.isFieldOfficerPatched && this.savingsAccountTemplate.fieldOfficerId) {\r\n          this.savingsAccountDetailsForm.get('fieldOfficerId').patchValue(this.savingsAccountTemplate.fieldOfficerId);\r\n          this.isFieldOfficerPatched = true;\r\n        } else {\r\n          this.savingsAccountDetailsForm.get('fieldOfficerId').patchValue('');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns savings account form value.\r\n   */\r\n  get savingsAccountDetails() {\r\n    return this.savingsAccountDetailsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"savingsAccountDetailsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Product Name</mat-label>\r\n      <mat-select formControlName=\"productId\" required>\r\n        <mat-option *ngFor=\"let product of productData\" [value]=\"product.id\">\r\n          {{ product.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Product Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Submitted On</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"submittedOnDatePicker\" \r\n        formControlName=\"submittedOnDate\" required>\r\n      <mat-datepicker-toggle matSuffix [for]=\"submittedOnDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #submittedOnDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        Submission Date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Field Officer</mat-label>\r\n      <mat-select formControlName=\"fieldOfficerId\">\r\n        <mat-option *ngFor=\"let officer of fieldOfficerData\" [value]=\"officer.id\">\r\n          {{ officer.displayName }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>External ID</mat-label>\r\n      <input matInput formControlName=\"externalId\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Savings account preview step\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-preview-step',\r\n  templateUrl: './savings-account-preview-step.component.html',\r\n  styleUrls: ['./savings-account-preview-step.component.scss']\r\n})\r\nexport class SavingsAccountPreviewStepComponent {\r\n\r\n  /** Savings Account Product Template */\r\n  @Input() savingsAccountProductTemplate: any;\r\n  /** Savings Account Template */\r\n  @Input() savingsAccountTemplate: any;\r\n  /** Savings Account Terms Form */\r\n  @Input() savingsAccountTermsForm: any;\r\n  /** Savings Account */\r\n  @Input() savingsAccount: any;\r\n\r\n  /** Display columns for charges table */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'repaymentsEvery'];\r\n\r\n  /** Form submission event */\r\n  @Output() submit = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Details</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Product</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.productId | find:savingsAccountTemplate.productOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Submitted On</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.submittedOnDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">External Id</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.externalId || 'Unassigned' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Field Officer</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.fieldOfficerId | find:savingsAccountProductTemplate.fieldOfficerOptions:'id':'displayName' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Terms</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccountTermsForm.get('currencyCode').value  }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Decimal Places</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccountTermsForm.get('decimal').value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Currency in multiples of</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccountTermsForm.get('currencyMultiple').value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Nominal Annual Interest Rate:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.nominalAnnualInterestRate }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Compounding Period:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.interestCompoundingPeriodType | find:savingsAccountProductTemplate.interestCompoundingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Posting Period:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.interestPostingPeriodType | find:savingsAccountProductTemplate.interestPostingPeriodTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest Calculated using:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.interestCalculationType | find:savingsAccountProductTemplate.interestCalculationTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Days in Year:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.interestCalculationDaysInYearType | find:savingsAccountProductTemplate.interestCalculationDaysInYearTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.minRequiredOpeningBalance\">\r\n    <span fxFlex=\"40%\">Minimum Opening Balance:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.minRequiredOpeningBalance }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Apply Withdrawal Fee for Transfers:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.withdrawalFeeForTransfers ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.lockinPeriodFrequency\">\r\n    <span fxFlex=\"40%\">Lock-in Period:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.lockinPeriodFrequency + ' ' + (savingsAccount.lockinPeriodFrequencyType | find:savingsAccountProductTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Is Overdraft Allowed:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.allowOverdraft ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.minOverdraftForInterestCalculation\">\r\n    <span fxFlex=\"40%\">Minimum Overdraft Required for Interest Calculation:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.minOverdraftForInterestCalculation }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.nominalAnnualInterestRateOverdraft\">\r\n    <span fxFlex=\"40%\">Nominal Annual Interest for Overdraft:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.nominalAnnualInterestRateOverdraft }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.overdraftLimit\">\r\n    <span fxFlex=\"40%\">Maximum Overdraft Amount Limit:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.overdraftLimit }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Enforce Minimum Balance:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.enforceMinRequiredBalance ? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.minRequiredBalance\">\r\n    <span fxFlex=\"40%\">Minimum Balance:</span>\r\n    <span fxFlex=\"60%\">{{ savingsAccount.minRequiredBalance }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"savingsAccount.charges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Charges</h3>\r\n\r\n    <mat-divider fxFlexFill></mat-divider>\r\n\r\n    <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"savingsAccount.charges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeCalculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeCalculationType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef> Date </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n            {{(charge.dueDate | date) || 'Unassigned'}}\r\n          </span>\r\n          <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n            {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n          </span>\r\n          <span \r\n            *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n              || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n            N/A\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"repaymentsEvery\">\r\n        <th mat-header-cell *matHeaderCellDef> Repayments Every </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.feeInterval || 'Not Provided' }} \r\n        </td>\r\n      </ng-container>  \r\n\r\n      <ng-container matColumnDef=\"chargeTimeType\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeTimeType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button [routerLink]=\"['../']\">\r\n    Cancel\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"submit.emit()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n/**\r\n * Savings Account Terms Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-terms-step',\r\n  templateUrl: './savings-account-terms-step.component.html',\r\n  styleUrls: ['./savings-account-terms-step.component.scss']\r\n})\r\nexport class SavingsAccountTermsStepComponent implements OnChanges, OnInit {\r\n\r\n  /** Savings Account and Product Template */\r\n  @Input() savingsAccountProductTemplate: any;\r\n  /** Savings Account Template */\r\n  @Input() savingsAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Savings Account Terms Form */\r\n  savingsAccountTermsForm: FormGroup;\r\n  /** Lockin Period Frequency Type Data */\r\n  lockinPeriodFrequencyTypeData: any;\r\n  /** Interest Compounding Period Type Data */\r\n  interestCompoundingPeriodTypeData: any;\r\n  /** Interest Posting Period Type Data */\r\n  interestPostingPeriodTypeData: any;\r\n  /** Interest Calculation Type Data */\r\n  interestCalculationTypeData: any;\r\n  /** Interest Calculation Days in Year Data */\r\n  interestCalculationDaysInYearTypeData: any;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   */\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.createSavingsAccountTermsForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.savingsAccountProductTemplate) {\r\n      this.savingsAccountTermsForm.patchValue({\r\n        'currencyCode': this.savingsAccountProductTemplate.currency.code,\r\n        'decimal': this.savingsAccountProductTemplate.currency.decimalPlaces,\r\n        'currencyMultiple': this.savingsAccountProductTemplate.currency.inMultiplesOf,\r\n        'minBalanceForInterestCalculation': this.savingsAccountProductTemplate.minBalanceForInterestCalculation\r\n      });\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.savingsAccountTemplate) {\r\n      this.savingsAccountTermsForm.patchValue({\r\n        'nominalAnnualInterestRate': this.savingsAccountTemplate.nominalAnnualInterestRate,\r\n        'interestCompoundingPeriodType': this.savingsAccountTemplate.interestCompoundingPeriodType.id,\r\n        'interestPostingPeriodType': this.savingsAccountTemplate.interestPostingPeriodType.id,\r\n        'interestCalculationType': this.savingsAccountTemplate.interestCalculationType.id,\r\n        'interestCalculationDaysInYearType': this.savingsAccountTemplate.interestCalculationDaysInYearType.id,\r\n        'minRequiredOpeningBalance': this.savingsAccountTemplate.minRequiredOpeningBalance,\r\n        'withdrawalFeeForTransfers': this.savingsAccountTemplate.withdrawalFeeForTransfers,\r\n        'lockinPeriodFrequency': this.savingsAccountTemplate.lockinPeriodFrequency,\r\n        'lockinPeriodFrequencyType': this.savingsAccountTemplate.lockinPeriodFrequencyType && this.savingsAccountTemplate.lockinPeriodFrequencyType.id,\r\n        'allowOverdraft': this.savingsAccountTemplate.allowOverdraft,\r\n        'enforceMinRequiredBalance': this.savingsAccountTemplate.enforceMinRequiredBalance,\r\n        'minRequiredBalance': this.savingsAccountTemplate.minRequiredBalance,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates savings account terms form.\r\n   */\r\n  createSavingsAccountTermsForm() {\r\n    this.savingsAccountTermsForm = this.formBuilder.group({\r\n      'currencyCode': [{value: '', disabled: true}],\r\n      'decimal': [{value: '',  disabled: true}],\r\n      'nominalAnnualInterestRate': ['', Validators.required],\r\n      'interestCompoundingPeriodType': ['', Validators.required],\r\n      'currencyMultiple': [{value: '', disabled: true}],\r\n      'interestPostingPeriodType': ['', Validators.required],\r\n      'interestCalculationType': ['', Validators.required],\r\n      'interestCalculationDaysInYearType': ['', Validators.required],\r\n      'minRequiredOpeningBalance': [''],\r\n      'withdrawalFeeForTransfers': [false],\r\n      'lockinPeriodFrequency': [''],\r\n      'lockinPeriodFrequencyType': [''],\r\n      'allowOverdraft': [false],\r\n      'enforceMinRequiredBalance': [false],\r\n      'minRequiredBalance': [''],\r\n      'minBalanceForInterestCalculation': [{value: '', disabled: true}]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.lockinPeriodFrequencyTypeData = this.savingsAccountProductTemplate.lockinPeriodFrequencyTypeOptions;\r\n    this.interestCompoundingPeriodTypeData = this.savingsAccountProductTemplate.interestCompoundingPeriodTypeOptions;\r\n    this.interestPostingPeriodTypeData = this.savingsAccountProductTemplate.interestPostingPeriodTypeOptions;\r\n    this.interestCalculationTypeData = this.savingsAccountProductTemplate.interestCalculationTypeOptions;\r\n    this.interestCalculationDaysInYearTypeData = this.savingsAccountProductTemplate.interestCalculationDaysInYearTypeOptions;\r\n  }\r\n\r\n  /**\r\n   * Subscribes to value changes and sets new form controls accordingly.\r\n   */\r\n  buildDependencies() {\r\n    this.savingsAccountTermsForm.get('allowOverdraft').valueChanges.subscribe((allowOverdraft: any) => {\r\n      if (allowOverdraft) {\r\n        this.savingsAccountTermsForm.addControl('minOverdraftForInterestCalculation', new FormControl(''));\r\n        this.savingsAccountTermsForm.addControl('nominalAnnualInterestRateOverdraft', new FormControl(''));\r\n        this.savingsAccountTermsForm.addControl('overdraftLimit', new FormControl(''));\r\n      } else {\r\n        this.savingsAccountTermsForm.removeControl('minOverdraftForInterestCalculation');\r\n        this.savingsAccountTermsForm.removeControl('nominalAnnualInterestRateOverdraft');\r\n        this.savingsAccountTermsForm.removeControl('overdraftLimit');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns savings account terms form value.\r\n   */\r\n  get savingsAccountTerms() {\r\n    return this.savingsAccountTermsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"savingsAccountTermsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" fxLayoutAlign.gt-sm=\"start center\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency</mat-label>\r\n      <input matInput formControlName=\"currencyCode\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Decimal Places</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"decimal\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Nominal Annual Interest Rate</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"nominalAnnualInterestRate\" required>\r\n      <mat-error>\r\n        Nominal Annual Interest is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Compounding Period</mat-label>\r\n      <mat-select formControlName=\"interestCompoundingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestCompoundingPeriodType of interestCompoundingPeriodTypeData\" [value]=\"interestCompoundingPeriodType.id\">\r\n          {{ interestCompoundingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Compounding Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Currency in multiples of</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"currencyMultiple\" >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Posting Period</mat-label>\r\n      <mat-select formControlName=\"interestPostingPeriodType\" required>\r\n        <mat-option *ngFor=\"let interestPostingPeriodType of interestPostingPeriodTypeData\" [value]=\"interestPostingPeriodType.id\">\r\n          {{ interestPostingPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Posting Period is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest Calculated using</mat-label>\r\n      <mat-select formControlName=\"interestCalculationType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationType of interestCalculationTypeData\" [value]=\"interestCalculationType.id\">\r\n          {{ interestCalculationType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Interest Calculated using is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Days in Year</mat-label>\r\n      <mat-select formControlName=\"interestCalculationDaysInYearType\" required>\r\n        <mat-option *ngFor=\"let interestCalculationDaysInYearType of interestCalculationDaysInYearTypeData\" [value]=\"interestCalculationDaysInYearType.id\">\r\n          {{ interestCalculationDaysInYearType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Days in Year is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Minimum Opening Balance</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minRequiredOpeningBalance\">\r\n    </mat-form-field>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"withdrawalFeeForTransfers\" class=\"margin-v\">\r\n      Apply Withdrawal Fee for Transfers\r\n    </mat-checkbox>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Lock-in Period</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Frequency</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"lockinPeriodFrequency\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Type</mat-label>\r\n      <mat-select formControlName=\"lockinPeriodFrequencyType\">\r\n        <mat-option *ngFor=\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\" [value]=\"lockinPeriodFrequencyType.id\">\r\n          {{ lockinPeriodFrequencyType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h3 fxFlex=\"23%\" class=\"mat-h3\">Overdraft</h3>\r\n\r\n    <mat-checkbox fxFlex=\"73%\" labelPosition=\"before\" formControlName=\"allowOverdraft\" class=\"margin-b\">\r\n      Is Overdraft Allowed?\r\n    </mat-checkbox>\r\n\r\n    <div *ngIf=\"savingsAccountTermsForm.value.allowOverdraft\" fxFlexFill fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n      <mat-form-field fxFlex=\"31%\">\r\n        <mat-label>Minimum Overdraft Required for Interest Calculation</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"minOverdraftForInterestCalculation\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"31%\">\r\n        <mat-label>Nominal Annual Interest for Overdraft</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"nominalAnnualInterestRateOverdraft\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"31%\">\r\n        <mat-label>Maximum Overdraft Amount Limit</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"overdraftLimit\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" labelPosition=\"before\" formControlName=\"enforceMinRequiredBalance\" class=\"margin-v\">\r\n      Enforce Minimum Balance\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Minimum Balance</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minRequiredBalance\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\" *ngIf=\"savingsAccountTermsForm.controls.minBalanceForInterestCalculation.value\">\r\n      <mat-label>Balance Required for Interest Calculation</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"minBalanceForInterestCalculation\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { WaiveChargeDialogComponent } from '../custom-dialogs/waive-charge-dialog/waive-charge-dialog.component';\r\nimport { InactivateChargeDialogComponent } from '../custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * Charges Tab Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-charges-tab',\r\n  templateUrl: './charges-tab.component.html',\r\n  styleUrls: ['./charges-tab.component.scss']\r\n})\r\nexport class ChargesTabComponent implements OnInit {\r\n\r\n  /** Savings Account Data */\r\n  savingsAccountData: any;\r\n  /** Charges Data */\r\n  chargesData: any[];\r\n  /** Data source for charges table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  /** Toggles Charges Table */\r\n  showInactiveCharges = false;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'feeOrPenalty',\r\n    'paymentDueAt',\r\n    'dueAsOf',\r\n    'repeatsOn',\r\n    'calculationType',\r\n    'due',\r\n    'paid',\r\n    'waived',\r\n    'outstanding',\r\n    'actions'\r\n  ];\r\n\r\n  /** Charges Table Reference */\r\n  @ViewChild('chargesTable', { static: true }) chargesTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves the Savings account data from `resolve`.\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe((data: { savingsAccountData: any }) => {\r\n      this.savingsAccountData = data.savingsAccountData;\r\n      this.chargesData = this.savingsAccountData.charges;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const activeCharges = this.chargesData ? this.chargesData.filter(charge => charge.isActive) : [];\r\n    this.dataSource = new MatTableDataSource(activeCharges);\r\n  }\r\n\r\n  /**\r\n   * Toggles datasource for active/inactive charges.\r\n   */\r\n  toggleCharges() {\r\n    this.showInactiveCharges = !this.showInactiveCharges;\r\n    if (!this.showInactiveCharges) {\r\n      const activeCharges = this.chargesData.filter(charge => charge.isActive);\r\n      this.dataSource.data = activeCharges;\r\n    } else {\r\n      const inActiveCharges = this.chargesData.filter(charge => !charge.isActive);\r\n      this.dataSource.data = inActiveCharges;\r\n    }\r\n    this.chargesTableRef.renderRows();\r\n  }\r\n\r\n\r\n  /**\r\n   * Pays the charge.\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  payCharge(chargeId: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Pay Charge ${chargeId}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.savingsAccountData.id, 'paycharge', dataObject, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  waiveCharge(chargeId: any) {\r\n    const waiveChargeDialogRef = this.dialog.open(WaiveChargeDialogComponent, { data: { id: chargeId } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.savingsAccountData.id, 'waive', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Inactivate's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  inactivateCharge(chargeId: any) {\r\n    const inactivateChargeDialogRef = this.dialog.open(InactivateChargeDialogComponent, { data: { id: chargeId } });\r\n    inactivateChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.savingsAccountData.id, 'inactivate', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   * @param {any} charge Charge\r\n   */\r\n  editCharge(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount || charge.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Edit Charge ${charge.id}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.editSavingsAccountCharge(this.savingsAccountData.id, dataObject, charge.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  deleteCharge(chargeId: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${chargeId}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteSavingsAccountCharge(this.savingsAccountData.id, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if charge is recurring.\r\n   * @param {any} charge Charge\r\n   */\r\n  isRecurringCharge(charge: any) {\r\n    return charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee' || charge.chargeTimeType.value === 'Weekly Fee';\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view charge page.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const url: string = this.router.url;\r\n    const refreshUrl: string = this.router.url.slice(0, this.router.url.indexOf('savings-accounts') + 'savings-accounts'.length);\r\n    this.router.navigateByUrl(refreshUrl, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>All Charges</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-20\" *ngIf=\"this.chargesData\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"toggleCharges()\">\r\n        {{showInactiveCharges?'View Active Charges':'View Inactive Charges'}}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #chargesTable [dataSource]=\"dataSource\" >\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"feeOrPenalty\">\r\n        <th mat-header-cell *matHeaderCellDef> Fee/Penalty </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.penalty === true ? 'Penalty' : 'Fee' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paymentDueAt\">\r\n        <th mat-header-cell *matHeaderCellDef> Payment Due At </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"dueAsOf\">\r\n        <th mat-header-cell *matHeaderCellDef> Due As Of </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.dueDate | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"repeatsOn\">\r\n        <th mat-header-cell *matHeaderCellDef> Repeats On (M/d) </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.feeOnMonthDay ? charge.feeOnMonthDay.join('/') : '' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"calculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Calculation Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.chargeCalculationType.value}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"due\">\r\n        <th mat-header-cell *matHeaderCellDef> Due </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amount}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountPaid}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountWaived}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{charge.currency.displaySymbol}}&nbsp;{{charge.amountOutstanding}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span *ngIf=\"savingsAccountData.status.value === 'Submitted and pending approval'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Charge\"\r\n              *mifosxHasPermission=\"'UPDATE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); editCharge(charge)\">\r\n              <i class=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Charge\"\r\n              *mifosxHasPermission=\"'DELETE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); deleteCharge(charge.id)\">\r\n              <i class=\"fa fa-trash\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"savingsAccountData.status.value === 'Active' && charge.amountOutstanding !== 0\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Pay Charge\"\r\n              *mifosxHasPermission=\"'PAY_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); payCharge(charge.id)\">\r\n              <i class=\"fa fa-dollar\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Waive Charge\"\r\n              *mifosxHasPermission=\"'WAIVE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); waiveCharge(charge.id)\">\r\n              <i class=\"fa fa-flag\"></i>\r\n            </button>\r\n            <ng-container *ngIf=\"isRecurringCharge(charge)\">\r\n              <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Inactivate Charge\"\r\n                *mifosxHasPermission=\"'INACTIVATE_SAVINGSACCOUNTCHARGE'\" (click)=\"routeEdit($event); inactivateCharge(charge.id)\">\r\n                <i class=\"fa fa-ban\"></i>\r\n              </button>\r\n            </ng-container>\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" [routerLink]=\"[row.id]\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n/**\r\n * Calculate interest dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-calculate-interest-dialog',\r\n  templateUrl: './calculate-interest-dialog.component.html',\r\n  styleUrls: ['./calculate-interest-dialog.component.scss']\r\n})\r\nexport class CalculateInterestDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<CalculateInterestDialogComponent>) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Calculate Interest</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to calculate interest ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Inactivate charge dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-inactivate-charge-dialog',\r\n  templateUrl: './inactivate-charge-dialog.component.html',\r\n  styleUrls: ['./inactivate-charge-dialog.component.scss']\r\n})\r\nexport class InactivateChargeDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<InactivateChargeDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Inactivate Charge</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to inactivate charge with id: {{ data.id }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n/**\r\n * Post interest dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-post-interest-dialog',\r\n  templateUrl: './post-interest-dialog.component.html',\r\n  styleUrls: ['./post-interest-dialog.component.scss']\r\n})\r\nexport class PostInterestDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<PostInterestDialogComponent>) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Post Interest</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to post interest ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Toggle withhold tax dialog dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-toggle-withhold-tax-dialog',\r\n  templateUrl: './toggle-withhold-tax-dialog.component.html',\r\n  styleUrls: ['./toggle-withhold-tax-dialog.component.scss']\r\n})\r\nexport class ToggleWithholdTaxDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<ToggleWithholdTaxDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>{{ data.isEnable ? 'Enable' : 'Disable' }} Withhold Tax</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to {{ data.isEnable ? 'enable' : 'disable' }} withhold tax for this account ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"{{ data.isEnable ? 'accent' : 'warn' }}\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n/**\r\n * Undo transaction dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-transaction-dialog',\r\n  templateUrl: './undo-transaction-dialog.component.html',\r\n  styleUrls: ['./undo-transaction-dialog.component.scss']\r\n})\r\nexport class UndoTransactionDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<UndoTransactionDialogComponent>) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Undo Transaction</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to undo this transaction ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * Waive charge dialog component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-waive-charge-dialog',\r\n  templateUrl: './waive-charge-dialog.component.html',\r\n  styleUrls: ['./waive-charge-dialog.component.scss']\r\n})\r\nexport class WaiveChargeDialogComponent {\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\r\n   * @param {any} data.\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<WaiveChargeDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}\r\n","<h1 mat-dialog-title>Waive Charge</h1>\r\n<div mat-dialog-content>\r\n  <p>Are you sure you want to waive charge with id: {{ data.id }} ?</p>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ confirm: true }\">Confirm</button>\r\n</mat-dialog-actions>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Savings Datatable Tabs Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-datatable-tabs',\r\n  templateUrl: './datatable-tabs.component.html',\r\n  styleUrls: ['./datatable-tabs.component.scss']\r\n})\r\nexport class DatatableTabsComponent {\r\n\r\n  /** Savings Datatable */\r\n  savingsDatatable: any;\r\n  /** Multi Row Datatable Flag */\r\n  multiRowDatatableFlag: boolean;\r\n\r\n  /**\r\n   * Fetches Savings and datatables data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.data.subscribe((data: { savingsDatatable: any }) => {\r\n      this.savingsDatatable = data.savingsDatatable;\r\n      this.multiRowDatatableFlag = this.savingsDatatable.columnHeaders[0].columnName === 'id' ? true : false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  <mifosx-multi-row *ngIf=\"multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-multi-row>\r\n  <mifosx-single-row *ngIf=\"!multiRowDatatableFlag\" [dataObject]=\"savingsDatatable\"></mifosx-single-row>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../../../savings.service';\r\n\r\n/**\r\n * Savings Account Multi Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-multi-row',\r\n  templateUrl: './multi-row.component.html',\r\n  styleUrls: ['./multi-row.component.scss']\r\n})\r\nexport class MultiRowComponent implements OnInit, OnChanges {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Data Table Columns */\r\n  datatableColumns: string[] = [];\r\n  /** Data Table Data */\r\n  datatableData: any;\r\n  /** Savings Id */\r\n  savingAccountId: string;\r\n  /** Toggle button visibility */\r\n  showDeleteBotton: boolean;\r\n\r\n  /** Data Table Reference */\r\n  @ViewChild('dataTable', { static: true }) dataTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.savingAccountId = this.route.parent.parent.snapshot.paramMap.get('savingAccountId');\r\n  }\r\n\r\n  /**\r\n   * Updates related variables on changes to dataObject.\r\n   */\r\n  ngOnChanges() {\r\n    this.datatableColumns = this.dataObject.columnHeaders.map((columnHeader: any) => {\r\n      return columnHeader.columnName;\r\n    });\r\n    this.datatableData = this.dataObject.data;\r\n    this.showDeleteBotton = this.datatableData[0] ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a new row to the given multi row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.savingAccountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.savingAccountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.dataTableRef.renderRows();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes all rows of the given multi row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.savingAccountId, this.datatableName).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.savingAccountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.showDeleteBotton = false;\r\n            this.dataTableRef.renderRows();\r\n           });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-5\" fxLayoutGap=\"10px\">\r\n      <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"add()\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n        </button>\r\n      </span>\r\n      <span *mifosxHasPermission=\"'DELETE_' + datatableName\">\r\n        <button class=\"delete-button\" mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"showDeleteBotton\">\r\n          <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete All\r\n        </button>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <table #dataTable mat-table [hidden]=\"!datatableData[0]\" [dataSource]=\"datatableData\" class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <ng-container *ngFor=\"let datatableColumn of datatableColumns;let i = index\" [matColumnDef]=\"datatableColumn\">\r\n      <th mat-header-cell *matHeaderCellDef> {{datatableColumn}} </th>\r\n      <td mat-cell *matCellDef=\"let data\"> {{data.row[i]}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"datatableColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: datatableColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from '../../../savings.service';\r\n\r\n\r\n/**\r\n * Savings Account Single Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-single-row',\r\n  templateUrl: './single-row.component.html',\r\n  styleUrls: ['./single-row.component.scss']\r\n})\r\nexport class SingleRowComponent implements OnInit {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Savings Id */\r\n  savingAccountId: string;\r\n\r\n  /**\r\n   * Fetches savings account Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SavingsService} savingsService Savingss Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private dialog: MatDialog,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService) {\r\n    this.savingAccountId = this.route.parent.parent.snapshot.paramMap.get('savingAccountId');\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the given single row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.addSavingsDatatableEntry(this.savingAccountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.savingAccountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the current instance of single row data table.\r\n   */\r\n  edit() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'savings_account_id'));\r\n    });\r\n    let formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    formfields = formfields.map((formfield: FormfieldBase, index: number) => {\r\n      formfield.value = (this.dataObject.data[0].row[index + 1]) ? this.dataObject.data[0].row[index + 1] : '';\r\n      return formfield;\r\n    });\r\n    const data = {\r\n      title: 'Edit ' + this.datatableName,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.savingsService.editSavingsDatatableEntry(this.savingAccountId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.savingsService.getSavingsDatatable(this.savingAccountId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the current instance of single row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteDatatableContent(this.savingAccountId, this.datatableName)\r\n          .subscribe(() => {\r\n            this.savingsService.getSavingsDatatable(this.savingAccountId, this.datatableName).subscribe((dataObject: any) => {\r\n              this.dataObject = dataObject;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Maps API response to data table form fields.\r\n   * @param {any} columns Data Table Columns.\r\n   * @param {string[]} dateTransformColumns Columns transformed with date pipe.\r\n   * @param {any} dataTableEntryObject Additional data table details.\r\n   */\r\n  getFormfields(columns: any, dateTransformColumns: string[], dataTableEntryObject: any) {\r\n    return columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <h3>{{datatableName}}</h3>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n    <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"add()\" *ngIf=\"!dataObject.data[0]\">\r\n        <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n      </button>\r\n    </span>\r\n    <span *mifosxHasPermission=\"'UPDATE_' + datatableName\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"edit()\" *ngIf=\"dataObject.data[0]\">\r\n        <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n      </button>\r\n    </span>\r\n    <span *mifosxHasPermission=\"'DELETE_' + datatableName\" class=\"delete-button\">\r\n      <button mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"dataObject.data[0]\">\r\n        <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete\r\n      </button>\r\n    </span>\r\n  </div>\r\n\r\n  <mat-list role=\"list\" *ngIf=\"dataObject.data[0]\">\r\n    <mat-list-item role=\"listitem\" *ngFor=\"let columnHeader of dataObject.columnHeaders;let i = index\">\r\n      {{columnHeader.columnName}} : {{dataObject.data[0].row[i]}}\r\n    </mat-list-item>\r\n  </mat-list>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Custom Dialogs */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { CalculateInterestDialogComponent } from './custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component';\r\nimport { PostInterestDialogComponent } from './custom-dialogs/post-interest-dialog/post-interest-dialog.component';\r\nimport { ToggleWithholdTaxDialogComponent } from './custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component';\r\n\r\n/** Custom Buttons Configuration */\r\nimport { SavingsButtonsConfiguration } from './savings-buttons.config';\r\nimport { SavingsService } from '../savings.service';\r\n\r\n/**\r\n * Savings Account View Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-savings-account-view',\r\n  templateUrl: './savings-account-view.component.html',\r\n  styleUrls: ['./savings-account-view.component.scss']\r\n})\r\nexport class SavingsAccountViewComponent implements OnInit {\r\n\r\n  /** Savings Account Data */\r\n  savingsAccountData: any;\r\n  /** Savings Data Tables */\r\n  savingsDatatables: any;\r\n  /** Button Configurations */\r\n  buttonConfig: SavingsButtonsConfiguration;\r\n  /** Entity Type */\r\n  entityType: string;\r\n\r\n  /**\r\n   * Fetches savings account data from `resolve`\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {Router} router Router\r\n   * @param {SavingsService} savingsService Savings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private savingsService: SavingsService,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { savingsAccountData: any, savingsDatatables: any }) => {\r\n      this.savingsAccountData = data.savingsAccountData;\r\n      this.savingsDatatables = data.savingsDatatables;\r\n    });\r\n    if (this.router.url.includes('clients')) {\r\n      this.entityType = 'Client';\r\n    } else if (this.router.url.includes('groups')) {\r\n      this.entityType = 'Group';\r\n    } else if (this.router.url.includes('centers')) {\r\n      this.entityType = 'Center';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setConditionalButtons();\r\n  }\r\n\r\n  /**\r\n   * Adds options to button config. conditionaly.\r\n   */\r\n  setConditionalButtons() {\r\n    const status = this.savingsAccountData.status.value;\r\n    this.buttonConfig = new SavingsButtonsConfiguration(status);\r\n    if (this.savingsAccountData.clientId) {\r\n      this.buttonConfig.addOption({\r\n        name: 'Transfer Funds',\r\n        taskPermissionName: 'CREATE_ACCOUNTTRANSFER'\r\n      });\r\n    }\r\n    if (!this.savingsAccountData.fieldOfficerId) {\r\n      this.buttonConfig.addOption({\r\n        name: 'Assign Staff',\r\n        taskPermissionName: 'UPDATESAVINGSOFFICER_SAVINGSACCOUNT'\r\n      });\r\n    } else {\r\n      this.buttonConfig.addOption({\r\n        name: 'Unassign Staff',\r\n        taskPermissionName: 'REMOVESAVINGSOFFICER_SAVINGSACCOUNT'\r\n      });\r\n    }\r\n    if (this.savingsAccountData.charges) {\r\n      const charges: any[] = this.savingsAccountData.charges;\r\n      charges.forEach((charge: any) => {\r\n        if (charge.name === 'Annual fee - INR') {\r\n          this.buttonConfig.addOption({\r\n            name: 'Apply Annual Fees',\r\n            taskPermissionName: 'APPLYANNUALFEE_SAVINGSACCOUNT'\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (this.savingsAccountData.taxGroup) {\r\n      if (this.savingsAccountData.withHoldTax) {\r\n        this.buttonConfig.addOption({\r\n          name: 'Disable Withhold Tax',\r\n          taskPermissionName: 'UPDATEWITHHOLDTAX_SAVINGSACCOUNT'\r\n        });\r\n      } else {\r\n        this.buttonConfig.addOption({\r\n          name: 'Enable Withhold Tax',\r\n          taskPermissionName: 'UPDATEWITHHOLDTAX_SAVINGSACCOUNT'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Refetches data foe the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const url: string = this.router.url;\r\n    const refreshUrl: string = this.router.url.slice(0, this.router.url.indexOf('savings-accounts') + 'savings-accounts'.length);\r\n    this.router.navigateByUrl(refreshUrl, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n  /**\r\n   * Performs action button/option action.\r\n   * @param {string} name action name.\r\n   */\r\n  doAction(name: string) {\r\n    switch (name) {\r\n      case 'Approve':\r\n      case 'Reject':\r\n      case 'Deposit':\r\n      case 'Activate':\r\n      case 'Close':\r\n      case 'Undo Approval':\r\n      case 'Post Interest As On':\r\n      case 'Assign Staff':\r\n      case 'Add Charge':\r\n      case 'Unassign Staff':\r\n      case 'Withdraw By Client':\r\n      case 'Apply Annual Fees':\r\n        this.router.navigate([`actions/${name}`], { relativeTo: this.route });\r\n        break;\r\n      case 'Withdraw':\r\n        this.router.navigate([`actions/Withdrawal`], { relativeTo: this.route });\r\n        break;\r\n      case 'Modify Application':\r\n        this.router.navigate(['edit'], { relativeTo: this.route });\r\n        break;\r\n      case 'Delete':\r\n        this.deleteSavingsAccount();\r\n        break;\r\n      case 'Calculate Interest':\r\n        this.calculateInterest();\r\n        break;\r\n      case 'Post Interest':\r\n        this.postInterest();\r\n        break;\r\n      case 'Enable Withhold Tax':\r\n        this.enableWithHoldTax();\r\n        break;\r\n      case 'Disable Withhold Tax':\r\n        this.disableWithHoldTax();\r\n        break;\r\n      case 'Transfer Funds':\r\n        const queryParams: any = { savingsId: this.savingsAccountData.id, accountType: 'fromsavings' };\r\n        this.router.navigate(['transfer-funds/make-account-transfer'], { relativeTo: this.route, queryParams: queryParams });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes Savings Account.\r\n   */\r\n  private deleteSavingsAccount() {\r\n    const deleteSavingsAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `savings account with id: ${this.savingsAccountData.id}` }\r\n    });\r\n    deleteSavingsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteSavingsAccount(this.savingsAccountData.id).subscribe(() => {\r\n          this.router.navigate(['../../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculates savings account's interest\r\n   */\r\n  private calculateInterest() {\r\n    const calculateInterestAccountDialogRef = this.dialog.open(CalculateInterestDialogComponent);\r\n    calculateInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountCommand(this.savingsAccountData.id, 'calculateInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Posts savings account's interest\r\n   */\r\n  private postInterest() {\r\n    const postInterestAccountDialogRef = this.dialog.open(PostInterestDialogComponent);\r\n    postInterestAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountCommand(this.savingsAccountData.id, 'postInterest', {}).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enables withhold tax for savings account.\r\n   */\r\n  private enableWithHoldTax() {\r\n    const deleteSavingsAccountDialogRef = this.dialog.open(ToggleWithholdTaxDialogComponent, {\r\n      data: { isEnable: true }\r\n    });\r\n    deleteSavingsAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.savingsAccountData.id, 'updateWithHoldTax', { withHoldTax: true})\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disables withhold tac for savings account\r\n   */\r\n  private disableWithHoldTax() {\r\n    const disableWithHoldTaxDialogRef = this.dialog.open(ToggleWithholdTaxDialogComponent, {\r\n      data: { isEnable: false }\r\n    });\r\n    disableWithHoldTaxDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountUpdateCommand(this.savingsAccountData.id, 'updateWithHoldTax', { withHoldTax: false})\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"savings-account-card\">\r\n\r\n  <mat-card-header fxLayout=\"column\" class=\"header\">\r\n\r\n    <mat-card-title-group class=\"header-title-group\">\r\n\r\n      <div class=\"profile-image-container\">\r\n        <div>\r\n          <img mat-card-md-image class=\"profile-image\"\r\n            matTooltip=\"Savings Account\"\r\n            [src]=\"'assets/images/savings_account_placeholder.png'\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mat-typography account-card-title\">\r\n        <mat-card-title>\r\n          <h3>\r\n            <i class=\"fa fa-stop\" [ngClass]=\"savingsAccountData.status.code | statusLookup\" [matTooltip]=\"savingsAccountData.status.value\"></i>\r\n              Account Name : {{savingsAccountData.savingsProductName}}\r\n          </h3>\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n          <p>\r\n            Account #: {{savingsAccountData.accountNo}} | {{entityType}} Name: {{savingsAccountData.clientName || savingsAccountData.groupName}}<br/>\r\n            <span *ngIf=\"!savingsAccountData.status.rejected && !savingsAccountData.status.submittedAndPendingApproval\">\r\n              Current Balance: {{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.accountBalance}}<br/>\r\n              Available Balance: {{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.availableBalance}}<br/>\r\n            </span>\r\n          </p>\r\n        </mat-card-subtitle>\r\n      </div>\r\n\r\n    </mat-card-title-group>\r\n\r\n    <mat-card-actions class=\"account-actions\">\r\n\r\n      <ng-container *ngFor=\"let button of buttonConfig.singleButtons\">\r\n        <button mat-raised-button *mifosxHasPermission=\"button.taskPermissionName\" (click)=\"doAction(button.name)\">\r\n          <i class=\"{{button.icon}}\"></i> {{button.name}}</button>\r\n      </ng-container>\r\n  \r\n      <ng-container *ngIf=\"buttonConfig.options\">\r\n        <button mat-raised-button [matMenuTriggerFor]=\"More\">More</button>\r\n        <mat-menu #More=\"matMenu\">\r\n        <span *ngFor=\"let option of buttonConfig.options\">\r\n          <button mat-menu-item *mifosxHasPermission=\"option.taskPermissionName\" (click)=\"doAction(option.name)\">{{option.name}}</button>\r\n        </span>\r\n        </mat-menu>\r\n      </ng-container>\r\n  \r\n    </mat-card-actions>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content class=\"content\">\r\n\r\n    <div class=\"savings-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n\r\n      <div fxFlex=\"49%\" *ngIf=\"!savingsAccountData.status.rejected && !savingsAccountData.status.submittedAndPendingApproval; else alternateSummary\">\r\n        <h4 class=\"table-headers\">Account Summary</h4>\r\n        <table>\r\n          <tbody>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalWithdrawals\">\r\n              <td>Total Withdrawls</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalWithdrawals}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalWithdrawalFees\">\r\n              <td>Withdrawals Fees</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalWithdrawalFees}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalAnnualFees\">\r\n              <td>Annual Fees</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalAnnualFees}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalInterestEarned >= 0\">\r\n              <td>Interest Earned</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalInterestEarned}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalInterestPosted\">\r\n              <td>Interest Posted</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalInterestPosted}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.interestNotPosted >= 0\">\r\n              <td>Interest Earned Not Posted</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.interestNotPosted}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.totalOverdraftInterestDerived\">\r\n              <td>Interest On Overdraft</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalOverdraftInterestDerived}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.interestNotPosted < 0\">\r\n              <td>Overdraft Interest Not Posted</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.interestNotPosted}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Nominal Interest Rate</td>\r\n              <td>{{savingsAccountData.nominalAnnualInterestRate}}%</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Compounding Period</td>\r\n              <td>{{savingsAccountData.interestCompoundingPeriodType.value}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Posting Period</td>\r\n              <td>{{savingsAccountData.interestPostingPeriodType.value}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Interest Calculated Using</td>\r\n              <td>{{savingsAccountData.interestCalculationType.value}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td># Days in Year</td>\r\n              <td>{{savingsAccountData.interestCalculationDaysInYearType.value}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.withdrawalFee\">\r\n              <td>Withdrawal Fee</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.withdrawalFee.amount}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.lastActiveTransactionDate\">\r\n              <td>Last Active Transaction Date</td>\r\n              <td>{{savingsAccountData.lastActiveTransactionDate | date}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"!(savingsAccountData.subStatus.id === 0)\">\r\n              <td>Substatus</td>\r\n              <td>{{savingsAccountData.subStatus.value}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.daysToInactive\">\r\n              <td>Days to Inactive</td>\r\n              <td>{{savingsAccountData.daysToInactive}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.daysToDormancy\">\r\n              <td>Days to Dormancy</td>\r\n              <td>{{savingsAccountData.daysToDormancy}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.daysToEscheat\">\r\n              <td>Days to Escheat</td>\r\n              <td>{{savingsAccountData.daysToEscheat}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.annualFee\">\r\n              <td>Annual Fee</td>\r\n              <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.annualFee.amount}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.allowOverdraft\">\r\n              <td>Over Draft Limit</td>\r\n              <td>{{savingsAccountData.overdraftLimit}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.allowOverdraft\">\r\n              <td>Min Overdraft Required for Interest Calculation</td>\r\n              <td>{{savingsAccountData.minOverdraftForInterestCalculation}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.minBalanceForInterestCalculation\">\r\n              <td>Min Balance Required for Interest Calculation</td>\r\n              <td>{{savingsAccountData.minBalanceForInterestCalculation}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.minRequiredBalance\">\r\n              <td>Minimum Required Balance</td>\r\n              <td>{{savingsAccountData.minRequiredBalance}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.enforceMinRequiredBalance\">\r\n              <td>Enforce Minimum Required Balance</td>\r\n              <td>{{savingsAccountData.enforceMinRequiredBalance}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.summary.lastInterestCalculationDate\">\r\n              <td>Interest Recalculation Date</td>\r\n              <td>{{savingsAccountData.summary.lastInterestCalculationDate | date}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.onHoldFunds\">\r\n              <td>On Hold Funds</td>\r\n              <td><a *mifosxHasPermission=\"'READ_SAVINGSACCOUNT'\">{{savingsAccountData.onHoldFunds}}</a></td>\r\n            </tr>\r\n            <tr *ngIf=\"savingsAccountData.withHoldTax\">\r\n              <td>Withhold Tax Group</td>\r\n              <td>{{savingsAccountData.taxGroup.name}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <ng-template #alternateSummary>\r\n        <div fxFlex=\"49%\" >\r\n          <h4 class=\"table-headers\">Account Summary</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Activated On</td>\r\n                <td>{{savingsAccountData.timeline.activatedOnDate ? (savingsAccountData.timeline.activatedOnDate | date) : 'Not Activated'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Currency</td>\r\n                <td>{{savingsAccountData.currency.name}} [{{savingsAccountData.currency.code}}]</td>\r\n              </tr>\r\n              <tr>\r\n                <td>External Id</td>\r\n                <td>{{savingsAccountData.externalId ? savingsAccountData.externalId : 'Not Provided'}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <div fxFlex=\"49%\" fxLayout=\"column\" fxLayoutGap=\"4%\">\r\n\r\n        <div *ngIf=\"!savingsAccountData.status.rejected && !savingsAccountData.status.submittedAndPendingApproval; else alternateDetails\">\r\n          <h4 class=\"table-headers\">Savings Details</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Activated On</td>\r\n                <td>{{savingsAccountData.timeline.activatedOnDate ? (savingsAccountData.timeline.activatedOnDate | date) : 'Not Activated'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Field Officer</td>\r\n                <td>{{savingsAccountData.fieldOfficerName ? savingsAccountData.fieldOfficerName : 'Unassigned'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>External Id</td>\r\n                <td>{{savingsAccountData.externalId ? savingsAccountData.externalId : 'Not Provided'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Currency</td>\r\n                <td>{{savingsAccountData.currency.name}} [{{savingsAccountData.currency.code}}]</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Nominal Interest Rate</td>\r\n                <td>{{savingsAccountData.nominalAnnualInterestRate}}%</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <ng-template #alternateDetails>\r\n          <div>\r\n            <h4 class=\"table-headers\">Savings Details</h4>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Field Officer</td>\r\n                  <td>{{savingsAccountData.fieldOfficerName ? savingsAccountData.fieldOfficerName : 'Unassigned'}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Balance</td>\r\n                  <td>{{savingsAccountData.summary.accountBalance}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <div *ngIf=\"!savingsAccountData.status.rejected && !savingsAccountData.status.submittedAndPendingApproval\">\r\n          <h4 class=\"table-headers\">Performance History</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr *ngIf=\"savingsAccountData.summary.totalDeposits\">\r\n                <td>Total Deposits</td>\r\n                <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalDeposits}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"savingsAccountData.summary.totalInterestEarned >= 0\">\r\n                <td>Total Interest Earned</td>\r\n                <td>{{savingsAccountData.currency.displaySymbol}}&nbsp;{{savingsAccountData.summary.totalInterestEarned}}</td>\r\n              </tr>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <nav mat-tab-nav-bar class=\"navigation-tabs\">\r\n      <a mat-tab-link [routerLink]=\"['./transactions']\" routerLinkActive #transactions=\"routerLinkActive\"\r\n      [active]=\"transactions.isActive\">\r\n        Transactions\r\n      </a>\r\n      <a mat-tab-link [routerLink]=\"['./charges']\" routerLinkActive #charges=\"routerLinkActive\"\r\n      [active]=\"charges.isActive\">\r\n        Charges\r\n      </a>\r\n      <ng-container *mifosxHasPermission=\"'READ_SAVINGSACCOUNTCHARGE'\">\r\n        <a mat-tab-link [routerLink]=\"['./standing-instructions']\" routerLinkActive #standingInstructions=\"routerLinkActive\"\r\n          [active]=\"standingInstructions.isActive\" *ngIf=\"savingsAccountData.clientId\">\r\n          Standing Instructions\r\n        </a>\r\n      </ng-container>\r\n      <ng-container *ngFor=\"let savingsDatatable of savingsDatatables\">\r\n        <a mat-tab-link *mifosxHasPermission=\"'READ_' + savingsDatatable.registeredTableName\"\r\n          [routerLink]=\"['./datatables',savingsDatatable.registeredTableName]\"\r\n          routerLinkActive #datatable=\"routerLinkActive\" [active]=\"datatable.isActive\">\r\n          {{savingsDatatable.registeredTableName}}\r\n        </a>\r\n      </ng-container>\r\n    </nav>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","/** Savings Account Buttons Configuration */\r\nexport class SavingsButtonsConfiguration {\r\n\r\n  optionArray: {\r\n    name: string,\r\n    taskPermissionName: string,\r\n  }[];\r\n\r\n  buttonsArray: {\r\n    name: string,\r\n    icon: string,\r\n    taskPermissionName: string,\r\n  }[];\r\n\r\n  constructor(status: string) {\r\n    this.setOptions(status);\r\n    this.setButtons(status);\r\n  }\r\n\r\n  get singleButtons() {\r\n    return this.buttonsArray;\r\n  }\r\n\r\n  get options() {\r\n    return this.optionArray;\r\n  }\r\n\r\n  setButtons(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Post Interest As On',\r\n            icon: 'fa fa-arrow-right',\r\n            taskPermissionName: 'POSTINTEREST_SAVINGSACCOUNT',\r\n          },\r\n          {\r\n            name: 'Deposit',\r\n            icon: 'fa fa-arrow-up',\r\n            taskPermissionName: 'DEPOSIT_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Withdraw',\r\n            icon: 'fa fa-arrow-down',\r\n            taskPermissionName: 'WITHDRAW_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Calculate Interest',\r\n            icon: 'fa fa-table',\r\n            taskPermissionName: 'CALCULATEINTEREST_SAVINGSACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Modify Application',\r\n            icon: 'fa fa-pencil ',\r\n            taskPermissionName: 'UPDATE_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Approve',\r\n            icon: 'fa fa-check',\r\n            taskPermissionName: 'APPROVE_SAVINGSACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n        this.buttonsArray = [\r\n          {\r\n            name: 'Undo Approval',\r\n            icon: 'fa fa-undo',\r\n            taskPermissionName: 'APPROVALUNDO_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Activate',\r\n            icon: 'fa fa-check',\r\n            taskPermissionName: 'ACTIVATE_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Add Charge',\r\n            icon: 'fa fa-plus',\r\n            taskPermissionName: 'CREATE_SAVINGSACCOUNTCHARGE'\r\n          }\r\n        ];\r\n      break;\r\n      default:\r\n        this.buttonsArray = [];\r\n    }\r\n  }\r\n\r\n  setOptions(status: string) {\r\n    switch (status) {\r\n      case 'Active':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Post Interest',\r\n            taskPermissionName: 'POSTINTEREST_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Add Charge',\r\n            taskPermissionName: 'CREATE_SAVINGSACCOUNTCHARGE'\r\n          },\r\n          {\r\n            name: 'Close',\r\n            taskPermissionName: 'CLOSE_SAVINGSACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Submitted and pending approval':\r\n        this.optionArray = [\r\n          {\r\n            name: 'Reject',\r\n            taskPermissionName: 'REJECT_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Withdraw By Client',\r\n            taskPermissionName: 'WITHDRAW_SAVINGSACCOUNT'\r\n          },\r\n          {\r\n            name: 'Add Charge',\r\n            taskPermissionName: 'CREATE_SAVINGSACCOUNTCHARGE'\r\n          },\r\n          {\r\n            name: 'Delete',\r\n            taskPermissionName: 'DELETE_SAVINGSACCOUNT'\r\n          }\r\n        ];\r\n        break;\r\n      case 'Approved':\r\n      default:\r\n        this.optionArray = [];\r\n    }\r\n  }\r\n\r\n  addOption(option: {name: string, taskPermissionName: string}) {\r\n    this.optionArray.push(option);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { AccountTransfersService } from 'app/account-transfers/account-transfers.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/**\r\n * Savings Standing Instructions Tab\r\n */\r\n@Component({\r\n  selector: 'mifosx-standing-instructions-tab',\r\n  templateUrl: './standing-instructions-tab.component.html',\r\n  styleUrls: ['./standing-instructions-tab.component.scss']\r\n})\r\nexport class StandingInstructionsTabComponent implements OnInit {\r\n\r\n  /** Savings Data */\r\n  savingsData: any;\r\n  /** Instructions Data */\r\n  instructionsData: any[];\r\n  /** Data source for instructions table. */\r\n  dataSource = new MatTableDataSource();\r\n  /** Columns to be displayed in instructions table. */\r\n  displayedColumns: string[] = [\r\n    'client',\r\n    'fromAccount',\r\n    'beneficiary',\r\n    'toAccount',\r\n    'amount',\r\n    'validity',\r\n    'actions'\r\n  ];\r\n\r\n  /** Instruction Table Reference */\r\n  @ViewChild('instructionsTable', { static: true }) instructionTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves Savings Account Data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private savingsService: SavingsService,\r\n              private dialog: MatDialog,\r\n              private accountTransfersService: AccountTransfersService,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe((data: { savingsAccountData: any }) => {\r\n      this.savingsData = data.savingsAccountData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStandingInstructions();\r\n  }\r\n\r\n  /**\r\n   * Retrieves standing instructions and initializes instructions table.\r\n   */\r\n  getStandingInstructions() {\r\n    const clientId = this.savingsData.clientId;\r\n    const clientName = this.savingsData.clientName;\r\n    const accountId = this.savingsData.id;\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.savingsService.getStandingInstructions(clientId, clientName, accountId, locale, dateFormat).subscribe((response: any) => {\r\n      this.instructionsData = response.pageItems;\r\n      this.dataSource.data = this.instructionsData;\r\n      this.instructionTableRef.renderRows();\r\n    });\r\n  }\r\n\r\n  deleteStandingInstruction(instructionId: any) {\r\n    const deleteStandingInstructionDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `standing instruction id: ${instructionId}` }\r\n    });\r\n    deleteStandingInstructionDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.accountTransfersService.deleteStandingInstrucions(instructionId)\r\n          .subscribe(() => { });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Standing Instructions</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #instructionsTable [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"client\">\r\n        <th mat-header-cell *matHeaderCellDef> Client </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromClient.displayName}}-{{instruction.fromClient.id}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fromAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> From Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromAccount.accountNo}} ({{instruction.fromAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"beneficiary\">\r\n        <th mat-header-cell *matHeaderCellDef> Beneficiary </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toClient.displayName}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"toAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> To Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toAccount.accountNo}} ({{instruction.toAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.instructionType.value}}/{{instruction.amount}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"validity\">\r\n        <th mat-header-cell *matHeaderCellDef> Validity </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.validFrom | date}} to {{instruction.validTill | date}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Standing Instruction\"\r\n              *mifosxHasPermission=\"'UPDATE_STANDINGINSTRUCTION'\">\r\n              <i class=\"fa fa-edit\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Standing Instruction\"\r\n              *mifosxHasPermission=\"'DELETE_STANDINGINSTRUCTION'\" (click)=\"deleteStandingInstruction(instruction.id)\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </button>\r\n          </span>\r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"View Standing Instruction\"\r\n            *mifosxHasPermission=\"'READ_STANDINGINSTRUCTION'\">\r\n            <i class=\"fa fa-eye\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { ReportsService } from 'app/reports/reports.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Export Client Savings Transactions Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-export-transactions',\r\n  templateUrl: './export-transactions.component.html',\r\n  styleUrls: ['./export-transactions.component.scss']\r\n})\r\nexport class ExportTransactionsComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Transactions Report Form */\r\n  transactionsReportForm: any;\r\n  /** substitute for resolver */\r\n  hideOutput = true;\r\n  /** trusted resource url for pentaho output */\r\n  pentahoUrl: any;\r\n  /** Savings Account Id */\r\n  savingsAccountId: any;\r\n\r\n  /**\r\n   * Fetches savings account data from grandparent's `resolve`\r\n   * @param {DomSanitizer} sanitizer DOM Sanitizer\r\n   * @param {ReportsService} reportsService Reports Service\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private reportsService: ReportsService,\r\n              private formBuilder: FormBuilder,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.parent.data.subscribe((data: { savingsAccountData: any }) => {\r\n      this.savingsAccountId = data.savingsAccountData.accountNo;\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.createTransactionsReportForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the transactions report form.\r\n   */\r\n  createTransactionsReportForm() {\r\n    this.transactionsReportForm = this.formBuilder.group({\r\n      'fromDate': ['', Validators.required],\r\n      'toDate': ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generates client savings transactions report.\r\n   */\r\n  generate() {\r\n    const data = {\r\n      'output-type':\t'PDF',\r\n      R_startDate:\tthis.datePipe.transform(this.transactionsReportForm.value.fromDate, this.settingsService.dateFormat),\r\n      R_endDate:\tthis.datePipe.transform(this.transactionsReportForm.value.toDate, this.settingsService.dateFormat),\r\n      R_savingsAccountId:\tthis.savingsAccountId\r\n    };\r\n    this.reportsService.getPentahoRunReportData('Client Saving Transactions', data, 'default', this.settingsService.language.code, this.settingsService.dateFormat)\r\n      .subscribe( (res: any) => {\r\n        const contentType = res.headers.get('Content-Type');\r\n        const file = new Blob([res.body], {type: contentType});\r\n        const filecontent = URL.createObjectURL(file);\r\n        this.pentahoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(filecontent);\r\n        this.hideOutput = false;\r\n      });\r\n  }\r\n\r\n}\r\n","<form class=\"m-t-20\" fxLayout=\"column\" [formGroup]=\"transactionsReportForm\" (ngSubmit)=\"generate()\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutGap=\"3%\" fxLayoutAlign=\"center\">\r\n\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>From Date</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"fromDatePicker\" required formControlName=\"fromDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"fromDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #fromDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        From date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>To Date</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"toDatePicker\" required formControlName=\"toDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"toDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #toDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        To date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div class=\"generate-button\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5%\">\r\n    <button type=\"button\" mat-raised-button [routerLink]=\"['../']\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!transactionsReportForm.valid\">\r\n    <fa-icon icon=\"cogs\"></fa-icon>&nbsp;&nbsp;Generate Report &nbsp;</button>\r\n  </div>\r\n\r\n</form>\r\n\r\n<iframe *ngIf=\"!hideOutput\" [src]=\"pentahoUrl\" frameborder=\"0\" width=100% height=\"750px;\"></iframe>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/**\r\n * Transactions Tab Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-transactions-tab',\r\n  templateUrl: './transactions-tab.component.html',\r\n  styleUrls: ['./transactions-tab.component.scss']\r\n})\r\nexport class TransactionsTabComponent implements OnInit {\r\n\r\n  /** Savings Account Status */\r\n  status: any;\r\n  /** Transactions Data */\r\n  transactionsData: any;\r\n  /** Columns to be displayed in transactions table. */\r\n  displayedColumns: string[] = ['id', 'transactionDate', 'transactionType', 'debit', 'credit', 'balance', 'viewReciept'];\r\n  /** Data source for transactions table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /**\r\n   * Retrieves savings account data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.route.parent.parent.data.subscribe((data: { savingsAccountData: any }) => {\r\n      this.transactionsData = data.savingsAccountData.transactions?.filter((transaction: any) => !transaction.reversed);\r\n      this.status = data.savingsAccountData.status.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.transactionsData);\r\n  }\r\n\r\n  /**\r\n   * Checks if transaction is debit.\r\n   * @param {any} transactionType Transaction Type\r\n   */\r\n  isDebit(transactionType: any) {\r\n    return transactionType.withdrawal === true || transactionType.feeDeduction === true\r\n            || transactionType.overdraftInterest === true || transactionType.withholdTax === true;\r\n  }\r\n\r\n  /**\r\n   * Checks transaction status.\r\n   */\r\n  checkStatus() {\r\n    if (this.status === 'Active' || this.status === 'Closed' || this.status === 'Transfer in progress' ||\r\n       this.status === 'Transfer on hold' || this.status === 'Premature Closed' || this.status === 'Matured') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Show Transactions Details\r\n   * @param transactionsData Transactions Data\r\n   */\r\n  showTransactions(transactionsData: any) {\r\n    if (transactionsData.transfer) {\r\n      this.router.navigate([`account-transfers/account-transfers/${transactionsData.transfer.id}`], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate([transactionsData.id], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view pages.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>All Transactions</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-20\" fxLayout=\"row\" fxLayoutGap=\"20px\" *ngIf=\"checkStatus()\">\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['/accounting', 'journal-entries']\">View Journal Entries</button>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['export']\">Export</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" >\r\n\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.id }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.date | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionType\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Type </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.transactionType.value  }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"debit\">\r\n        <th mat-header-cell *matHeaderCellDef> Debit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ isDebit(transaction.transactionType) ? transaction.amount : 'N/A'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"credit\">\r\n        <th mat-header-cell *matHeaderCellDef> Credit </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ !isDebit(transaction.transactionType) ? transaction.amount : 'N/A' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"balance\">\r\n        <th mat-header-cell *matHeaderCellDef> Balance </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.runningBalance }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"viewReciept\">\r\n        <th mat-header-cell *matHeaderCellDef> View Reciept </th>\r\n        <td mat-cell *matCellDef=\"let transaction\"> \r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" (click)=\"routeEdit($event)\" [routerLink]=\"[transaction.id, 'reciept']\">\r\n            <i class=\"fa fa-file\" matTooltip=\"View Reciept\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" (click)=\"showTransactions(row)\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Transaction component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-transaction',\r\n  templateUrl: './edit-transaction.component.html',\r\n  styleUrls: ['./edit-transaction.component.scss']\r\n})\r\nexport class EditTransactionComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Savings account transaction form. */\r\n  editTransactionForm: FormGroup;\r\n  /** savings account transaction payment options. */\r\n  paymentTypeOptions: {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    isCashPayment: boolean,\r\n    position: number\r\n  }[];\r\n  /** Flag to enable payment details fields. */\r\n  addPaymentDetailsFlag: Boolean = false;\r\n  /** saving account's Id */\r\n  savingAccountId: string;\r\n  /** Transaction Template */\r\n  transactionTemplateData: any;\r\n\r\n  /**\r\n   * Retrieves the Saving Account transaction template data from `resolve`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {SavingsService} savingsService Savings Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private savingsService: SavingsService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountTransactionTemplate: any }) => {\r\n      this.transactionTemplateData = data.savingsAccountTransactionTemplate;\r\n      this.paymentTypeOptions = this.transactionTemplateData.paymentTypeOptions;\r\n    });\r\n    this.savingAccountId = this.route.parent.snapshot.params['savingAccountId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Saving account transaction form when component loads.\r\n   */\r\n  ngOnInit() {\r\n    this.createEditTransactionForm();\r\n    this.editTransactionForm.patchValue({\r\n      'transactionDate': this.transactionTemplateData.date && new Date(this.transactionTemplateData.date),\r\n      'transactionAmount': this.transactionTemplateData.amount,\r\n      'paymentTypeId': this.transactionTemplateData.paymentTypeId\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to create the Saving Account Transaction Form.\r\n   */\r\n  createEditTransactionForm() {\r\n    this.editTransactionForm = this.formBuilder.group({\r\n      'transactionDate': ['', Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': [''],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.addPaymentDetailsFlag = !this.addPaymentDetailsFlag;\r\n    if (this.addPaymentDetailsFlag) {\r\n      this.editTransactionForm.addControl('accountNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('checkNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('routingCode', new FormControl(''));\r\n      this.editTransactionForm.addControl('receiptNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.editTransactionForm.removeControl('accountNumber');\r\n      this.editTransactionForm.removeControl('checkNumber');\r\n      this.editTransactionForm.removeControl('routingCode');\r\n      this.editTransactionForm.removeControl('receiptNumber');\r\n      this.editTransactionForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to submit the transaction details.\r\n   */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.editTransactionForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.editTransactionForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const transactionData = this.editTransactionForm.value;\r\n    transactionData.locale = this.settingsService.language.code;\r\n    transactionData.dateFormat = dateFormat;\r\n    this.savingsService.executeSavingsAccountTransactionsCommand(this.savingAccountId, 'modify', transactionData, this.transactionTemplateData.id)\r\n      .subscribe(res => {\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"editTransactionForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content fxLayout=\"column\">\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\"\r\n            formControlName=\"transactionDate\" required>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dueDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionDate.hasError('required')\">\r\n            Transaction Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Amount</mat-label>\r\n          <input type=\"number\" formControlName=\"transactionAmount\" required matInput />\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionAmount.hasError('required')\">\r\n            Transaction Amount is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Payment Type</mat-label>\r\n          <mat-select formControlName=\"paymentTypeId\">\r\n            <mat-option *ngFor=\"let paymentType of paymentTypeOptions\" [value]=\"paymentType.id\">\r\n              {{ paymentType.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n          <mat-label fxFlexAlign=\"center\">Show Payment Details</mat-label>\r\n          <button type=\"button\" mat-mini-fab color=\"primary\" (click)=\"addPaymentDetails()\">\r\n            <fa-icon [icon]=\"!addPaymentDetailsFlag ? 'plus-circle' : 'minus-circle'\" size=\"lg\"></fa-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['accountNumber']\">\r\n          <mat-label>Account Number</mat-label>\r\n          <input type=\"number\" formControlName=\"accountNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['checkNumber']\">\r\n          <mat-label>Cheque</mat-label>\r\n          <input type=\"number\" formControlName=\"checkNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['routingCode']\">\r\n          <mat-label>Routing Code</mat-label>\r\n          <input formControlName=\"routingCode\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['receiptNumber']\">\r\n          <mat-label>Receipt Number</mat-label>\r\n          <input formControlName=\"receiptNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['bankNumber']\">\r\n          <mat-label>Bank</mat-label>\r\n          <input formControlName=\"bankNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!editTransactionForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n      \r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n  ","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * View Transaction Reciept Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-reciept',\r\n  templateUrl: './view-reciept.component.html',\r\n  styleUrls: ['./view-reciept.component.scss']\r\n})\r\nexport class ViewRecieptComponent implements OnInit {\r\n\r\n  /** trusted resource url for pentaho output */\r\n  pentahoUrl: any;\r\n  /** Transaction Reciept Data */\r\n  transactionRecieptData: any;\r\n\r\n  /**\r\n   * Fetches transaction reciept `resolve`\r\n   * @param {DomSanitizer} sanitizer DOM Sanitizer\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private route: ActivatedRoute) {\r\n    this.route.data.subscribe((data: { savingsTransactionReciept: any }) => {\r\n      this.transactionRecieptData = data.savingsTransactionReciept;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const contentType = this.transactionRecieptData.headers.get('Content-Type');\r\n    const file = new Blob([this.transactionRecieptData.body], {type: contentType});\r\n    const filecontent = URL.createObjectURL(file);\r\n    this.pentahoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(filecontent);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"container\">\r\n\r\n  <div class=\"back-button\">\r\n    <button type=\"button\" color=\"primary\" mat-raised-button [routerLink]=\"['../../']\">\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;Back</button>\r\n  </div>\r\n  \r\n  <iframe [src]=\"pentahoUrl\" frameborder=\"0\" width=100% height=\"600px;\"></iframe>\r\n\r\n</mat-card>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { UndoTransactionDialogComponent } from '../../custom-dialogs/undo-transaction-dialog/undo-transaction-dialog.component';\r\n\r\n/**\r\n * View Transaction Component.\r\n * TODO: Add support for account transfers.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-transaction',\r\n  templateUrl: './view-transaction.component.html',\r\n  styleUrls: ['./view-transaction.component.scss']\r\n})\r\nexport class ViewTransactionComponent {\r\n\r\n  /** Transaction data. */\r\n  transactionData: any;\r\n\r\n  /**\r\n   * Retrieves the Transaction data from `resolve`.\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountTransaction: any }) => {\r\n      this.transactionData = data.savingsAccountTransaction;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the savings transaction\r\n   */\r\n  undoTransaction() {\r\n    const accountId = this.route.parent.snapshot.params['savingAccountId'];\r\n    const undoTransactionAccountDialogRef = this.dialog.open(UndoTransactionDialogComponent);\r\n    undoTransactionAccountDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const data = {\r\n          transactionDate: this.datePipe.transform(this.transactionData.date && new Date(this.transactionData.date), dateFormat),\r\n          transactionAmount: 0,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.executeSavingsAccountTransactionsCommand(accountId, 'undo', data, this.transactionData.id).subscribe(() => {\r\n          this.router.navigate(['../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayoutAlign=\"end\" class=\"container m-b-20\" fxLayoutGap=\"2%\"\r\n  *ngIf=\"!(transactionData.interestedPostedAsOn === false && (transactionData.transactionType.id === 17 || transactionData.transactionType.id === 3))\">\r\n  <span *mifosxHasPermission=\"'ADJUSTTRANSACTION_SAVINGSACCOUNT'\">\r\n    <button mat-raised-button color=\"primary\" \r\n      *ngIf=\"transactionData.transactionType.value == 'Transfer' || transactionData.reversed == 'true' \r\n        || transactionData.transactionType.id==3 || transactionData.transactionType.id==17\"\r\n      [routerLink]=\"'edit'\">\r\n      <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n    </button>\r\n  </span>\r\n  <button mat-raised-button color=\"warn\"\r\n    *mifosxHasPermission=\"'UNDOTRANSACTION_SAVINGSACCOUNT'\"\r\n    (click)=\"undoTransaction()\">\r\n    <fa-icon icon=\"undo\"></fa-icon>&nbsp;&nbsp;Undo\r\n  </button>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Id\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.id }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.transactionType.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Date\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.date | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.currency.displayLabel }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Amount\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.amount }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Note\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.note }}\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"transactionData.paymentDetailData\">\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Payment Type\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.paymentType.name }}\r\n          </div>\r\n          \r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Account No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.accountNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Cheque Number\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.checkNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Routing Code\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.routingCode }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Receipt No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.receiptNumber }}\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Bank No.\r\n          </div>\r\n  \r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.bankNumber }}\r\n          </div>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SavingsService } from 'app/savings/savings.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { WaiveChargeDialogComponent } from '../custom-dialogs/waive-charge-dialog/waive-charge-dialog.component';\r\nimport { InactivateChargeDialogComponent } from '../custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * View Charge Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-charge',\r\n  templateUrl: './view-charge.component.html',\r\n  styleUrls: ['./view-charge.component.scss']\r\n})\r\nexport class ViewChargeComponent {\r\n\r\n  /** Charge data. */\r\n  chargeData: any;\r\n  /** Savings Account Data */\r\n  savingsAccountData: any;\r\n\r\n  /**\r\n   * Retrieves the Charge data from `resolve`.\r\n   * @param {SavingsService} savingsService Savings Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Setting service\r\n   */\r\n  constructor(private savingsService: SavingsService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { savingsAccountCharge: any }) => {\r\n      this.chargeData = data.savingsAccountCharge;\r\n    });\r\n    this.route.data.subscribe((data: { savingsAccountData: any }) => {\r\n      this.savingsAccountData = data.savingsAccountData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Pays the charge.\r\n   */\r\n  payCharge() {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: 'Pay Charge',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.chargeData.accountId, 'paycharge', dataObject, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   */\r\n  waiveCharge() {\r\n    const waiveChargeDialogRef = this.dialog.open(WaiveChargeDialogComponent, { data: { id: this.chargeData.id } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.chargeData.accountId, 'waive', {}, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Inactivate's the charge\r\n   */\r\n  inactivateCharge() {\r\n    const inactivateChargeDialogRef = this.dialog.open(InactivateChargeDialogComponent, { data: { id: this.chargeData.id } });\r\n    inactivateChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.savingsService.executeSavingsAccountChargesCommand(this.chargeData.accountId, 'inactivate', {}, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   */\r\n  editCharge() {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: this.chargeData.amount || this.chargeData.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.savingsService.editSavingsAccountCharge(this.chargeData.accountId, dataObject, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   */\r\n  deleteCharge() {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${this.chargeData.id}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.savingsService.deleteSavingsAccountCharge(this.chargeData.accountId, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if charge is recurring\r\n   */\r\n  isRecurringCharge() {\r\n    const chargeTimeType = this.chargeData.chargeTimeType.value;\r\n    return chargeTimeType === 'Monthly Fee' || chargeTimeType === 'Annual Fee' || chargeTimeType === 'Weekly Fee';\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const url: string = this.router.url.replace(`/${this.chargeData.id}`, '');\r\n    const refreshUrl: string = this.router.url.slice(0, this.router.url.indexOf('savings-accounts') + 'savings-accounts'.length);\r\n    this.router.navigateByUrl(refreshUrl, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div *ngIf=\"savingsAccountData.status.value === 'Active' && chargeData.amountOutstanding !== 0\"\r\n  fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" class=\"container m-b-20\">\r\n    <button mat-raised-button color=\"accent\" *mifosxHasPermission=\"'PAY_SAVINGSACCOUNTCHARGE'\" (click)=\"payCharge()\">\r\n      <fa-icon icon=\"dollar-sign\"></fa-icon>&nbsp;&nbsp;\r\n      Pay\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" *mifosxHasPermission=\"'WAIVE_SAVINGSACCOUNTCHARGE'\" (click)=\"waiveCharge()\">\r\n      <fa-icon icon=\"flag\"></fa-icon>&nbsp;&nbsp;\r\n      Waive\r\n    </button>\r\n    <span *ngIf=\"isRecurringCharge()\">\r\n      <button mat-raised-button color=\"warn\" *mifosxHasPermission=\"'INACTIVATE_SAVINGSACCOUNTCHARGE'\" (click)=\"inactivateCharge()\">\r\n        <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;\r\n        Inactivate\r\n      </button>\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf=\"savingsAccountData.status.value === 'Submitted and pending approval'\"\r\n  fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" class=\"container m-b-20\">\r\n    <button mat-raised-button color=\"primary\" *mifosxHasPermission=\"'UPDATE_SAVINGSACCOUNTCHARGE'\" (click)=\"editCharge()\">\r\n      <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;\r\n      Edit\r\n    </button>\r\n    <button mat-raised-button color=\"warn\" *mifosxHasPermission=\"'DELETE_SAVINGSACCOUNTCHARGE'\" (click)=\"deleteCharge()\">\r\n      <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;\r\n      Delete\r\n    </button>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Name\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.name }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Charge Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.penalty ? 'Penalty' : 'Fees' }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.currency.displayLabel }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Payment due at\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.chargeTimeType.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Payment due as of\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.dueDate | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Calculation Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.chargeCalculationType.value }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Due\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amount }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Paid\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountPaid }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Waived\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountWaived }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Outstanding\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountOutstanding }}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/** Translation Imports */\r\nimport { extract } from '../core/i18n/i18n.service';\r\n\r\n/** Custom Components */\r\nimport { SavingsAccountViewComponent } from './savings-account-view/savings-account-view.component';\r\nimport { TransactionsTabComponent } from './savings-account-view/transactions-tab/transactions-tab.component';\r\nimport { SavingAccountActionsComponent } from './saving-account-actions/saving-account-actions.component';\r\nimport { ChargesTabComponent } from './savings-account-view/charges-tab/charges-tab.component';\r\nimport { StandingInstructionsTabComponent } from './savings-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { DatatableTabsComponent } from './savings-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { CreateSavingsAccountComponent } from './create-savings-account/create-savings-account.component';\r\nimport { EditSavingsAccountComponent } from './edit-savings-account/edit-savings-account.component';\r\nimport { ViewTransactionComponent } from './savings-account-view/transactions/view-transaction/view-transaction.component';\r\nimport { ViewChargeComponent } from './savings-account-view/view-charge/view-charge.component';\r\nimport { ViewRecieptComponent } from './savings-account-view/transactions/view-reciept/view-reciept.component';\r\nimport { ExportTransactionsComponent } from './savings-account-view/transactions-tab/export-transactions/export-transactions.component';\r\nimport { EditTransactionComponent } from './savings-account-view/transactions/edit-transaction/edit-transaction.component';\r\n\r\n/** Custom Resolvers */\r\nimport { SavingsAccountViewResolver } from './common-resolvers/savings-account-view.resolver';\r\nimport { SavingsDatatableResolver } from './common-resolvers/savings-datatable.resolver';\r\nimport { SavingsDatatablesResolver } from './common-resolvers/savings-datatables.resolver';\r\nimport { SavingsAccountTemplateResolver } from './common-resolvers/savings-account-template.resolver';\r\nimport { SavingsAccountAndTemplateResolver } from './common-resolvers/savings-account-and-template.resolver';\r\nimport { SavingsAccountTransactionResolver } from './common-resolvers/savings-account-transaction.resolver';\r\nimport { SavingsAccountChargeResolver } from './common-resolvers/savings-account-charge.resolver';\r\nimport { SavingsAccountActionsResolver } from './common-resolvers/savings-account-actions.resolver';\r\nimport { SavingsTransactionRecieptResolver } from './common-resolvers/savings-transaction-reciept.resolver';\r\nimport { SavingsAccountTransactionTemplateResolver } from './common-resolvers/savings-account-transaction-template.resolver';\r\n\r\n/** Savings Routes */\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: { title: extract('All Savings'), breadcrumb: 'Savings', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        data: { title: extract('Create Savings Account'), breadcrumb: 'Create Savings Account' },\r\n        component: CreateSavingsAccountComponent,\r\n        resolve: {\r\n          savingsAccountTemplate: SavingsAccountTemplateResolver\r\n        }\r\n      },\r\n      {\r\n        path: ':savingAccountId',\r\n        data: { title: extract('Saving Account View'), routeParamBreadcrumb: 'savingAccountId' },\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: SavingsAccountViewComponent,\r\n            resolve: {\r\n              savingsAccountData: SavingsAccountViewResolver,\r\n              savingsDatatables: SavingsDatatablesResolver\r\n            },\r\n            children: [\r\n              {\r\n                path: 'transactions',\r\n                data: { title: extract('Savings Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n                children: [\r\n                  {\r\n                    path: '',\r\n                    component: TransactionsTabComponent\r\n\r\n                  },\r\n                  {\r\n                    path: 'export',\r\n                    component: ExportTransactionsComponent\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                path: 'charges',\r\n                component: ChargesTabComponent,\r\n                data: { title: extract('Savings Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'standing-instructions',\r\n                component: StandingInstructionsTabComponent,\r\n                data: { title: extract('Savings Account SIH'), breadcrumb: 'Standing Instructions', routeParamBreadcrumb: false }\r\n              },\r\n              {\r\n                path: 'datatables',\r\n                children: [\r\n                  {\r\n                    path: ':datatableName',\r\n                    component: DatatableTabsComponent,\r\n                    data: { title: extract('View Data Table'), routeParamBreadcrumb: 'datatableName' },\r\n                    resolve: {\r\n                      savingsDatatable: SavingsDatatableResolver\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'edit',\r\n            data: { title: extract('Edit Savings Account'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n            component: EditSavingsAccountComponent,\r\n            resolve: {\r\n              savingsAccountAndTemplate: SavingsAccountAndTemplateResolver\r\n            }\r\n          },\r\n          {\r\n            path: 'transactions',\r\n            data: { title: extract('Savings Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: '../transactions', pathMatch: 'prefix'\r\n              },\r\n              {\r\n                path: 'account-transfers',\r\n                loadChildren: () => import('../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n              },\r\n              {\r\n                path: ':id',\r\n                data: { routeParamBreadcrumb: 'id' },\r\n                children: [\r\n                  {\r\n                    path: '',\r\n                    component: ViewTransactionComponent,\r\n                    resolve: {\r\n                      savingsAccountTransaction: SavingsAccountTransactionResolver\r\n                    }\r\n                  },\r\n                  {\r\n                    path: 'edit',\r\n                    component: EditTransactionComponent,\r\n                    data: { breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n                    resolve: {\r\n                      savingsAccountTransactionTemplate: SavingsAccountTransactionTemplateResolver\r\n                    }\r\n                  },\r\n                  {\r\n                    path: 'reciept',\r\n                    component: ViewRecieptComponent,\r\n                    data: { breadcrumb: 'Reciept', routeParamBreadcrumb: false },\r\n                    resolve: {\r\n                      savingsTransactionReciept: SavingsTransactionRecieptResolver\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'charges',\r\n            data: { title: extract('Savings Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false },\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: '../charges', pathMatch: 'prefix'\r\n              },\r\n              {\r\n                path: ':id',\r\n                data: { routeParamBreadcrumb: 'id' },\r\n                component: ViewChargeComponent,\r\n                resolve: {\r\n                  savingsAccountData: SavingsAccountViewResolver,\r\n                  savingsAccountCharge: SavingsAccountChargeResolver\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'actions/:name',\r\n            data: { title: extract('Savings Account Actions'), routeParamBreadcrumb: 'name' },\r\n            component: SavingAccountActionsComponent,\r\n            resolve: {\r\n              savingsAccountActionData: SavingsAccountActionsResolver\r\n            }\r\n          },\r\n          {\r\n            path: 'transfer-funds',\r\n            loadChildren: () => import('../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  declarations: [],\r\n  providers: [SavingsAccountViewResolver,\r\n              SavingsDatatablesResolver,\r\n              SavingsDatatableResolver,\r\n              SavingsAccountTemplateResolver,\r\n              SavingsAccountAndTemplateResolver,\r\n              SavingsAccountTransactionResolver,\r\n              SavingsAccountChargeResolver,\r\n              SavingsAccountActionsResolver,\r\n              SavingsTransactionRecieptResolver,\r\n              SavingsAccountTransactionTemplateResolver]\r\n})\r\nexport class SavingsRoutingModule {}\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Modules */\r\nimport { SavingsRoutingModule } from './savings-routing.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { DirectivesModule } from '../directives/directives.module';\r\n\r\n/** Custom Components */\r\nimport { SavingAccountActionsComponent } from './saving-account-actions/saving-account-actions.component';\r\nimport { SavingsAccountTransactionsComponent } from './saving-account-actions/savings-account-transactions/savings-account-transactions.component';\r\nimport { TransactionsTabComponent } from './savings-account-view/transactions-tab/transactions-tab.component';\r\nimport { SavingsAccountViewComponent } from './savings-account-view/savings-account-view.component';\r\nimport { ChargesTabComponent } from './savings-account-view/charges-tab/charges-tab.component';\r\nimport { StandingInstructionsTabComponent } from './savings-account-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { DatatableTabsComponent } from './savings-account-view/datatable-tabs/datatable-tabs.component';\r\nimport { MultiRowComponent } from './savings-account-view/datatable-tabs/multi-row/multi-row.component';\r\nimport { SingleRowComponent } from './savings-account-view/datatable-tabs/single-row/single-row.component';\r\nimport { CreateSavingsAccountComponent } from './create-savings-account/create-savings-account.component';\r\nimport { SavingsAccountDetailsStepComponent } from './savings-account-stepper/savings-account-details-step/savings-account-details-step.component';\r\nimport { SavingsAccountChargesStepComponent } from './savings-account-stepper/savings-account-charges-step/savings-account-charges-step.component';\r\nimport { SavingsAccountTermsStepComponent } from './savings-account-stepper/savings-account-terms-step/savings-account-terms-step.component';\r\nimport { SavingsAccountPreviewStepComponent } from './savings-account-stepper/savings-account-preview-step/savings-account-preview-step.component';\r\nimport { EditSavingsAccountComponent } from './edit-savings-account/edit-savings-account.component';\r\nimport { ApproveSavingsAccountComponent } from './saving-account-actions/approve-savings-account/approve-savings-account.component';\r\nimport { RejectSavingsAccountComponent } from './saving-account-actions/reject-savings-account/reject-savings-account.component';\r\nimport { ActivateSavingsAccountComponent } from './saving-account-actions/activate-savings-account/activate-savings-account.component';\r\nimport { UndoApprovalSavingsAccountComponent } from './saving-account-actions/undo-approval-savings-account/undo-approval-savings-account.component';\r\nimport { PostInterestAsOnSavingsAccountComponent } from './saving-account-actions/post-interest-as-on-savings-account/post-interest-as-on-savings-account.component';\r\nimport { SavingsAccountAssignStaffComponent } from './saving-account-actions/savings-account-assign-staff/savings-account-assign-staff.component';\r\nimport { SavingsAccountUnassignStaffComponent } from './saving-account-actions/savings-account-unassign-staff/savings-account-unassign-staff.component';\r\nimport { CalculateInterestDialogComponent } from './savings-account-view/custom-dialogs/calculate-interest-dialog/calculate-interest-dialog.component';\r\nimport { PostInterestDialogComponent } from './savings-account-view/custom-dialogs/post-interest-dialog/post-interest-dialog.component';\r\nimport { ViewTransactionComponent } from './savings-account-view/transactions/view-transaction/view-transaction.component';\r\nimport { UndoTransactionDialogComponent } from './savings-account-view/custom-dialogs/undo-transaction-dialog/undo-transaction-dialog.component';\r\nimport { ViewChargeComponent } from './savings-account-view/view-charge/view-charge.component';\r\nimport { WaiveChargeDialogComponent } from './savings-account-view/custom-dialogs/waive-charge-dialog/waive-charge-dialog.component';\r\nimport { InactivateChargeDialogComponent } from './savings-account-view/custom-dialogs/inactivate-charge-dialog/inactivate-charge-dialog.component';\r\nimport { WithdrawByClientSavingsAccountComponent } from './saving-account-actions/withdraw-by-client-savings-account/withdraw-by-client-savings-account.component';\r\nimport { AddChargeSavingsAccountComponent } from './saving-account-actions/add-charge-savings-account/add-charge-savings-account.component';\r\nimport { CloseSavingsAccountComponent } from './saving-account-actions/close-savings-account/close-savings-account.component';\r\nimport { ToggleWithholdTaxDialogComponent } from './savings-account-view/custom-dialogs/toggle-withhold-tax-dialog/toggle-withhold-tax-dialog.component';\r\nimport { ViewRecieptComponent } from './savings-account-view/transactions/view-reciept/view-reciept.component';\r\nimport { ExportTransactionsComponent } from './savings-account-view/transactions-tab/export-transactions/export-transactions.component';\r\nimport { EditTransactionComponent } from './savings-account-view/transactions/edit-transaction/edit-transaction.component';\r\nimport { ApplyAnnualFeesSavingsAccountComponent } from './saving-account-actions/apply-annual-fees-savings-account/apply-annual-fees-savings-account.component';\r\n\r\n\r\n/**\r\n * Savings Module\r\n *\r\n * All components related to Savings functions should be declared here.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    PipesModule,\r\n    DirectivesModule,\r\n    SavingsRoutingModule\r\n  ],\r\n  declarations: [\r\n    SavingAccountActionsComponent,\r\n    SavingsAccountTransactionsComponent,\r\n    TransactionsTabComponent,\r\n    SavingsAccountViewComponent,\r\n    ChargesTabComponent,\r\n    StandingInstructionsTabComponent,\r\n    DatatableTabsComponent,\r\n    MultiRowComponent,\r\n    SingleRowComponent,\r\n    CreateSavingsAccountComponent,\r\n    SavingsAccountDetailsStepComponent,\r\n    SavingsAccountChargesStepComponent,\r\n    SavingsAccountTermsStepComponent,\r\n    SavingsAccountPreviewStepComponent,\r\n    EditSavingsAccountComponent,\r\n    ApproveSavingsAccountComponent,\r\n    RejectSavingsAccountComponent,\r\n    ActivateSavingsAccountComponent,\r\n    UndoApprovalSavingsAccountComponent,\r\n    PostInterestAsOnSavingsAccountComponent,\r\n    SavingsAccountAssignStaffComponent,\r\n    SavingsAccountUnassignStaffComponent,\r\n    CalculateInterestDialogComponent,\r\n    PostInterestDialogComponent,\r\n    ViewTransactionComponent,\r\n    UndoTransactionDialogComponent,\r\n    ViewChargeComponent,\r\n    WaiveChargeDialogComponent,\r\n    InactivateChargeDialogComponent,\r\n    WithdrawByClientSavingsAccountComponent,\r\n    AddChargeSavingsAccountComponent,\r\n    CloseSavingsAccountComponent,\r\n    ToggleWithholdTaxDialogComponent,\r\n    ViewRecieptComponent,\r\n    ExportTransactionsComponent,\r\n    EditTransactionComponent,\r\n    ApplyAnnualFeesSavingsAccountComponent\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class SavingsModule {}\r\n"],"sourceRoot":"webpack:///"}