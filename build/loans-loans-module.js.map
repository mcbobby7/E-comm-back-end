{"version":3,"sources":["./src/app/account-transfers/account-transfers.service.ts","./src/app/loans/common-resolvers/loan-action-button.resolver.ts","./src/app/loans/common-resolvers/loan-datatable.resolver.ts","./src/app/loans/common-resolvers/loan-datatables.resolver.ts","./src/app/loans/common-resolvers/loan-details.resolver.ts","./src/app/loans/common-resolvers/loan-documents.resolver.ts","./src/app/loans/common-resolvers/loan-notes.resolver.ts","./src/app/loans/common-resolvers/loans-account-and-template.resolver.ts","./src/app/loans/common-resolvers/loans-account-charge.resolver.ts","./src/app/loans/common-resolvers/loans-account-template.resolver.ts","./src/app/loans/common-resolvers/loans-account-transaction-template.resolver.ts","./src/app/loans/common-resolvers/loans-account-transaction.resolver.ts","./src/app/loans/common-resolvers/loans-transaction-reciept.resolver.ts","./src/app/loans/create-loans-account/create-loans-account.component.ts","./src/app/loans/create-loans-account/create-loans-account.component.html","./src/app/loans/custom-dialog/loan-account-load-documents-dialog/loan-account-load-documents-dialog.component.ts","./src/app/loans/custom-dialog/loan-account-load-documents-dialog/loan-account-load-documents-dialog.component.html","./src/app/loans/custom-dialog/loans-account-add-collateral-dialog/loans-account-add-collateral-dialog.component.ts","./src/app/loans/custom-dialog/loans-account-add-collateral-dialog/loans-account-add-collateral-dialog.component.html","./src/app/loans/custom-dialog/loans-account-view-guarantor-details-dialog/loans-account-view-guarantor-details-dialog.component.ts","./src/app/loans/custom-dialog/loans-account-view-guarantor-details-dialog/loans-account-view-guarantor-details-dialog.component.html","./src/app/loans/edit-loans-account/edit-loans-account.component.ts","./src/app/loans/edit-loans-account/edit-loans-account.component.html","./src/app/loans/loans-account-stepper/loans-account-charges-step/loans-account-charges-step.component.ts","./src/app/loans/loans-account-stepper/loans-account-charges-step/loans-account-charges-step.component.html","./src/app/loans/loans-account-stepper/loans-account-details-step/loans-account-details-step.component.ts","./src/app/loans/loans-account-stepper/loans-account-details-step/loans-account-details-step.component.html","./src/app/loans/loans-account-stepper/loans-account-preview-step/loans-account-preview-step.component.ts","./src/app/loans/loans-account-stepper/loans-account-preview-step/loans-account-preview-step.component.html","./src/app/loans/loans-account-stepper/loans-account-terms-step/loans-account-terms-step.component.ts","./src/app/loans/loans-account-stepper/loans-account-terms-step/loans-account-terms-step.component.html","./src/app/loans/loans-routing.module.ts","./src/app/loans/loans-view/account-details/account-details.component.ts","./src/app/loans/loans-view/account-details/account-details.component.html","./src/app/loans/loans-view/charges-tab/charges-tab.component.ts","./src/app/loans/loans-view/charges-tab/charges-tab.component.html","./src/app/loans/loans-view/datatable-tab/datatable-tab.component.ts","./src/app/loans/loans-view/datatable-tab/datatable-tab.component.html","./src/app/loans/loans-view/datatable-tab/multi-row/multi-row.component.ts","./src/app/loans/loans-view/datatable-tab/multi-row/multi-row.component.html","./src/app/loans/loans-view/datatable-tab/single-row/single-row.component.ts","./src/app/loans/loans-view/datatable-tab/single-row/single-row.component.html","./src/app/loans/loans-view/floating-interest-rates/floating-interest-rates.component.ts","./src/app/loans/loans-view/floating-interest-rates/floating-interest-rates.component.html","./src/app/loans/loans-view/general-tab/general-tab.component.ts","./src/app/loans/loans-view/general-tab/general-tab.component.html","./src/app/loans/loans-view/loan-account-actions/add-collateral/add-collateral.component.ts","./src/app/loans/loans-view/loan-account-actions/add-collateral/add-collateral.component.html","./src/app/loans/loans-view/loan-account-actions/add-loan-charge/add-loan-charge.component.ts","./src/app/loans/loans-view/loan-account-actions/add-loan-charge/add-loan-charge.component.html","./src/app/loans/loans-view/loan-account-actions/approve-loan/approve-loan.component.ts","./src/app/loans/loans-view/loan-account-actions/approve-loan/approve-loan.component.html","./src/app/loans/loans-view/loan-account-actions/assign-loan-officer/assign-loan-officer.component.ts","./src/app/loans/loans-view/loan-account-actions/assign-loan-officer/assign-loan-officer.component.html","./src/app/loans/loans-view/loan-account-actions/close-as-rescheduled/close-as-rescheduled.component.ts","./src/app/loans/loans-view/loan-account-actions/close-as-rescheduled/close-as-rescheduled.component.html","./src/app/loans/loans-view/loan-account-actions/create-guarantor/create-guarantor.component.ts","./src/app/loans/loans-view/loan-account-actions/create-guarantor/create-guarantor.component.html","./src/app/loans/loans-view/loan-account-actions/disburse-loan-account/disburse-loan-account.component.ts","./src/app/loans/loans-view/loan-account-actions/disburse-loan-account/disburse-loan-account.component.html","./src/app/loans/loans-view/loan-account-actions/disburse/disburse.component.ts","./src/app/loans/loans-view/loan-account-actions/disburse/disburse.component.html","./src/app/loans/loans-view/loan-account-actions/foreclosure/foreclosure.component.ts","./src/app/loans/loans-view/loan-account-actions/foreclosure/foreclosure.component.html","./src/app/loans/loans-view/loan-account-actions/loan-account-actions.component.ts","./src/app/loans/loans-view/loan-account-actions/loan-account-actions.component.html","./src/app/loans/loans-view/loan-account-actions/loan-reschedule/loan-reschedule.component.ts","./src/app/loans/loans-view/loan-account-actions/loan-reschedule/loan-reschedule.component.html","./src/app/loans/loans-view/loan-account-actions/loan-screen-reports/loan-screen-reports.component.ts","./src/app/loans/loans-view/loan-account-actions/loan-screen-reports/loan-screen-reports.component.html","./src/app/loans/loans-view/loan-account-actions/loans-account-close/loans-account-close.component.ts","./src/app/loans/loans-view/loan-account-actions/loans-account-close/loans-account-close.component.html","./src/app/loans/loans-view/loan-account-actions/make-repayment/make-repayment.component.ts","./src/app/loans/loans-view/loan-account-actions/make-repayment/make-repayment.component.html","./src/app/loans/loans-view/loan-account-actions/prepay-loan/prepay-loan.component.ts","./src/app/loans/loans-view/loan-account-actions/prepay-loan/prepay-loan.component.html","./src/app/loans/loans-view/loan-account-actions/recovery-repayment/recovery-repayment.component.ts","./src/app/loans/loans-view/loan-account-actions/recovery-repayment/recovery-repayment.component.html","./src/app/loans/loans-view/loan-account-actions/reject-loan/reject-loan.component.ts","./src/app/loans/loans-view/loan-account-actions/reject-loan/reject-loan.component.html","./src/app/loans/loans-view/loan-account-actions/undo-approval/undo-approval.component.ts","./src/app/loans/loans-view/loan-account-actions/undo-approval/undo-approval.component.html","./src/app/loans/loans-view/loan-account-actions/undo-disbursal/undo-disbursal.component.ts","./src/app/loans/loans-view/loan-account-actions/undo-disbursal/undo-disbursal.component.html","./src/app/loans/loans-view/loan-account-actions/view-guarantors/view-guarantors.component.ts","./src/app/loans/loans-view/loan-account-actions/view-guarantors/view-guarantors.component.html","./src/app/loans/loans-view/loan-account-actions/waive-interest/waive-interest.component.ts","./src/app/loans/loans-view/loan-account-actions/waive-interest/waive-interest.component.html","./src/app/loans/loans-view/loan-account-actions/withdrawn-by-client/withdrawn-by-client.component.ts","./src/app/loans/loans-view/loan-account-actions/withdrawn-by-client/withdrawn-by-client.component.html","./src/app/loans/loans-view/loan-account-actions/write-off-page/write-off-page.component.ts","./src/app/loans/loans-view/loan-account-actions/write-off-page/write-off-page.component.html","./src/app/loans/loans-view/loan-accounts-button-config.ts","./src/app/loans/loans-view/loan-collateral-tab/loan-collateral-tab.component.ts","./src/app/loans/loans-view/loan-collateral-tab/loan-collateral-tab.component.html","./src/app/loans/loans-view/loan-documents-tab/loan-documents-tab.component.ts","./src/app/loans/loans-view/loan-documents-tab/loan-documents-tab.component.html","./src/app/loans/loans-view/loan-tranche-details/loan-tranche-details.component.ts","./src/app/loans/loans-view/loan-tranche-details/loan-tranche-details.component.html","./src/app/loans/loans-view/loans-view.component.ts","./src/app/loans/loans-view/loans-view.component.html","./src/app/loans/loans-view/notes-tab/notes-tab.component.ts","./src/app/loans/loans-view/notes-tab/notes-tab.component.html","./src/app/loans/loans-view/original-schedule-tab/original-schedule-tab.component.ts","./src/app/loans/loans-view/original-schedule-tab/original-schedule-tab.component.html","./src/app/loans/loans-view/overdue-charges-tab/overdue-charges-tab.component.ts","./src/app/loans/loans-view/overdue-charges-tab/overdue-charges-tab.component.html","./src/app/loans/loans-view/repayment-schedule-tab/repayment-schedule-tab.component.ts","./src/app/loans/loans-view/repayment-schedule-tab/repayment-schedule-tab.component.html","./src/app/loans/loans-view/standing-instructions-tab/standing-instructions-tab.component.ts","./src/app/loans/loans-view/standing-instructions-tab/standing-instructions-tab.component.html","./src/app/loans/loans-view/transactions-tab/transactions-tab.component.ts","./src/app/loans/loans-view/transactions-tab/transactions-tab.component.html","./src/app/loans/loans-view/transactions/edit-transaction/edit-transaction.component.ts","./src/app/loans/loans-view/transactions/edit-transaction/edit-transaction.component.html","./src/app/loans/loans-view/transactions/export-transactions/export-transactions.component.ts","./src/app/loans/loans-view/transactions/export-transactions/export-transactions.component.html","./src/app/loans/loans-view/transactions/view-reciept/view-reciept.component.ts","./src/app/loans/loans-view/transactions/view-reciept/view-reciept.component.html","./src/app/loans/loans-view/transactions/view-transaction/view-transaction.component.ts","./src/app/loans/loans-view/transactions/view-transaction/view-transaction.component.html","./src/app/loans/loans-view/view-charge/view-charge.component.ts","./src/app/loans/loans-view/view-charge/view-charge.component.html","./src/app/loans/loans.module.ts","./src/app/loans/loans.service.ts"],"names":[],"mappings":"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","file":"loans-loans-module.js","sourcesContent":["/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Account Transfers Service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountTransfersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * @params standingInstructionsId\r\n   * Returns the details of a particular Standing Instruction\r\n   */\r\n  getStandingInstructionsData(standingInstructionsId: any): Observable<any> {\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`);\r\n  }\r\n\r\n  getStandingInstructionsDataAndTemplate(standingInstructionsId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', 'template');\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`, { params: httpParams });\r\n  }\r\n\r\n  updateStandingInstructionsData(standinginstructionsId: any, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', 'update');\r\n    return this.http.put(`/standinginstructions/${standinginstructionsId}`, data, { params: httpParams });\r\n  }\r\n\r\n  getStandingInstructionsTemplate(clientId: any, officeId: any, accountTypeId: string, formValue?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('fromAccountType', accountTypeId)\r\n                                       .set('fromClientId', clientId)\r\n                                       .set('fromOfficeId', officeId);\r\n    if (formValue) {\r\n      const propNames = Object.getOwnPropertyNames(formValue);\r\n      for (let i = 0; i < propNames.length; i++) {\r\n        const propName = propNames[i];\r\n        httpParams = httpParams.set(propName, formValue[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/standinginstructions/template`, { params: httpParams });\r\n  }\r\n\r\n  createStandingInstructions(data: Object): Observable<any> {\r\n    return this.http.post(`/standinginstructions`, data);\r\n  }\r\n\r\n  newAccountTranferResource(id: any, accountTypeId: any, formValue?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('fromAccountId', id)\r\n      .set('fromAccountType', accountTypeId);\r\n    if (formValue) {\r\n      const propNames = Object.getOwnPropertyNames(formValue);\r\n      for (let i = 0; i < propNames.length; i++) {\r\n        const propName = propNames[i];\r\n        httpParams = httpParams.set(propName, formValue[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/accounttransfers/template`, { params: httpParams });\r\n\r\n  }\r\n\r\n  createAccountTransfer(data: any): Observable<any> {\r\n    return this.http.post(`/accounttransfers`, data);\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(searchData: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    const propNames = Object.getOwnPropertyNames(searchData);\r\n    for (let i = 0; i < propNames.length; i++) {\r\n      const propName = propNames[i];\r\n      if (!(searchData[propName] === '' || searchData[propName] === undefined || searchData[propName] === null)) {\r\n        httpParams = httpParams.set(propName, searchData[propName]);\r\n      }\r\n    }\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n  deleteStandingInstrucions(id: any) {\r\n    const httpParams = new HttpParams().set('command', 'delete');\r\n    return this.http.delete(`/standinginstructions/${id}`, { params: httpParams });\r\n  }\r\n\r\n\r\n  getStandingInstructionsTransactions(standingInstructionsId: any, dateFormat: any, locale: any) {\r\n    const httpParams = new HttpParams().set('associations', 'transactions')\r\n                                        .set('dateFormat', dateFormat)\r\n                                        .set('limit', '14')\r\n                                        .set('locale', locale)\r\n                                        .set('offset', '0');\r\n    return this.http.get(`/standinginstructions/${standingInstructionsId}`, { params: httpParams });\r\n  }\r\n\r\n  getViewAccountTransferDetails(transferId: any): Observable<any> {\r\n    return this.http.get(`/accounttransfers/${transferId}`);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans notes data resolver.\r\n */\r\n@Injectable()\r\nexport class LoanActionButtonResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans Notes Data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.parent.paramMap.get('loanId');\r\n        const loanActionButton = route.paramMap.get('action');\r\n        if (loanActionButton === 'Assign Loan Officer' || loanActionButton === 'Change Loan Officer') {\r\n            return this.loansService.getLoanTemplate(loanId);\r\n        // } else if (loanActionButton === 'make-repayment') {\r\n        //     return this.loansService.getLoanActionTemplate(loanId, 'repayment');\r\n        } else if (loanActionButton === 'Waive Interest') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'waiveinterest');\r\n        } else if (loanActionButton === 'Write Off') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'writeoff');\r\n        } else if (loanActionButton === 'Close') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'close');\r\n        } else if (loanActionButton === 'Close (as Rescheduled)') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'close-rescheduled');\r\n        } else if (loanActionButton === 'Reschedule') {\r\n            return this.loansService.rescheduleLoanTemplate();\r\n        } else if (loanActionButton === 'Prepay Loan') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'prepayLoan');\r\n        } else if (loanActionButton === 'Add Collateral') {\r\n            return this.loansService.getLoanCollateralTemplate(loanId);\r\n        } else if (loanActionButton === 'Disburse to Savings') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'disburseToSavings');\r\n        } else if (loanActionButton === 'Recovery Payment') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'recoverypayment');\r\n        } else if (loanActionButton === 'View Guarantors') {\r\n            return this.loansService.getLoanAccountResource(loanId, 'guarantors');\r\n        } else if (loanActionButton === 'Create Guarantor') {\r\n            return this.loansService.getGuarantorTemplate(loanId);\r\n        } else if (loanActionButton === 'Disburse') {\r\n            return this.loansService.getLoanActionTemplate(loanId, 'disburse');\r\n        } else if (loanActionButton === 'Loan Screen Reports') {\r\n            return this.loansService.getLoanScreenReportsData();\r\n        } else if (loanActionButton === 'Approve') {\r\n            return this.loansService.getLoanApprovalTemplate(loanId);\r\n        } else if (loanActionButton === 'Add Loan Charge') {\r\n            return this.loansService.getLoanChargeTemplateResource(loanId);\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans notes data resolver.\r\n */\r\n@Injectable()\r\nexport class LoanDatatableResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans Notes Data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.parent.parent.paramMap.get('loanId');\r\n        const datatableName = route.paramMap.get('datatableName');\r\n        return this.loansService.getLoanDatatable(loanId, datatableName);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * loan datatables resolver.\r\n */\r\n@Injectable()\r\nexport class LoanDatatablesResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {loansService} loansService loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the loan datatables.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(): Observable<any> {\r\n        return this.loansService.getLoanDataTables();\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Clients data resolver.\r\n */\r\n@Injectable()\r\nexport class LoanDetailsResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans with Association data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.paramMap.get('loanId') || route.parent.paramMap.get('loanId') || route.parent.parent.paramMap.get('loanId');\r\n        return this.loansService.getLoanAccountAssociationDetails(loanId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans notes resolver.\r\n */\r\n@Injectable()\r\nexport class LoanDocumentsResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.parent.paramMap.get('loanId');\r\n        return this.loansService.getLoanDocuments(loanId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans notes resolver.\r\n */\r\n@Injectable()\r\nexport class LoanNotesResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.parent.paramMap.get('loanId');\r\n        return this.loansService.getLoanNotes(loanId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loan accounts template data resolver.\r\n */\r\n@Injectable()\r\nexport class LoansAccountAndTemplateResolver implements Resolve<Object> {\r\n    /**\r\n     * @param {ProductsService} productsService Products service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the loan account template data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanId = route.parent.paramMap.get('loanId');\r\n        return this.loansService.getLoansAccountAndTemplateResource(loanId);\r\n    }\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans Account Charge data resolver.\r\n */\r\n@Injectable()\r\nexport class LoansAccountChargeResolver implements Resolve<Object> {\r\n\r\n    /**\r\n     * @param {LoansService} LoansService Loans service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the Loans Account Charge data.\r\n     * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const loanAccountId = route.parent.parent.paramMap.get('loanId');\r\n        const chargeId = route.paramMap.get('id');\r\n        return this.loansService.getLoansAccountCharge(loanAccountId, chargeId);\r\n    }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loan accounts template data resolver.\r\n */\r\n@Injectable()\r\nexport class LoansAccountTemplateResolver implements Resolve<Object> {\r\n    /**\r\n     * @param {ProductsService} productsService Products service.\r\n     */\r\n    constructor(private loansService: LoansService) { }\r\n\r\n    /**\r\n     * Returns the loan account template data.\r\n     * @returns {Observable<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n        const clientId = route.parent.parent.paramMap.get('clientId');\r\n        return this.loansService.getLoansAccountTemplateResource(clientId);\r\n    }\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans Account Transaction Template data resolver.\r\n */\r\n@Injectable()\r\nexport class LoansAccountTransactionTemplateResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {LoansService} LoansService Loans service.\r\n   */\r\n  constructor(private loansService: LoansService) { }\r\n\r\n  /**\r\n   * Returns the Loans Account Transaction Template data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const loanAccountId = route.parent.parent.parent.paramMap.get('loanId');\r\n    const transactionId = route.paramMap.get('id');\r\n    return this.loansService.getLoansAccountTransactionTemplate(loanAccountId, transactionId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/**\r\n * Loans Account Transaction data resolver.\r\n */\r\n@Injectable()\r\nexport class LoansAccountTransactionResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {LoansService} LoansService Loans service.\r\n   */\r\n  constructor(private loansService: LoansService) { }\r\n\r\n  /**\r\n   * Returns the Loans Account Transaction data.\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const loanAccountId = route.parent.parent.parent.paramMap.get('loanId');\r\n    const transactionId = route.paramMap.get('id');\r\n    return this.loansService.getLoansAccountTransaction(loanAccountId, transactionId);\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Custom Services */\r\nimport { ReportsService } from 'app/reports/reports.service';\r\n\r\n/**\r\n * Loans Transaction Reciept resolver.\r\n */\r\n@Injectable()\r\nexport class LoansTransactionRecieptResolver implements Resolve<Object> {\r\n\r\n  /**\r\n   * @param {ReportsService} reportsService Reports service.\r\n   */\r\n  constructor(private reportsService: ReportsService) { }\r\n\r\n  /**\r\n   * Returns the Loans Transaction Reciept\r\n   * @param {ActivatedRouteSnapshot} route Route Snapshot\r\n   * @returns {Observable<any>}\r\n   */\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const transactionId = route.paramMap.get('id');\r\n    const data = {\r\n      'output-type':\t'PDF',\r\n      R_transactionId:\ttransactionId\r\n    };\r\n    return this.reportsService.getPentahoRunReportData('Loan Transaction Receipt', data, 'default', 'en', 'dd MMMM yyyy');\r\n  }\r\n\r\n}\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Step Components */\r\nimport { LoansAccountDetailsStepComponent } from '../loans-account-stepper/loans-account-details-step/loans-account-details-step.component';\r\nimport { LoansAccountTermsStepComponent } from '../loans-account-stepper/loans-account-terms-step/loans-account-terms-step.component';\r\nimport { LoansAccountChargesStepComponent } from '../loans-account-stepper/loans-account-charges-step/loans-account-charges-step.component';\r\n\r\n/**\r\n * Create loans account\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-loans-account',\r\n  templateUrl: './create-loans-account.component.html',\r\n  styleUrls: ['./create-loans-account.component.scss']\r\n})\r\nexport class CreateLoansAccountComponent implements OnInit {\r\n\r\n  /** Imports all the step component */\r\n  @ViewChild(LoansAccountDetailsStepComponent, { static: true }) loansAccountDetailsStep: LoansAccountDetailsStepComponent;\r\n  @ViewChild(LoansAccountTermsStepComponent, { static: true }) loansAccountTermsStep: LoansAccountTermsStepComponent;\r\n  @ViewChild(LoansAccountChargesStepComponent, { static: true }) loansAccountChargesStep: LoansAccountChargesStepComponent;\r\n\r\n  /** Loans Account Template */\r\n  loansAccountTemplate: any;\r\n  /** Loans Account Product Template */\r\n  loansAccountProductTemplate: any;\r\n  /** Collateral Options */\r\n  collateralOptions: any;\r\n\r\n  /**\r\n   * Sets loans account create form.\r\n   * @param {route} ActivatedRoute Activated Route.\r\n   * @param {router} Router Router.\r\n   * @param {datePipe} DatePipe Date Pipe\r\n   * @param {loansService} LoansService Loans Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private loansService: LoansService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { loansAccountTemplate: any }) => {\r\n      this.loansAccountTemplate = data.loansAccountTemplate;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Sets loans account product template and collateral template\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.loansAccountProductTemplate = $event;\r\n    this.loansService.getLoansCollateralTemplateResource(this.loansAccountProductTemplate.loanProductId).subscribe((response: any) => {\r\n      this.collateralOptions = response.loanCollateralOptions;\r\n    });\r\n  }\r\n\r\n  /** Get Loans Account Details Form Data */\r\n  get loansAccountDetailsForm() {\r\n    return this.loansAccountDetailsStep.loansAccountDetailsForm;\r\n  }\r\n\r\n  /** Get Loans Account Terms Form Data */\r\n  get loansAccountTermsForm() {\r\n    return this.loansAccountTermsStep.loansAccountTermsForm;\r\n  }\r\n\r\n  /** Checks wheter all the forms in different steps are valid or not */\r\n  get loansAccountFormValid() {\r\n    return (\r\n      this.loansAccountDetailsForm.valid &&\r\n      this.loansAccountTermsForm.valid\r\n    );\r\n  }\r\n\r\n  /** Retrieves Data of all forms except Currency to submit the data */\r\n  get loansAccount() {\r\n    return {\r\n      ...this.loansAccountDetailsStep.loansAccountDetails,\r\n      ...this.loansAccountTermsStep.loansAccountTerms,\r\n      ...this.loansAccountChargesStep.loansAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits Data to create loan account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const loanType = 'individual';\r\n    const loansAccountData = {\r\n      ...this.loansAccount,\r\n      clientId: this.loansAccountTemplate.clientId,\r\n      charges: this.loansAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n      })),\r\n      collateral: this.loansAccount.collateral.map((collateralEle: any) => ({\r\n        type: collateralEle.type,\r\n        value: collateralEle.value,\r\n        description: collateralEle.description\r\n      })),\r\n      interestChargedFromDate: this.datePipe.transform(this.loansAccount.interestChargedFromDate, dateFormat),\r\n      repaymentsStartingFromDate: this.datePipe.transform(this.loansAccount.repaymentsStartingFromDate, dateFormat),\r\n      submittedOnDate: this.datePipe.transform(this.loansAccount.submittedOnDate, dateFormat),\r\n      expectedDisbursementDate: this.datePipe.transform(this.loansAccount.expectedDisbursementDate, dateFormat),\r\n      dateFormat,\r\n      locale,\r\n      loanType\r\n    };\r\n\r\n    if (loansAccountData.syncRepaymentsWithMeeting) {\r\n      loansAccountData.calendarId = this.loansAccountProductTemplate.calendarOptions[0].id;\r\n      delete loansAccountData.syncRepaymentsWithMeeting;\r\n    }\r\n\r\n    if (loansAccountData.recalculationRestFrequencyDate) {\r\n      loansAccountData.recalculationRestFrequencyDate = this.datePipe.transform(this.loansAccount.recalculationRestFrequencyDate, dateFormat);\r\n    }\r\n\r\n    if (loansAccountData.recalculationCompoundingFrequencyDate) {\r\n      loansAccountData.recalculationCompoundingFrequencyDate = this.datePipe.transform(this.loansAccount.recalculationCompoundingFrequencyDate, dateFormat);\r\n    }\r\n\r\n    if (loansAccountData.interestCalculationPeriodType === 0) {\r\n      loansAccountData.allowPartialPeriodInterestCalcualtion = false;\r\n    }\r\n    if (!(loansAccountData.isFloatingInterestRate === false)) {\r\n      delete loansAccountData.isFloatingInterestRate;\r\n    }\r\n\r\n    this.loansService.createLoansAccount(loansAccountData).subscribe((response: any) => {\r\n      this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #loansAccountStepper>\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"loansAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-loans-account-details-step [loansAccountTemplate]=\"loansAccountTemplate\"\r\n        (loansAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-loans-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"loansAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-loans-account-terms-step [loansAccountProductTemplate]=\"loansAccountProductTemplate\"\r\n      [loansAccountTemplate] = \"loansAccountTemplate\">\r\n      </mifosx-loans-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-loans-account-charges-step [loansAccountProductTemplate]=\"loansAccountProductTemplate\"\r\n        [loansAccountTemplate]=\"loansAccountTemplate\" [collateralOptions]=\"collateralOptions\"\r\n        [loansAccountFormValid]=\"loansAccountFormValid\">\r\n      </mifosx-loans-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"loansAccountFormValid\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-loans-account-preview-step [loansAccountTemplate]=\"loansAccountTemplate\"\r\n        [loansAccountProductTemplate]=\"loansAccountProductTemplate\" [loansAccount]=\"loansAccount\" (submit)=\"submit()\">\r\n      </mifosx-loans-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mifosx-loan-account-load-documents-dialog',\r\n  templateUrl: './loan-account-load-documents-dialog.component.html',\r\n  styleUrls: ['./loan-account-load-documents-dialog.component.scss']\r\n})\r\nexport class LoanAccountLoadDocumentsDialogComponent implements OnInit {\r\n\r\n  /** Upload Document form. */\r\n  uploadDocumentForm: FormGroup;\r\n\r\n  /**\r\n   * @param {MatDialogRef} dialogRef Dialog reference element\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {any} data Dialog Data\r\n   */\r\n  constructor(public dialogRef: MatDialogRef<LoanAccountLoadDocumentsDialogComponent>,\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createUploadDocumentForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the upload Document form.\r\n   */\r\n  createUploadDocumentForm() {\r\n    this.uploadDocumentForm = this.formBuilder.group({\r\n      'name': ['', Validators.required],\r\n      'description': [''],\r\n      'file': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets file form control value.\r\n   * @param {any} $event file change event.\r\n   */\r\n  onFileSelect($event: any) {\r\n    if ($event.target.files.length > 0) {\r\n      const file = $event.target.files[0];\r\n      this.uploadDocumentForm.get('file').setValue(file);\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Load Loan Document</h1>\r\n\r\n<div>\r\n  <form [formGroup]=\"uploadDocumentForm\" fxLayout=\"column\">\r\n\r\n    <mat-form-field fxFlex>\r\n      <mat-label>File Name</mat-label>\r\n      <input formControlName=\"name\" required matInput />\r\n      <mat-error *ngIf=\"uploadDocumentForm.controls.name.hasError('required')\">\r\n        File Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex>\r\n      <mat-label>Description</mat-label>\r\n      <input formControlName=\"description\" matInput />\r\n    </mat-form-field>\r\n\r\n    <mifosx-file-upload flex=\"60%\" (change)=\"onFileSelect($event)\"></mifosx-file-upload>\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-raised-button mat-dialog-close>Cancel</button>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!uploadDocumentForm.valid\" *mifosxHasPermission=\"'CREATE_DOCUMENT'\"\r\n        [mat-dialog-close]=\"{data: {name: uploadDocumentForm.value.name, description: uploadDocumentForm.value.description, file: uploadDocumentForm.value.file} }\">Confirm</button>\r\n    </mat-dialog-actions>\r\n\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mifosx-loans-account-add-collateral-dialog',\r\n  templateUrl: './loans-account-add-collateral-dialog.component.html',\r\n  styleUrls: ['./loans-account-add-collateral-dialog.component.scss']\r\n})\r\nexport class LoansAccountAddCollateralDialogComponent implements OnInit {\r\n\r\n  layout: {\r\n    addButtonText?: string\r\n  } = {\r\n      addButtonText: 'Add'\r\n    };\r\n\r\n  addCollateralForm: FormGroup;\r\n  collateralTypeData: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoansAccountAddCollateralDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder) {\r\n    this.createAddCollateralForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.updateSize('400px');\r\n    this.collateralTypeData = this.data.collateralTypeOptions;\r\n  }\r\n\r\n  createAddCollateralForm() {\r\n    this.addCollateralForm = this.formBuilder.group({\r\n      'type': ['', Validators.required],\r\n      'value': ['', Validators.required],\r\n      'description': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Add Loan Collateral</h1>\r\n\r\n<div mat-dialog-content [formGroup]=\"addCollateralForm\" fxLayout=\"column\">\r\n\r\n  <mat-form-field>\r\n    <mat-label>Collateral Type</mat-label>\r\n    <mat-select formControlName=\"type\" required>\r\n      <mat-option *ngFor=\"let collateralType of collateralTypeData\" [value]=\"collateralType.id\">\r\n        {{ collateralType.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error>\r\n      Collateral Type is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Value</mat-label>\r\n    <input type=\"number\" matInput formControlName=\"value\" required>\r\n    <mat-error>\r\n      Value is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Description</mat-label>\r\n    <input type=\"text\" matInput formControlName=\"description\" required>\r\n    <mat-error>\r\n      Description is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n</div>\r\n\r\n<mat-dialog-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button mat-dialog-close> Cancel </button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"{ data: addCollateralForm }\"\r\n    [disabled]=\"!addCollateralForm.valid || addCollateralForm.pristine\">{{ layout.addButtonText }}</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'mifosx-loans-account-view-guarantor-details-dialog',\r\n  templateUrl: './loans-account-view-guarantor-details-dialog.component.html',\r\n  styleUrls: ['./loans-account-view-guarantor-details-dialog.component.scss']\r\n})\r\nexport class LoansAccountViewGuarantorDetailsDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoansAccountViewGuarantorDetailsDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.updateSize('400px');\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Guarantor Detail</h1>\r\n\r\n<div mat-dialog-content fxLayout=\"column\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"50%\">First Name:</span>\r\n      <span fxFlex=\"50%\">{{ data.guarantorData.firstname }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"50%\">Last Name:</span>\r\n      <span fxFlex=\"50%\">{{ data.guarantorData.lastname }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"50%\">Relationship:</span>\r\n      <span fxFlex=\"50%\">{{ data.guarantorData.clientRelationshipType.name }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"50%\">Guarantor Type:</span>\r\n      <span fxFlex=\"50%\">{{ data.guarantorData.guarantorType.value }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"50%\">Status:</span>\r\n      <span fxFlex=\"50%\">\r\n        <span *ngIf=\"data.guarantorData.status\">\r\n          Active\r\n        </span>\r\n        <span *ngIf=\"!data.guarantorData.status\">\r\n          Deleted\r\n        </span></span>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<mat-dialog-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button mat-dialog-close> Cancel </button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport { LoansService } from '../loans.service';\r\nimport { LoansAccountDetailsStepComponent } from '../loans-account-stepper/loans-account-details-step/loans-account-details-step.component';\r\nimport { LoansAccountTermsStepComponent } from '../loans-account-stepper/loans-account-terms-step/loans-account-terms-step.component';\r\nimport { LoansAccountChargesStepComponent } from '../loans-account-stepper/loans-account-charges-step/loans-account-charges-step.component';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Loans\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-loans-account',\r\n  templateUrl: './edit-loans-account.component.html',\r\n  styleUrls: ['./edit-loans-account.component.scss']\r\n})\r\nexport class EditLoansAccountComponent implements OnInit {\r\n\r\n  @ViewChild(LoansAccountDetailsStepComponent, { static: true }) loansAccountDetailsStep: LoansAccountDetailsStepComponent;\r\n  @ViewChild(LoansAccountTermsStepComponent, { static: true }) loansAccountTermsStep: LoansAccountTermsStepComponent;\r\n  @ViewChild(LoansAccountChargesStepComponent, { static: true }) loansAccountChargesStep: LoansAccountChargesStepComponent;\r\n\r\n  loansAccountAndTemplate: any;\r\n  /** Loans Account Product Template */\r\n  loansAccountProductTemplate: any;\r\n  /** Collateral Options */\r\n  collateralOptions: any;\r\n  /** Loan Id */\r\n  loanId: any;\r\n\r\n  /**\r\n   * Sets loans account edit form.\r\n   * @param {route} ActivatedRoute Activated Route.\r\n   * @param {router} Router Router.\r\n   * @param {datePipe} DatePipe Date Pipe\r\n   * @param {loansService} LoansService Loans Service\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private loansService: LoansService,\r\n    private settingsService: SettingsService\r\n  ) {\r\n    this.route.data.subscribe((data: { loansAccountAndTemplate: any }) => {\r\n      this.loansAccountAndTemplate = data.loansAccountAndTemplate;\r\n    });\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Sets loans account product template and collateral template\r\n   * @param {any} $event API response\r\n   */\r\n  setTemplate($event: any) {\r\n    this.loansAccountProductTemplate = $event;\r\n    this.loansService.getLoansCollateralTemplateResource(this.loansAccountProductTemplate.loanProductId).subscribe((response: any) => {\r\n      this.collateralOptions = response.loanCollateralOptions;\r\n    });\r\n  }\r\n\r\n  /** Get Loans Account Details Form Data */\r\n  get loansAccountDetailsForm() {\r\n    return this.loansAccountDetailsStep.loansAccountDetailsForm;\r\n  }\r\n\r\n  /** Get Loans Account Terms Form Data */\r\n  get loansAccountTermsForm() {\r\n    return this.loansAccountTermsStep.loansAccountTermsForm;\r\n  }\r\n\r\n  /** Checks wheter all the forms in different steps are valid and not pristine */\r\n  get loansAccountFormValidAndNotPristine() {\r\n    return (\r\n      this.loansAccountDetailsForm.valid &&\r\n      this.loansAccountTermsForm.valid &&\r\n      (\r\n        !this.loansAccountDetailsForm.pristine ||\r\n        !this.loansAccountTermsForm.pristine ||\r\n        !this.loansAccountChargesStep.pristine\r\n      )\r\n    );\r\n  }\r\n\r\n  /** Retrieves Data of all forms except Currency to submit the data */\r\n  get loansAccount() {\r\n    return {\r\n      ...this.loansAccountDetailsStep.loansAccountDetails,\r\n      ...this.loansAccountTermsStep.loansAccountTerms,\r\n      ...this.loansAccountChargesStep.loansAccountCharges,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Submits Data to create loan account\r\n   */\r\n  submit() {\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const loanType = 'individual';\r\n    const loansAccountData = {\r\n      ...this.loansAccount,\r\n      clientId: this.loansAccountAndTemplate.clientId,\r\n      charges: this.loansAccount.charges.map((charge: any) => ({\r\n        chargeId: charge.id,\r\n        amount: charge.amount,\r\n        dueDate: charge.dueDate && this.datePipe.transform(charge.dueDate, dateFormat),\r\n      })),\r\n      collateral: this.loansAccount.collateral.map((collateralEle: any) => ({\r\n        type: collateralEle.type,\r\n        value: collateralEle.value,\r\n        description: collateralEle.description\r\n      })),\r\n      interestChargedFromDate: this.datePipe.transform(this.loansAccount.interestChargedFromDate, dateFormat),\r\n      repaymentsStartingFromDate: this.datePipe.transform(this.loansAccount.repaymentsStartingFromDate, dateFormat),\r\n      submittedOnDate: this.datePipe.transform(this.loansAccount.submittedOnDate, dateFormat),\r\n      expectedDisbursementDate: this.datePipe.transform(this.loansAccount.expectedDisbursementDate, dateFormat),\r\n      dateFormat,\r\n      locale,\r\n      loanType\r\n    };\r\n\r\n    if (loansAccountData.syncRepaymentsWithMeeting) {\r\n      loansAccountData.calendarId = this.loansAccountProductTemplate.calendarOptions[0].id;\r\n      delete loansAccountData.syncRepaymentsWithMeeting;\r\n    }\r\n\r\n    if (loansAccountData.recalculationRestFrequencyDate) {\r\n      loansAccountData.recalculationRestFrequencyDate = this.datePipe.transform(this.loansAccount.recalculationRestFrequencyDate, dateFormat);\r\n    }\r\n\r\n    if (loansAccountData.recalculationCompoundingFrequencyDate) {\r\n      loansAccountData.recalculationCompoundingFrequencyDate = this.datePipe.transform(this.loansAccount.recalculationCompoundingFrequencyDate, dateFormat);\r\n    }\r\n\r\n    if (loansAccountData.interestCalculationPeriodType === 0) {\r\n      loansAccountData.allowPartialPeriodInterestCalcualtion = false;\r\n    }\r\n    if (!(loansAccountData.isFloatingInterestRate === false)) {\r\n      delete loansAccountData.isFloatingInterestRate;\r\n    }\r\n\r\n    this.loansService.updateLoansAccount(this.loanId, loansAccountData).subscribe((response: any) => {\r\n      this.router.navigate(['../'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-horizontal-stepper class=\"mat-elevation-z8\" labelPosition=\"bottom\" #loansAccountStepper>\r\n    <ng-template matStepperIcon=\"number\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <fa-icon icon=\"pencil-alt\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"done\">\r\n      <fa-icon icon=\"check\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"error\">\r\n      <fa-icon icon=\"exclamation-triangle\" size=\"lg\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <ng-template matStepperIcon=\"preview\">\r\n      <fa-icon icon=\"eye\" size=\"sm\"></fa-icon>\r\n    </ng-template>\r\n\r\n    <mat-step [stepControl]=\"loansAccountDetailsForm\">\r\n\r\n      <ng-template matStepLabel>DETAILS</ng-template>\r\n\r\n      <mifosx-loans-account-details-step [loansAccountTemplate]=\"loansAccountAndTemplate\"\r\n        (loansAccountProductTemplate)=\"setTemplate($event)\">\r\n      </mifosx-loans-account-details-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step [stepControl]=\"loansAccountTermsForm\">\r\n\r\n      <ng-template matStepLabel>TERMS</ng-template>\r\n\r\n      <mifosx-loans-account-terms-step [loansAccountProductTemplate]=\"loansAccountProductTemplate\"\r\n      [loansAccountTemplate]=\"loansAccountAndTemplate\">\r\n      </mifosx-loans-account-terms-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step>\r\n\r\n      <ng-template matStepLabel>CHARGES</ng-template>\r\n\r\n      <mifosx-loans-account-charges-step [loansAccountProductTemplate]=\"loansAccountProductTemplate\"\r\n        [loansAccountTemplate]=\"loansAccountAndTemplate\" [collateralOptions]=\"collateralOptions\"\r\n        [loansAccountFormValid]=\"loansAccountFormValidAndNotPristine\">\r\n      </mifosx-loans-account-charges-step>\r\n\r\n    </mat-step>\r\n\r\n    <mat-step state=\"preview\" *ngIf=\"loansAccountFormValidAndNotPristine\" completed>\r\n\r\n      <ng-template matStepLabel>PREVIEW</ng-template>\r\n\r\n      <mifosx-loans-account-preview-step [loansAccountTemplate]=\"loansAccountAndTemplate\"\r\n        [loansAccountProductTemplate]=\"loansAccountProductTemplate\" [loansAccount]=\"loansAccount\" (submit)=\"submit()\">\r\n      </mifosx-loans-account-preview-step>\r\n\r\n    </mat-step>\r\n\r\n  </mat-horizontal-stepper>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { LoansAccountAddCollateralDialogComponent } from 'app/loans/custom-dialog/loans-account-add-collateral-dialog/loans-account-add-collateral-dialog.component';\r\n\r\n/** Custom Services */\r\nimport { DatePipe } from '@angular/common';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Recurring Deposit Account Charges Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-loans-account-charges-step',\r\n  templateUrl: './loans-account-charges-step.component.html',\r\n  styleUrls: ['./loans-account-charges-step.component.scss']\r\n})\r\nexport class LoansAccountChargesStepComponent implements OnInit, OnChanges {\r\n\r\n  // @Input loansAccountProductTemplate: LoansAccountProductTemplate\r\n  @Input() loansAccountProductTemplate: any;\r\n  // @Imput loansAccountTemplate: LoansAccountTemplate\r\n  @Input() loansAccountTemplate: any;\r\n  // @Input() loansAccountFormValid: LoansAccountFormValid\r\n  @Input() loansAccountFormValid: boolean;\r\n  // @Input collateralOptionsL Collateral Options\r\n  @Input() collateralOptions: any;\r\n\r\n  /** Charges Data */\r\n  chargeData: any;\r\n  /** Charges Data Source */\r\n  chargesDataSource: {}[] = [];\r\n  /** Overdue Charges Data Source */\r\n  overDueChargesDataSource: {}[] = [];\r\n  /** Collateral Data Source */\r\n  collateralDataSource: {}[] = [];\r\n  /** Charges table columns */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date', 'action'];\r\n  /** Columns to be displayed in overdue charges table. */\r\n  overdueChargesDisplayedColumns: string[] = ['name', 'type', 'amount', 'collectedon'];\r\n  /** Columns to be displayed in collateral table. */\r\n  loanCollateralDisplayedColumns: string[] = ['type', 'value', 'description', 'action'];\r\n  /** Component is pristine if there has been no changes by user interaction */\r\n  pristine = true;\r\n\r\n  /**\r\n   * Loans Account Charges Form Step\r\n   * @param {dialog} MatDialog Mat Dialog\r\n   * @param {datePipe} DatePipe DatePipe\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if ( this.loansAccountTemplate.charges) {\r\n      this.chargesDataSource = this.loansAccountTemplate.charges.map((charge: any) => ({ ...charge, id: charge.chargeId })) || [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes on change of input values\r\n   */\r\n  ngOnChanges() {\r\n    if (this.loansAccountProductTemplate) {\r\n      this.chargeData = this.loansAccountProductTemplate.chargeOptions;\r\n      if (this.loansAccountProductTemplate.overdueCharges) {\r\n        this.overDueChargesDataSource = this.loansAccountProductTemplate.overdueCharges;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a charge\r\n   */\r\n  addCharge(charge: any) {\r\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\r\n    charge.value = '';\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Amount\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeAmount(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount,\r\n        type: 'number',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Amount',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, amount: response.data.value.amount };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Date\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeDate(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new DatepickerBase({\r\n        controlName: 'date',\r\n        label: 'Date',\r\n        value: charge.dueDate || charge.feeOnMonthDay || '',\r\n        type: 'datetime-local',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Date',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        let newCharge: any;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const date = this.datePipe.transform(response.data.value.date, dateFormat);\r\n        switch (charge.chargeTimeType.value) {\r\n          case 'Specified due date':\r\n          case 'Weekly Fee':\r\n            newCharge = { ...charge, dueDate: date };\r\n            break;\r\n          case 'Annual Fee':\r\n            newCharge = { ...charge, feeOnMonthDay: date };\r\n            break;\r\n        }\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Edits the Charge Fee Interval\r\n   * @param {any} charge Charge\r\n   */\r\n  editChargeFeeInterval(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'feeInterval',\r\n        label: 'Fee Interval',\r\n        value: charge.feeInterval,\r\n        type: 'text',\r\n        required: false\r\n      }),\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge Fee Interval',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const newCharge = { ...charge, feeInterval: response.data.value.feeInterval };\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1, newCharge);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n      }\r\n    });\r\n    this.pristine = false;\r\n  }\r\n\r\n  /**\r\n   * Delete a particular charge\r\n   * @param charge Charge\r\n   */\r\n  deleteCharge(charge: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge ${charge.name}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\r\n        this.chargesDataSource = this.chargesDataSource.concat([]);\r\n        this.pristine = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // TODO: Needs to be completed\r\n  addCollateral() {\r\n    const addCollateralDialogRef = this.dialog.open(LoansAccountAddCollateralDialogComponent, {\r\n      data: { collateralOptions: this.collateralOptions }\r\n    });\r\n    addCollateralDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.addCollateralForm) {\r\n        const collateralData = {\r\n          type: response.addCollateralForm.value.type,\r\n          value: response.addCollateralForm.value.value,\r\n          description: response.addCollateralForm.value.description\r\n        };\r\n        this.collateralDataSource = this.collateralDataSource.concat(collateralData);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCollateral(id: any) {\r\n    const deleteCollateralDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `collateral` }\r\n    });\r\n    deleteCollateralDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.collateralDataSource.splice(this.collateralDataSource.indexOf(id), 1);\r\n        this.collateralDataSource = this.collateralDataSource.concat([]);\r\n        this.pristine = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns Loans Account Charges and Collateral Form\r\n   */\r\n  get loansAccountCharges() {\r\n    return {\r\n      charges: this.chargesDataSource,\r\n      collateral: this.collateralDataSource\r\n    };\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n  <mat-form-field fxFlex=\"48%\">\r\n    <mat-label>Charge</mat-label>\r\n    <mat-select #charge>\r\n      <mat-option *ngFor=\"let charge of chargeData\" [value]=\"charge\">\r\n        {{ charge.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div fxFlex=\"48%\" fxFlexAlign=\"center\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addCharge(charge)\" [disabled]=\"!charge.value\">\r\n      <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;\r\n      Add\r\n    </button>\r\n  </div>\r\n\r\n  <table fxFlex=\"98%\" class=\"mat-elevation-z1\" mat-table [dataSource]=\"chargesDataSource\"\r\n    [hidden]=\"chargesDataSource.length === 0\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeCalculationType\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeCalculationType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.amount }}\r\n        <button mat-icon-button color=\"primary\" (click)=\"editChargeAmount(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"chargeTimeType\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        {{ charge.chargeTimeType.value }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <span\r\n          *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n          {{(charge.dueDate | date) || 'Unassigned'}}\r\n        </span>\r\n        <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n          {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n        </span>\r\n        <span\r\n          *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                      || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n          N/A\r\n        </span>\r\n        <button mat-icon-button color=\"primary\" *ngIf=\"charge.chargeTimeType.value === 'Weekly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n              || charge.chargeTimeType.value === 'Specified due date'\" (click)=\"editChargeDate(charge)\">\r\n          <fa-icon icon=\"pen\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let charge\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCharge(charge)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n  <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n  <h4 fxFlex=\"98%\" class=\"mat-h4\">Overdue Charges</h4>\r\n\r\n  <table mat-table class=\"mat-elevation-z1\" [dataSource]=\"overDueChargesDataSource\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }},{{ charge.currency.displaySymbol }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeCalculationType.value }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.amount| number }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"collectedon\">\r\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"overdueChargesDisplayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: overdueChargesDisplayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n  <div fxFlex=\"50%\">\r\n    <div fxLayout=\"column\" fxFlex=\"50%\" class=\"tableName\">\r\n      <h4 fxFlex=\"98%\" class=\"mat-h4\">Collaterals Data</h4>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"50%\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"addCollateral()\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <table mat-table class=\"mat-elevation-z1\" [dataSource]=\"collateralDataSource\">\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.type.name }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef> Value </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.value }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Description </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.description }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let ele; let collateralIndex = index\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteCollateral(collateralIndex)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"loanCollateralDisplayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: loanCollateralDisplayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button matStepperNext [disabled]=\"!loansAccountFormValid\">\r\n    Next&nbsp;&nbsp;\r\n    <fa-icon icon=\"arrow-right\"></fa-icon>\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../loans.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/**\r\n * Loans Account Details Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-loans-account-details-step',\r\n  templateUrl: './loans-account-details-step.component.html',\r\n  styleUrls: ['./loans-account-details-step.component.scss']\r\n})\r\nexport class LoansAccountDetailsStepComponent implements OnInit {\r\n\r\n  /** Loans Account Template */\r\n  @Input() loansAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Product Data */\r\n  productData: any;\r\n  /** Loan Officer Data */\r\n  loanOfficerOptions: any;\r\n  /** Loan Purpose Options */\r\n  loanPurposeOptions: any;\r\n  /** Fund Options */\r\n  fundOptions: any;\r\n  /** Account Linking Options */\r\n  accountLinkingOptions: any;\r\n  /** For edit loan accounts form */\r\n  isFieldOfficerPatched = false;\r\n  /** Loans Account Details Form */\r\n  loansAccountDetailsForm: FormGroup;\r\n\r\n  /** Loans Account Template with product data  */\r\n  @Output() loansAccountProductTemplate = new EventEmitter();\r\n  /**\r\n   * Sets loans account details form.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loansService Loans Service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loansService: LoansService,\r\n    private datePipe: DatePipe) {\r\n    this.createLoansAccountDetailsForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildDependencies();\r\n    if (this.loansAccountTemplate) {\r\n      this.productData = this.loansAccountTemplate.productOptions;\r\n      if (this.loansAccountTemplate.loanProductId) {\r\n        this.loansAccountDetailsForm.patchValue({\r\n          'productId': this.loansAccountTemplate.loanProductId,\r\n          'submittedOnDate': this.loansAccountTemplate.timeline.submittedOnDate && new Date(this.loansAccountTemplate.timeline.submittedOnDate),\r\n          'loanOfficerId': this.loansAccountTemplate.loanOfficerId,\r\n          'loanPurposeId': this.loansAccountTemplate.loanPurposeId,\r\n          'fundId': this.loansAccountTemplate.fundId,\r\n          'expectedDisbursementDate': this.loansAccountTemplate.timeline.expectedDisbursementDate && new Date(this.loansAccountTemplate.timeline.expectedDisbursementDate),\r\n          'externalId': this.loansAccountTemplate.externalId\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates loans account details form.\r\n   */\r\n  createLoansAccountDetailsForm() {\r\n    this.loansAccountDetailsForm = this.formBuilder.group({\r\n      'productId': ['', Validators.required],\r\n      'loanOfficerId': [''],\r\n      'loanPurposeId': [''],\r\n      'fundId': [''],\r\n      'submittedOnDate': ['', Validators.required],\r\n      'expectedDisbursementDate': ['', Validators.required],\r\n      'externalId': [''],\r\n      'linkAccountId': [''],\r\n      'createStandingInstructionAtDisbursement': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches loans account product template on productId value changes\r\n   */\r\n  buildDependencies() {\r\n    const clientId = this.loansAccountTemplate.clientId;\r\n    this.loansAccountDetailsForm.get('productId').valueChanges.subscribe((productId: string) => {\r\n      this.loansService.getLoansAccountTemplateResource(clientId, productId).subscribe((response: any) => {\r\n        this.loansAccountProductTemplate.emit(response);\r\n        this.loanOfficerOptions = response.loanOfficerOptions;\r\n        this.loanPurposeOptions = response.loanPurposeOptions;\r\n        this.fundOptions = response.fundOptions;\r\n        this.accountLinkingOptions = response.accountLinkingOptions;\r\n        if (response.createStandingInstructionAtDisbursement) {\r\n          this.loansAccountDetailsForm.get('createStandingInstructionAtDisbursement').patchValue(response.createStandingInstructionAtDisbursement);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns loans account details form value.\r\n   */\r\n  get loansAccountDetails() {\r\n    return this.loansAccountDetailsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loansAccountDetailsForm\">\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Product Name</mat-label>\r\n      <mat-select formControlName=\"productId\" required>\r\n        <mat-option *ngFor=\"let product of productData\" [value]=\"product.id\">\r\n          {{ product.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>\r\n        Product Name is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Loan officer</mat-label>\r\n      <mat-select formControlName=\"loanOfficerId\">\r\n        <mat-option *ngFor=\"let loanOfficer of loanOfficerOptions\" [value]=\"loanOfficer.id\">\r\n          {{ loanOfficer.displayName }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Loan purpose</mat-label>\r\n      <mat-select formControlName=\"loanPurposeId\">\r\n        <mat-option *ngFor=\"let loanPurpose of loanPurposeOptions\" [value]=\"loanPurpose.id\">\r\n          {{ loanPurpose.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Fund</mat-label>\r\n      <mat-select formControlName=\"fundId\">\r\n        <mat-option *ngFor=\"let fund of fundOptions\" [value]=\"fund.id\">\r\n          {{ fund.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Submitted on</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"submitPicker\" required\r\n        formControlName=\"submittedOnDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"submitPicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #submitPicker></mat-datepicker>\r\n      <mat-error *ngIf=\"loansAccountDetailsForm.controls.submittedOnDate?.hasError('required')\">\r\n        Submitted on is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Disbursement on</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"disbursementPicker\" required\r\n        formControlName=\"expectedDisbursementDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"disbursementPicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #disbursementPicker></mat-datepicker>\r\n      <mat-error *ngIf=\"loansAccountDetailsForm.controls.submittedOnDate?.hasError('required')\">\r\n        Disbursement on is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>External id</mat-label>\r\n      <input matInput formControlName=\"externalId\">\r\n    </mat-form-field>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Savings Linkage</h3>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Link savings</mat-label>\r\n      <mat-select formControlName=\"linkAccountId\">\r\n        <mat-option *ngFor=\"let savingaccount of accountLinkingOptions\" [value]=\"savingaccount.id\">\r\n          {{ savingaccount.productName }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-checkbox fxFlex=\"48%\" formControlName=\"createStandingInstructionAtDisbursement\">\r\n      <p>Create standing instructions at disbursement</p>\r\n    </mat-checkbox>\r\n\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n    <button mat-raised-button matStepperPrevious disabled>\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n      Previous\r\n    </button>\r\n    <button mat-raised-button matStepperNext>\r\n      Next&nbsp;&nbsp;\r\n      <fa-icon icon=\"arrow-right\"></fa-icon>\r\n    </button>\r\n  </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Create Loans Account Preview Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-loans-account-preview-step',\r\n  templateUrl: './loans-account-preview-step.component.html',\r\n  styleUrls: ['./loans-account-preview-step.component.scss']\r\n})\r\nexport class LoansAccountPreviewStepComponent implements OnInit {\r\n\r\n  /** Loans Account Template */\r\n  @Input() loansAccountTemplate: any;\r\n  /** Loans Account Product Template */\r\n  @Input() loansAccountProductTemplate: any;\r\n  /** Loans Account Data */\r\n  @Input() loansAccount: any;\r\n  /** Submit Loans Account */\r\n  @Output() submit = new EventEmitter();\r\n\r\n  /** Charges Displayed Columns */\r\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'date'];\r\n  /** Overdue Charges Displayed Columns */\r\n  overdueChargesDisplayedColumns: string[] = ['name', 'type', 'amount', 'collectedon'];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Details</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Product:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.productId | find:loansAccountTemplate.productOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.loanOfficerId\">\r\n    <span fxFlex=\"40%\">Loan officer:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ loansAccount.loanOfficerId | find:loansAccountProductTemplate.loanOfficerOptions:'id':'displayName'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.loanPurposeId\">\r\n    <span fxFlex=\"40%\">Loan purpose:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ loansAccount.loanPurposeId | find:loansAccountProductTemplate.loanPurposeOptions:'id':'name'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.fundId\">\r\n    <span fxFlex=\"40%\">Fund:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.fundId | find:loansAccountProductTemplate.fundOptions:'id':'name'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Submitted on:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.submittedOnDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Disbursement on:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.expectedDisbursementDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.externalId\">\r\n    <span fxFlex=\"40%\">External id:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.externalId }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Terms</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Principal:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.principal }} {{loansAccountProductTemplate.currency.DisplaySymbol}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Loan term:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.loanTermFrequency }}\r\n      {{loansAccount.loanTermFrequencyType | find: loansAccountProductTemplate.termFrequencyTypeOptions:'id':'name'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Number of repayments:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.numberOfRepayments }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Repaid every:</span>\r\n    <span fxFlex=\"60%\">{{loansAccount.repaymentEvery}}\r\n      {{loansAccount.repaymentFrequencyType | find: loansAccountProductTemplate.termFrequencyTypeOptions:'id':'name'}}\r\n      {{loansAccount.repaymentFrequencyNthDayType | find: loansAccountProductTemplate.repaymentFrequencyNthDayTypeOptions:'id': 'name'}}\r\n      {{loansAccount.repaymentFrequencyDayOfWeekType | find: loansAccountProductTemplate.repaymentFrequencyDaysOfWeekTypeOptions:'id': 'name'}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.repaymentsStartingFromDate\">\r\n    <span fxFlex=\"40%\">First repayment on:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.repaymentsStartingFromDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.interestChargedFromDate\">\r\n    <span fxFlex=\"40%\">Interest charged from:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.interestChargedFromDate | date }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.interestRatePerPeriod\">\r\n    <span fxFlex=\"40%\">Nominal interest rate:</span>\r\n    <span\r\n      fxFlex=\"60%\">{{loansAccount.interestRatePerPeriod}}&nbsp;&nbsp;{{loansAccountProductTemplate.interestRateFrequencyType.value}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.interestType\">\r\n    <span fxFlex=\"40%\">Interest method: </span>\r\n    <span fxFlex=\"60%\">{{loansAccount.interestType}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.isEqualAmortization\">\r\n    <span fxFlex=\"40%\">Is Equal Amortization:</span>\r\n    <span fxFlex=\"60%\">{{loansAccount.isEqualAmortization}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Amortization</span>\r\n    <span\r\n      fxFlex=\"60%\">{{ loansAccount.amortizationType | find:loansAccountProductTemplate.amortizationTypeOptions:'id':'value' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Interest calculation period: </span>\r\n    <span\r\n      fxFlex=\"60%\">{{ loansAccount.interestCalculationPeriodType | find:loansAccountProductTemplate.interestCalculationPeriodTypeOptions:'id':'value'  }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.allowPartialPeriodInterestCalcualtion\">\r\n    <span fxFlex=\"40%\">Calculate interest for exact days in partial period:</span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.allowPartialPeriodInterestCalcualtion }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.inArrearsTolerance\">\r\n    <span fxFlex=\"40%\">Arrears tolerance: </span>\r\n    <span\r\n      fxFlex=\"60%\">{{loansAccount.inArrearsTolerance}}&nbsp;{{loansAccountProductTemplate.currency.displaySymbol}}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.graceOnInterestCharged\">\r\n    <span fxFlex=\"40%\">Interest free period: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.graceOnInterestCharged }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Repayment strategy: </span>\r\n    <span\r\n      fxFlex=\"60%\">{{ loansAccount.transactionProcessingStrategyId | find:loansAccountTemplate.transactionProcessingStrategyOptions:'id':'name' }}</span>\r\n  </div>\r\n\r\n  <h3 class=\"mat-h3\" fxFlexFill>Moratorium</h3>\r\n\r\n  <mat-divider fxFlexFill></mat-divider>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.graceOnPrincipalPayment\">\r\n    <span fxFlex=\"40%\">On principal payment: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.graceOnPrincipalPayment }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.graceOnInterestPayment\">\r\n    <span fxFlex=\"40%\">On interest payment: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.graceOnInterestPayment }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.graceOnArrearsAgeing\">\r\n    <span fxFlex=\"40%\">On Arrears Aging: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.graceOnArrearsAgeing }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.isTopup\">\r\n    <span fxFlex=\"40%\">Is Topup Loan? </span>\r\n    <span fxFlex=\"60%\">{{ loansAccount.isTopup }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Recalculate Interest: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.isInterestRecalculationEnabled? 'Yes' : 'No' }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.daysInMonthType\">\r\n    <span fxFlex=\"40%\">Days in month: </span>\r\n    <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.daysInMonthType.value }}</span>\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccount.charges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 class=\"mat-h3\" fxFlexFill>Charges</h3>\r\n\r\n    <mat-divider fxFlexFill></mat-divider>\r\n\r\n    <table fxFlexFill class=\"mat-elevation-z1\" mat-table [dataSource]=\"loansAccount.charges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeCalculationType\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeCalculationType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.amount }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"chargeTimeType\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          {{ charge.chargeTimeType.value }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef> Date </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span\r\n            *ngIf=\"charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee'\">\r\n            {{(charge.dueDate | date) || 'Unassigned'}}\r\n          </span>\r\n          <span *ngIf=\"charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\">\r\n            {{(charge.feeOnMonthDay | date) || 'Unassigned'}}\r\n          </span>\r\n          <span\r\n            *ngIf=\"!(charge.chargeTimeType.value === 'Monthly Fee' || charge.chargeTimeType.value === 'Annual Fee'\r\n                  || charge.chargeTimeType.value === 'Specified due date' || charge.chargeTimeType.value === 'Weekly Fee')\">\r\n            N/A\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"chargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: chargesDisplayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div fxFlexFill *ngIf=\"loansAccountProductTemplate.overdueCharges.length\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n    <h3 fxFlex=\"98%\" class=\"mat-h3\">Overdue Charges</h3>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <table mat-table class=\"mat-elevation-z1\" [dataSource]=\"loansAccountProductTemplate.overdueCharges\">\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }},{{ charge.currency.displaySymbol }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"type\">\r\n        <th mat-header-cell *matHeaderCellDef> Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeCalculationType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.amount| number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"collectedon\">\r\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"overdueChargesDisplayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: overdueChargesDisplayedColumns;\"></tr>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n  <button mat-raised-button matStepperPrevious>\r\n    <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n    Previous\r\n  </button>\r\n  <button mat-raised-button [routerLink]=\"['../']\">\r\n    Cancel\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"submit.emit()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/**\r\n * Create Loans Account Terms Step\r\n */\r\n@Component({\r\n  selector: 'mifosx-loans-account-terms-step',\r\n  templateUrl: './loans-account-terms-step.component.html',\r\n  styleUrls: ['./loans-account-terms-step.component.scss']\r\n})\r\nexport class LoansAccountTermsStepComponent implements OnInit, OnChanges {\r\n\r\n  /** Loans Account Product Template */\r\n  @Input() loansAccountProductTemplate: any;\r\n  /** Loans Account Template */\r\n  @Input() loansAccountTemplate: any;\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Loans Account Terms Form */\r\n  loansAccountTermsForm: FormGroup;\r\n  /** Term Frequency Type Data */\r\n  termFrequencyTypeData: any;\r\n  /** Repayment Frequency Nth Day Type Data */\r\n  repaymentFrequencyNthDayTypeData: any;\r\n  /** Repayment Frequency Days of Week Type Data */\r\n  repaymentFrequencyDaysOfWeekTypeData: any;\r\n  /** Interest Type Data */\r\n  interestTypeData: any;\r\n  /** Amortization Type Data */\r\n  amortizationTypeData: any;\r\n  /** Interest Calculation Period Type Data */\r\n  interestCalculationPeriodTypeData: any;\r\n  /** Transaction Processing Strategy Data */\r\n  transactionProcessingStrategyData: any;\r\n  /** Client Active Loan Data */\r\n  clientActiveLoanData: any;\r\n\r\n  /**\r\n   * Create Loans Account Terms Form\r\n   * @param formBuilder FormBuilder\r\n   * @param route Route\r\n   * @param router Router\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.createloansAccountTermsForm();\r\n  }\r\n  /**\r\n   * Executes on change of input values\r\n   */\r\n  ngOnChanges() {\r\n    if (this.loansAccountProductTemplate) {\r\n      this.loansAccountTermsForm.patchValue({\r\n        'principal': this.loansAccountProductTemplate.principal,\r\n        'loanTermFrequency': this.loansAccountProductTemplate.termFrequency,\r\n        'loanTermFrequencyType': this.loansAccountProductTemplate.termPeriodFrequencyType.id,\r\n        'numberOfRepayments': this.loansAccountProductTemplate.numberOfRepayments,\r\n        'repaymentEvery': this.loansAccountProductTemplate.repaymentEvery,\r\n        'repaymentFrequencyType': this.loansAccountProductTemplate.repaymentFrequencyType.id,\r\n        'interestRatePerPeriod': this.loansAccountProductTemplate.interestRatePerPeriod,\r\n        'amortizationType': this.loansAccountProductTemplate.amortizationType.id,\r\n        'isEqualAmortization': this.loansAccountProductTemplate.isEqualAmortization,\r\n        'interestType': this.loansAccountProductTemplate.interestType.id,\r\n        'isFloatingInterestRate': this.loansAccountProductTemplate.isLoanProductLinkedToFloatingRate ? false : '',\r\n        'interestCalculationPeriodType': this.loansAccountProductTemplate.interestCalculationPeriodType.id,\r\n        'allowPartialPeriodInterestCalcualtion': this.loansAccountProductTemplate.allowPartialPeriodInterestCalcualtion,\r\n        'inArrearsTolerance': this.loansAccountProductTemplate.inArrearsTolerance,\r\n        'graceOnPrincipalPayment': this.loansAccountProductTemplate.graceOnPrincipalPayment,\r\n        'graceOnInterestPayment': this.loansAccountProductTemplate.graceOnInterestPayment,\r\n        'graceOnArrearsAgeing': this.loansAccountProductTemplate.graceOnArrearsAgeing,\r\n        'transactionProcessingStrategyId': this.loansAccountProductTemplate.transactionProcessingStrategyId,\r\n        'graceOnInterestCharged': this.loansAccountProductTemplate.graceOnInterestCharged,\r\n        'fixedEmiAmount': this.loansAccountProductTemplate.fixedEmiAmount,\r\n        'maxOutstandingLoanBalance': this.loansAccountProductTemplate.maxOutstandingLoanBalance\r\n      });\r\n      this.setOptions();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.loansAccountTemplate) {\r\n      if (this.loansAccountTemplate.loanProductId) {\r\n        this.loansAccountTermsForm.patchValue({\r\n          'repaymentsStartingFromDate': this.loansAccountTemplate.expectedFirstRepaymentOnDate && new Date(this.loansAccountTemplate.expectedFirstRepaymentOnDate)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Create Loans Account Terms Form */\r\n  createloansAccountTermsForm() {\r\n    this.loansAccountTermsForm = this.formBuilder.group({\r\n      'principal': ['', Validators.required],\r\n      'loanTermFrequency': ['', Validators.required],\r\n      'loanTermFrequencyType': ['', Validators.required],\r\n      'numberOfRepayments': ['', Validators.required],\r\n      'repaymentEvery': ['', Validators.required],\r\n      'repaymentFrequencyType': ['', Validators.required],\r\n      'repaymentFrequencyNthDayType': ['', Validators.required],\r\n      'repaymentFrequencyDayOfWeekType': ['', Validators.required],\r\n      'repaymentsStartingFromDate': [''],\r\n      'interestChargedFromDate': [''],\r\n      'interestRatePerPeriod': [''],\r\n      'interestType': [''],\r\n      // 'interestRateDifferential': [''],\r\n      'isFloatingInterestRate': [''],\r\n      'isEqualAmortization': [''],\r\n      'amortizationType': ['', Validators.required],\r\n      'interestCalculationPeriodType': [''],\r\n      'allowPartialPeriodInterestCalcualtion': [''],\r\n      'inArrearsTolerance': [''],\r\n      'graceOnInterestCharged': [''],\r\n      'transactionProcessingStrategyId': ['', Validators.required],\r\n      'graceOnPrincipalPayment': [''],\r\n      'graceOnInterestPayment': [''],\r\n      'graceOnArrearsAgeing': [''],\r\n      'loanIdToClose': [''],\r\n      'fixedEmiAmount': [''],\r\n      'isTopup': [''],\r\n      'maxOutstandingLoanBalance': [''],\r\n      'recalculationCompoundingFrequencyDate': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets all select dropdown options.\r\n   */\r\n  setOptions() {\r\n    this.termFrequencyTypeData = this.loansAccountProductTemplate.termFrequencyTypeOptions;\r\n    this.repaymentFrequencyNthDayTypeData = this.loansAccountProductTemplate.repaymentFrequencyNthDayTypeOptions;\r\n    this.repaymentFrequencyDaysOfWeekTypeData = this.loansAccountProductTemplate.repaymentFrequencyDaysOfWeekTypeOptions;\r\n    this.interestTypeData = this.loansAccountProductTemplate.interestTypeOptions;\r\n    this.amortizationTypeData = this.loansAccountProductTemplate.amortizationTypeOptions;\r\n    this.interestCalculationPeriodTypeData = this.loansAccountProductTemplate.interestCalculationPeriodTypeOptions;\r\n    this.transactionProcessingStrategyData = this.loansAccountProductTemplate.transactionProcessingStrategyOptions;\r\n    this.clientActiveLoanData = this.loansAccountProductTemplate.clientActiveLoanOptions;\r\n  }\r\n\r\n  /**\r\n   * Returns loans account terms form value.\r\n   */\r\n  get loansAccountTerms() {\r\n    return this.loansAccountTermsForm.value;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loansAccountTermsForm\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Principal {{loansAccountProductTemplate?.currency.displaySymbol}}</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"principal\">\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.principal.hasError('required')\">\r\n          Principal is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <h4 fxFlex=\"98%\" class=\"mat-h4\">Term Options</h4>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Loan Term</mat-label>\r\n        <input matInput required formControlName=\"loanTermFrequency\">\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.loanTermFrequency.hasError('required')\">\r\n          Loan Term is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Frequency</mat-label>\r\n        <mat-select required formControlName=\"loanTermFrequencyType\">\r\n          <mat-option *ngFor=\"let type of termFrequencyTypeData\" [value]=\"type.id\">\r\n            {{ type.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.loanTermFrequencyType.hasError('required')\">\r\n          Frequency is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Number of repayments</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"numberOfRepayments\">\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.numberOfRepayments.hasError('required')\">\r\n          Number of repayments is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>First repayment on</mat-label>\r\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"repaymentsPicker\"\r\n          formControlName=\"repaymentsStartingFromDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"repaymentsPicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #repaymentsPicker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n      <h4 fxFlex=\"98%\" class=\"mat-h4\">Repaid Every</h4>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Repaid every</mat-label>\r\n        <input matInput required formControlName=\"repaymentEvery\"\r\n          [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.repaymentEvery\">\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.repaymentEvery.hasError('required')\">\r\n          Repaid every is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Frequency</mat-label>\r\n        <mat-select formControlName=\"repaymentFrequencyType\" required\r\n          [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.repaymentEvery\">\r\n          <mat-option *ngFor=\"let repaymentFrequencyType of termFrequencyTypeData\"\r\n            [value]=\"repaymentFrequencyType.id\">\r\n            {{ repaymentFrequencyType.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\" *ngIf=\"loansAccountTermsForm.controls.repaymentFrequencyType.value == 2\">\r\n        <mat-label>Select On</mat-label>\r\n        <mat-select formControlName=\"repaymentFrequencyNthDayType\" required>\r\n          <mat-option\r\n            *ngFor=\"let repaymentFrequencyNthDayType of repaymentFrequencyNthDayTypeData\"\r\n            [value]=\"repaymentFrequencyNthDayType.id\">\r\n            {{ repaymentFrequencyNthDayType.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\" *ngIf=\"loansAccountTermsForm.controls.repaymentFrequencyType.value == 2\">\r\n        <mat-label>Select Day</mat-label>\r\n        <mat-select formControlName=\"repaymentFrequencyDayOfWeekType\" required>\r\n          <mat-option\r\n            *ngFor=\"let repaymentFrequencyDayOfWeekType of repaymentFrequencyDaysOfWeekTypeData\"\r\n            [value]=\"repaymentFrequencyDayOfWeekType.id\">\r\n            {{ repaymentFrequencyDayOfWeekType.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Interest charged from</mat-label>\r\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"interestPicker\"\r\n          formControlName=\"interestChargedFromDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"interestPicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #interestPicker></mat-datepicker>\r\n      </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"!loansAccountProductTemplate?.isLoanProductLinkedToFloatingRate\">\r\n\r\n      <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Nominal interest rate</mat-label>\r\n        <input type=\"number\" matInput formControlName=\"interestRatePerPeriod\">\r\n      </mat-form-field>\r\n\r\n        <mat-form-field fxFlex=\"48%\">\r\n          <mat-label>Interest method</mat-label>\r\n          <mat-select [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.interestType\"\r\n            formControlName=\"interestType\">\r\n            <mat-option *ngFor=\"let interestType of interestTypeData\"\r\n              [value]=\"interestType.id\">\r\n              {{ interestType.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-checkbox fxFlex=\"48%\" formControlName=\"isEqualAmortization\"\r\n          [checked]=\"loansAccountProductTemplate?.isEqualAmortization\">\r\n          <p>Is Equal Amortization</p>\r\n        </mat-checkbox>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"loansAccountProductTemplate?.isLoanProductLinkedToFloatingRate\">\r\n\r\n      <!-- <mat-form-field fxFlex=\"48%\">\r\n        <mat-label>Interest Rate Differential</mat-label>\r\n        <input matInput formControlName=\"interestRateDifferential\">\r\n      </mat-form-field> -->\r\n\r\n      <div fxFlex=\"48%\" fxLayout=\"row wrap\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\">\r\n\r\n        <mat-form-field fxFlex=\"48%\">\r\n          <mat-label>Interest Method</mat-label>\r\n          <mat-select formControlName=\"interestType\">\r\n            <mat-option [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.interestType\"\r\n              *ngFor=\"let interestType of interestTypeData\" [value]=\"interestType.id\">\r\n              {{ interestType.value }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-checkbox fxFlex=\"48%\" formControlName=\"isFloatingInterestRate\">\r\n          <p>Is Floating Rate?</p>\r\n        </mat-checkbox>\r\n\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Amortization</mat-label>\r\n      <mat-select required [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.amortizationType\"\r\n        formControlName=\"amortizationType\">\r\n        <mat-option *ngFor=\"let amortizationType of amortizationTypeData\"\r\n          [value]=\"amortizationType.id\">\r\n          {{ amortizationType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"loansAccountTermsForm.controls.amortizationType.hasError('required')\">\r\n        Amortization Type is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Interest Calculations</h4>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest calculation period</mat-label>\r\n      <mat-select\r\n        [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.interestCalculationPeriodType\"\r\n        formControlName=\"interestCalculationPeriodType\">\r\n        <mat-option\r\n          *ngFor=\"let interestCalculationPeriodType of interestCalculationPeriodTypeData\"\r\n          [value]=\"interestCalculationPeriodType.id\">\r\n          {{ interestCalculationPeriodType.value }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-checkbox *ngIf=\"interestCalculationPeriodType != 0\" fxFlex=\"48%\" -->\r\n    <mat-checkbox fxFlex=\"48%\" formControlName=\"allowPartialPeriodInterestCalcualtion\"\r\n      [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.interestCalculationPeriodType\">\r\n      <p>Calculate interest for exact days in partial period</p>\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Arrears tolerance {{loansAccountProductTemplate?.currency.displaySymbol}}</mat-label>\r\n      <input matInput type=\"number\"\r\n        [attr.disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.inArrearsTolerance\"\r\n        formControlName=\"inArrearsTolerance\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Interest free period</mat-label>\r\n      <input matInput formControlName=\"graceOnInterestCharged\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"48%\">\r\n      <mat-label>Repayment strategy</mat-label>\r\n      <mat-select required\r\n        [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.transactionProcessingStrategyId\"\r\n        formControlName=\"transactionProcessingStrategyId\">\r\n        <mat-option\r\n          *ngFor=\"let transactionProcessingStrategy of transactionProcessingStrategyData\"\r\n          [value]=\"transactionProcessingStrategy.id\">\r\n          {{ transactionProcessingStrategy.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"loansAccountTermsForm.controls.transactionProcessingStrategyId.hasError('required')\">\r\n        Repayment Strategy is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <h4 fxFlex=\"98%\" class=\"mat-h4\">Moratorium</h4>\r\n\r\n    <mat-checkbox fxFlex=\"23%\" labelPosition=\"before\" formControlName=\"graceOnPrincipalPayment\" class=\"margin-v\"\r\n    [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.graceOnPrincipalAndInterestPayment\">\r\n      On Principal Payment\r\n    </mat-checkbox>\r\n\r\n    <mat-checkbox fxFlex=\"23%\" labelPosition=\"before\" formControlName=\"graceOnInterestPayment\" class=\"margin-v\"\r\n    [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.graceOnPrincipalAndInterestPayment\">\r\n      On Interest Payment\r\n    </mat-checkbox>\r\n\r\n    <mat-checkbox fxFlex=\"23%\" labelPosition=\"before\" formControlName=\"graceOnArrearsAgeing\" class=\"margin-v\"\r\n    [disabled]=\"!loansAccountProductTemplate?.product.allowAttributeOverrides.graceOnArrearsAgeing\">\r\n      On Arreas Aging\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field fxFlex=\"48%\" *ngIf=\"loansAccountProductTemplate?.canDefineInstallmentAmount\">\r\n      <mat-label>Installment Amount</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"fixedEmiAmount\">\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"loansAccountProductTemplate?.canUseForTopup\">\r\n\r\n      <mat-checkbox fxFlex=\"48%\" formControlName=\"isTopup\">\r\n        <p>Is Topup Loan?</p>\r\n      </mat-checkbox>\r\n\r\n      <mat-form-field fxFlex=\"48%\" *ngIf=\"loansAccountTermsForm.controls.isTopup.value\">\r\n        <mat-label>Loan closed with Topup</mat-label>\r\n        <mat-select formControlName=\"loanIdToClose\">\r\n          <mat-option *ngFor=\"let clientActiveLoan of clientActiveLoanData\"\r\n            [value]=\"clientActiveLoan.id\">\r\n            {{ clientActiveLoan.accountNo }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field fxFlex=\"48%\"\r\n        *ngIf=\"loansAccountProductTemplate.isInterestRecalculationEnabled && loansAccountProductTemplate.interestRecalculationData.interestRecalculationCompoundingType.id != 0 && loansAccountProductTemplate.interestRecalculationData.recalculationCompoundingFrequencyType.id != 1\">\r\n        <mat-label>Frequency Date for recalculation</mat-label>\r\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"recalculationCompoundingFrequencyDatePicker\"\r\n          formControlName=\"recalculationCompoundingFrequencyDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"recalculationCompoundingFrequencyDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #recalculationCompoundingFrequencyDatePicker></mat-datepicker>\r\n        <mat-error *ngIf=\"loansAccountTermsForm.controls.recalculationCompoundingFrequencyDate.hasError('required')\">\r\n          Frequency Data for recalculation is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </ng-container>\r\n\r\n    <mat-divider fxFlex=\"98%\"></mat-divider>\r\n\r\n    <div fxFlexFill>\r\n      <span fxFlex=\"40%\">Recalculate Interest</span>\r\n      <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.isInterestRecalculationEnabled? 'Yes' : 'No' }}</span>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled\">\r\n      <span fxFlex=\"40%\">Days in year</span>\r\n      <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.daysInYearType.value}}</span>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled\">\r\n\r\n      <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled\">\r\n        <span fxFlex=\"40%\">Advance payments adjustment type</span>\r\n        <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.interestRecalculationData.rescheduleStrategyType.value }}</span>\r\n      </div>\r\n\r\n      <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled\">\r\n        <span fxFlex=\"40%\">Days in month</span>\r\n        <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.daysInMonthType.value }}</span>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled\">\r\n\r\n      <div fxFlexFill>\r\n        <span fxFlex=\"40%\">Interest recalculation compounding on</span>\r\n        <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.interestRecalculationData.interestRecalculationCompoundingType.value }}</span>\r\n      </div>\r\n\r\n      <div fxFlexFill>\r\n        <span fxFlex=\"40%\">Frequency Interval for recalculation</span>\r\n        <span fxFlex=\"60%\">\r\n          <span>{{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyType.value}}</span>\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyType.id == 3 &&\r\n                loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyWeekday != null\">\r\n            on {{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyWeekday.value}}</span>\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyType.id == 4 &&\r\n                loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyOnDay != null\">on day\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyOnDay}}</span>\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyType.id == 4 &&\r\n                loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyOnDay == null &&\r\n                loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyNthDay != null\">on\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyNthDay.value}}\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyWeekday.value}}</span>\r\n        </span>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n    <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled && loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyType.id != 1\">\r\n      <span fxFlex=\"40%\">Frequency Interval for recalculation</span>\r\n      <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.interestRecalculationData.recalculationRestFrequencyInterval}}</span>\r\n    </div>\r\n\r\n    <ng-container\r\n      *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled  && loansAccountProductTemplate?.interestRecalculationData.interestRecalculationCompoundingType.id != 0\">\r\n\r\n      <div fxFlexFill>\r\n        <span fxFlex=\"40%\">Frequency for compounding</span>\r\n        <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyType.value}}\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyType.id == 3 &&\r\n            loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyWeekday != null\">\r\n            on {{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyWeekday.value}}\r\n          </span>\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyType.id == 4 &&\r\n            loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyOnDay != null\">on day\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyOnDay}}\r\n          </span>\r\n          <span *ngIf=\"loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyType.id == 4 &&\r\n            loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyOnDay == null &&\r\n            loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyNthDay != null\">on\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyNthDay.value}}\r\n            {{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyWeekday.value}}\r\n          </span>\r\n        </span>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n    <div fxFlexFill *ngIf=\"loansAccountProductTemplate?.isInterestRecalculationEnabled && loansAccountProductTemplate?.interestRecalculationData.interestRecalculationCompoundingType.id != 0 && loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyType.id != 1\">\r\n      <span fxFlex=\"40%\">Frequency Interval for compounding</span>\r\n      <span fxFlex=\"60%\">{{ loansAccountProductTemplate?.interestRecalculationData.recalculationCompoundingFrequencyInterval}}</span>\r\n    </div>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" class=\"margin-t\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"2%\">\r\n      <button mat-raised-button matStepperPrevious>\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;\r\n        Previous\r\n      </button>\r\n      <button mat-raised-button matStepperNext>\r\n        Next&nbsp;&nbsp;\r\n        <fa-icon icon=\"arrow-right\"></fa-icon>\r\n      </button>\r\n    </div>\r\n\r\n</form>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/** Translation Imports */\r\nimport { extract } from '../core/i18n/i18n.service';\r\n\r\n/** Custom Components */\r\nimport { LoansViewComponent } from './loans-view/loans-view.component';\r\nimport { GeneralTabComponent } from './loans-view/general-tab/general-tab.component';\r\nimport { AccountDetailsComponent } from './loans-view/account-details/account-details.component';\r\nimport { NotesTabComponent } from './loans-view/notes-tab/notes-tab.component';\r\nimport { RepaymentScheduleTabComponent } from './loans-view/repayment-schedule-tab/repayment-schedule-tab.component';\r\nimport { TransactionsTabComponent } from './loans-view/transactions-tab/transactions-tab.component';\r\nimport { OriginalScheduleTabComponent } from './loans-view/original-schedule-tab/original-schedule-tab.component';\r\nimport { OverdueChargesTabComponent } from './loans-view/overdue-charges-tab/overdue-charges-tab.component';\r\nimport { ChargesTabComponent } from './loans-view/charges-tab/charges-tab.component';\r\nimport { DatatableTabComponent } from './loans-view/datatable-tab/datatable-tab.component';\r\nimport { LoanAccountActionsComponent } from './loans-view/loan-account-actions/loan-account-actions.component';\r\nimport { FloatingInterestRatesComponent } from './loans-view/floating-interest-rates/floating-interest-rates.component';\r\nimport { LoanTrancheDetailsComponent } from './loans-view/loan-tranche-details/loan-tranche-details.component';\r\nimport { LoanCollateralTabComponent } from './loans-view/loan-collateral-tab/loan-collateral-tab.component';\r\nimport { CreateLoansAccountComponent } from './create-loans-account/create-loans-account.component';\r\nimport { LoanDocumentsTabComponent } from './loans-view/loan-documents-tab/loan-documents-tab.component';\r\nimport { StandingInstructionsTabComponent } from 'app/loans/loans-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { EditLoansAccountComponent } from './edit-loans-account/edit-loans-account.component';\r\nimport { ViewChargeComponent } from './loans-view/view-charge/view-charge.component';\r\nimport { ViewTransactionComponent } from './loans-view/transactions/view-transaction/view-transaction.component';\r\nimport { EditTransactionComponent } from './loans-view/transactions/edit-transaction/edit-transaction.component';\r\nimport { ViewRecieptComponent } from './loans-view/transactions/view-reciept/view-reciept.component';\r\nimport { ExportTransactionsComponent } from './loans-view/transactions/export-transactions/export-transactions.component';\r\n\r\n/** Custom Resolvers */\r\nimport { LoanDetailsResolver } from './common-resolvers/loan-details.resolver';\r\nimport { LoanNotesResolver } from './common-resolvers/loan-notes.resolver';\r\nimport { LoanDatatablesResolver } from './common-resolvers/loan-datatables.resolver';\r\nimport { LoanDatatableResolver } from './common-resolvers/loan-datatable.resolver';\r\nimport { LoanActionButtonResolver } from './common-resolvers/loan-action-button.resolver';\r\nimport { LoansAccountTemplateResolver } from './common-resolvers/loans-account-template.resolver';\r\nimport { LoanDocumentsResolver } from './common-resolvers/loan-documents.resolver';\r\nimport { LoansAccountAndTemplateResolver } from './common-resolvers/loans-account-and-template.resolver';\r\nimport { LoansAccountChargeResolver } from './common-resolvers/loans-account-charge.resolver';\r\nimport { LoansAccountTransactionResolver } from './common-resolvers/loans-account-transaction.resolver';\r\nimport { LoansTransactionRecieptResolver } from './common-resolvers/loans-transaction-reciept.resolver';\r\nimport { LoansAccountTransactionTemplateResolver } from './common-resolvers/loans-account-transaction-template.resolver';\r\n\r\n/** Loans Route. */\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: { title: extract('Loans'), breadcrumb: 'Loans', routeParamBreadcrumb: false },\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        data: { title: extract('Create Loans Account'), breadcrumb: 'Create Loans Account' },\r\n        component: CreateLoansAccountComponent,\r\n        resolve: {\r\n          loansAccountTemplate: LoansAccountTemplateResolver\r\n        }\r\n      },\r\n      {\r\n      path: ':loanId',\r\n      data: { title: extract('Loan View'), routeParamBreadcrumb: 'loanId' },\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: LoansViewComponent,\r\n          resolve: {\r\n            loanDetailsData: LoanDetailsResolver,\r\n            loanDatatables: LoanDatatablesResolver,\r\n          },\r\n          children: [\r\n            {\r\n              path: 'general',\r\n              component: GeneralTabComponent,\r\n              data: { title: extract('General'), breadcrumb: 'General', routeParamBreadcrumb: false }\r\n            },\r\n            {\r\n              path: 'accountdetail',\r\n              component: AccountDetailsComponent,\r\n              data: { title: extract('Account Detail'), breadcrumb: 'Account Detail', routeParamBreadcrumb: false }\r\n            },\r\n            {\r\n              path: 'original-schedule',\r\n              component: OriginalScheduleTabComponent,\r\n              data: { title: extract('Original Schedule'), breadcrumb: 'Original Schedule', routeParamBreadcrumb: false },\r\n            },\r\n            {\r\n              path: 'repayment-schedule',\r\n              component: RepaymentScheduleTabComponent,\r\n              data: { title: extract('Repayment Schedule'), breadcrumb: 'Repayment Schedule', routeParamBreadcrumb: false },\r\n            },\r\n            {\r\n              path: 'transactions',\r\n              data: { title: extract('Loans Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n              children: [\r\n                {\r\n                  path: '',\r\n                  component: TransactionsTabComponent\r\n\r\n                },\r\n                {\r\n                  path: 'export',\r\n                  component: ExportTransactionsComponent\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              path: 'loan-collateral',\r\n              component: LoanCollateralTabComponent,\r\n              data: { title: extract('Loan Collateral Details'), breadcrumb: 'Loan Collateral Details', routeParamBreadcrumb: false },\r\n            },\r\n            {\r\n              path: 'loan-tranche-details',\r\n              component: LoanTrancheDetailsComponent,\r\n              data: { title: extract('Loan Tranche Details'), breadcrumb: 'Loan Tranche Details', routeParamBreadcrumb: false },\r\n            },\r\n            {\r\n              path: 'overdue-charges',\r\n              component: OverdueChargesTabComponent,\r\n              data: { title: extract('Overdue Charges'), breadcrumb: 'Overdue Charges', routeParamBreadcrumb: false }\r\n            },\r\n            {\r\n              path: 'floating-interest-rates',\r\n              component: FloatingInterestRatesComponent,\r\n              data: { title: extract('Floating Interest Rates'), breadcrumb: 'Floating Interest Rates', routeParamBreadcrumb: false },\r\n            },\r\n            {\r\n              path: 'charges',\r\n              data: { title: extract('Loans Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false },\r\n              component: ChargesTabComponent,\r\n            },\r\n            {\r\n              path: 'loan-documents',\r\n              component: LoanDocumentsTabComponent,\r\n              data: { title: extract('Loan Documents'), breadcrumb: 'Loan Documents', routeParamBreadcrumb: false },\r\n              resolve: {\r\n                loanDocuments: LoanDocumentsResolver\r\n              },\r\n            },\r\n            {\r\n              path: 'notes',\r\n              component: NotesTabComponent,\r\n              data: { title: extract('Notes'), breadcrumb: 'Notes', routeParamBreadcrumb: false },\r\n              resolve: {\r\n                loanNotes: LoanNotesResolver\r\n              },\r\n            },\r\n            {\r\n              path: 'standing-instruction',\r\n              component: StandingInstructionsTabComponent,\r\n              data: { title: extract('Standing Instructions'), breadcrumb: 'Standing Instructions', routeParamBreadcrumb: false }\r\n            },\r\n            {\r\n              path: 'datatables',\r\n              children: [{\r\n                path: ':datatableName',\r\n                component: DatatableTabComponent,\r\n                data: { title: extract('Data Table View'), routeParamBreadcrumb: 'datatableName' },\r\n                resolve: {\r\n                  loanDatatable: LoanDatatableResolver\r\n                }\r\n              }]\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          path: 'transactions',\r\n          data: { title: extract('Loans Account Transactions'), breadcrumb: 'Transactions', routeParamBreadcrumb: false },\r\n          resolve: {\r\n            loanDetailsAssociationData: LoanDetailsResolver\r\n          },\r\n          children: [\r\n            {\r\n              path: '',\r\n              redirectTo: '../transactions', pathMatch: 'prefix'\r\n            },\r\n            {\r\n              path: ':id',\r\n              data: { routeParamBreadcrumb: 'id' },\r\n              children: [\r\n                {\r\n                  path: '',\r\n                  component: ViewTransactionComponent,\r\n                  resolve: {\r\n                    loansAccountTransaction: LoansAccountTransactionResolver\r\n                  }\r\n                },\r\n                {\r\n                  path: 'edit',\r\n                  component: EditTransactionComponent,\r\n                  data: { breadcrumb: 'Edit', routeParamBreadcrumb: false },\r\n                  resolve: {\r\n                    loansAccountTransactionTemplate: LoansAccountTransactionTemplateResolver\r\n                  }\r\n                },\r\n                {\r\n                  path: 'reciept',\r\n                  component: ViewRecieptComponent,\r\n                  data: { breadcrumb: 'Reciept', routeParamBreadcrumb: false },\r\n                  resolve: {\r\n                    loansTransactionReciept: LoansTransactionRecieptResolver\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          path: 'charges',\r\n          data: { title: extract('Loans Account Charges'), breadcrumb: 'Charges', routeParamBreadcrumb: false },\r\n          children: [\r\n            {\r\n              path: '',\r\n              redirectTo: '../charges', pathMatch: 'prefix'\r\n            },\r\n            {\r\n              path: ':id',\r\n              data: { routeParamBreadcrumb: 'id' },\r\n              component: ViewChargeComponent,\r\n              resolve: {\r\n                loansAccountCharge: LoansAccountChargeResolver,\r\n                loanDetailsData: LoanDetailsResolver\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          path: 'actions/:action',\r\n          component: LoanAccountActionsComponent,\r\n          data: { title: extract('Loan Account Actions'), routeParamBreadcrumb: 'action' },\r\n          resolve: {\r\n            actionButtonData: LoanActionButtonResolver\r\n          }\r\n        },\r\n        {\r\n          path: 'transfer-funds',\r\n          loadChildren: () => import('../account-transfers/account-transfers.module').then(m => m.AccountTransfersModule)\r\n        },\r\n        {\r\n          path: 'edit-loans-account',\r\n          data: { title: extract('Edit Loans Account'), breadcrumb: 'Edit Loans Account', routeParamBreadcrumb: 'Edit' },\r\n          component: EditLoansAccountComponent,\r\n          resolve: {\r\n            loansAccountAndTemplate: LoansAccountAndTemplateResolver\r\n          }\r\n        },\r\n      ]\r\n    }]\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  declarations: [],\r\n  providers: [\r\n    LoanDetailsResolver,\r\n    LoanNotesResolver,\r\n    LoanDatatablesResolver,\r\n    LoanDatatableResolver,\r\n    LoanActionButtonResolver,\r\n    LoansAccountTemplateResolver,\r\n    LoanDocumentsResolver,\r\n    LoansAccountAndTemplateResolver,\r\n    LoansAccountChargeResolver,\r\n    LoansAccountTransactionResolver,\r\n    LoansAccountTransactionTemplateResolver,\r\n    LoansTransactionRecieptResolver\r\n  ]\r\n})\r\n\r\nexport class LoansRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-account-details',\r\n  templateUrl: './account-details.component.html',\r\n  styleUrls: ['./account-details.component.scss']\r\n})\r\nexport class AccountDetailsComponent implements OnInit {\r\n\r\n  loanDetails: any;\r\n  dataObject: {\r\n    property: string,\r\n    value: string\r\n  }[];\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any, }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\">Repayment Strategy:</span>\r\n            <span fxFlex=\"50%\">{{ loanDetails.transactionProcessingStrategyName }}</span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\">Repayments:</span>\r\n            <span fxFlex=\"50%\">{{loanDetails.numberOfRepayments}} every {{loanDetails.repaymentEvery}}&nbsp;{{loanDetails.repaymentFrequencyType.value}}\r\n            <span *ngIf=\"loanDetails.repaymentFrequencyType?.id == 2 && loanDetails.repaymentFrequencyNthDayType?.id != 0 && loanDetails.repaymentFrequencyDayOfWeekType?.id != 0\">\r\n              &nbsp;on&nbsp;{{loanDetails.repaymentFrequencyNthDayType?.value}}&nbsp;{{loanDetails.repaymentFrequencyDayOfWeekType?.value}}\r\n            </span>\r\n            </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Amortization </span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.amortizationType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Equal Amortization </span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.isEqualAmortization}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Interest </span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.annualInterestRate}} per annum ({{loanDetails.interestRatePerPeriod}}%&nbsp; {{loanDetails.interestRateFrequencyType.value}}) - {{loanDetails.interestType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Grace: On Principal Payment</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.graceOnPrincipalPayment}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Grace: On Interest Payment</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.graceOnInterestPayment}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Grace on Arrears Ageing</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.graceOnArrearsAgeing}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Fund Source</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.fundName}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Interest Free Period</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.graceOnInterestCharged}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Interest Calculation Period</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestCalculationPeriodType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Allow Partial Interest Calculation with same as repayment</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.allowPartialPeriodInterestCalcualtion}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Interest Type</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Submitted on</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.timeline.submittedOnDate | date }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Approved on</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.timeline.approvedOnDate | date }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Disbursed on</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.timeline.actualDisbursementDate | date }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Matures on</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.timeline.expectedMaturityDate | date }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.canDefineInstallmentAmount\">\r\n            <span fxFlex=\"50%\"> Fixed EMI amount</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.fixedEmiAmount | number}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isTopup\">\r\n            <span fxFlex=\"50%\"> Is Topup Loan?</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.isTopup}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isTopup\">\r\n            <span fxFlex=\"50%\"> Loan closed with Topup </span>\r\n            <span fxFlex=\"50%\"> <a href=\"#\">{{loanDetails.closureLoanAccountNo}}</a> </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isTopup\">\r\n            <span fxFlex=\"50%\"> Topup closure amount</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.topupAmount| number}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Recalculate Interest based on new terms</span>\r\n            <span fxFlex=\"50%\">  {{loanDetails.isInterestRecalculationEnabled ? 'Yes' : 'No'  }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Days in year</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.daysInYearType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\"> Days in month</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.daysInMonthType.value }} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isInterestRecalculationEnabled\">\r\n            <span fxFlex=\"50%\"> Interest recalculation compounding on</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestRecalculationData.interestRecalculationCompoundingType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isInterestRecalculationEnabled\">\r\n            <span fxFlex=\"50%\"> Advance payments adjustment type</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestRecalculationData.rescheduleStrategyType.value}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isInterestRecalculationEnabled\">\r\n            <span fxFlex=\"50%\"> Frequency for recalculate Outstanding Principal</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestRecalculationData.calendarData.humanReadable}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isInterestRecalculationEnabled && loanDetails.interestRecalculationData.interestRecalculationCompoundingType.id !=0\">\r\n            <span fxFlex=\"50%\"> Frequency for compounding</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.interestRecalculationData.compoundingCalendarData.humanReadable}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isVariableInstallmentsAllowed\">\r\n            <span fxFlex=\"50%\"> Variable Installments Allowed</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.isVariableInstallmentsAllowed}} </span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"loanDetails.isVariableInstallmentsAllowed\">\r\n            <span fxFlex=\"50%\"> Gap between Installments:(Min</span>\r\n            <span fxFlex=\"50%\"> {{loanDetails.minimumGap}}&nbsp;Days&nbsp;, Max:{{loanDetails.maximumGap}}&nbsp;Days) </span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { ConfirmationDialogComponent } from 'app/shared/confirmation-dialog/confirmation-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n@Component({\r\n  selector: 'mifosx-charges-tab',\r\n  templateUrl: './charges-tab.component.html',\r\n  styleUrls: ['./charges-tab.component.scss']\r\n})\r\nexport class ChargesTabComponent implements OnInit {\r\n\r\n  /** Loan Details Data */\r\n  loanDetails: any;\r\n  /** Charges Data */\r\n  chargesData: any;\r\n  /** Status */\r\n  status: any;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = ['name', 'feepenalty', 'paymentdueat', 'dueasof', 'calculationtype', 'due', 'paid', 'waived', 'outstanding', 'actions'];\r\n  /** Data source for charges table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /** Paginator for charges table. */\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  /** Sorter for charges table. */\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private loansService: LoansService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe(( data: { loanDetailsData: any }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.chargesData = this.loanDetails.charges;\r\n    this.status = this.loanDetails.status.value;\r\n    let actionFlag;\r\n    this.chargesData.forEach((element: any) => {\r\n      if (element.paid || element.waived || element.chargeTimeType.value === 'Disbursement' || this.loanDetails.status.value !== 'Active') {\r\n        actionFlag = true;\r\n      } else {\r\n        actionFlag = false;\r\n      }\r\n      element.actionFlag = actionFlag;\r\n    });\r\n    this.dataSource = new MatTableDataSource(this.chargesData);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  /**\r\n   * Pays the charge.\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  payCharge(chargeId: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Pay Charge ${chargeId}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = 'en';\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.loansService.executeLoansAccountChargesCommand(this.loanDetails.id, 'paycharge', dataObject, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  waiveCharge(chargeId: any) {\r\n    const waiveChargeDialogRef = this.dialog.open(ConfirmationDialogComponent, { data: { heading: 'Waive Charge', dialogContext: `Are you sure you want to waive charge with id: ${chargeId}`, type: 'Basic' } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.loansService.executeLoansAccountChargesCommand(this.loanDetails.id, 'waive', {}, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   * @param {any} charge Charge\r\n   */\r\n  editCharge(charge: any) {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: charge.amount || charge.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: `Edit Charge ${charge.id}`,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.loansService.editLoansAccountCharge(this.loanDetails.id, dataObject, charge.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   * @param {any} chargeId Charge Id\r\n   */\r\n  deleteCharge(chargeId: any) {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${chargeId}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteLoansAccountCharge(this.loanDetails.id, chargeId)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view charge page.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.loanDetails.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/loans-accounts`, { skipLocationChange: true })\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"feepenalty\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fee/Penalty </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> \r\n          <span *ngIf=\"charge.penalty\">Penalty</span>  \r\n          <span *ngIf=\"!charge.penalty\">Fee</span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paymentdueat\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Payment due at </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"dueasof\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Due as of </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.dueDate| date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"calculationtype\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Calculation Type </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeCalculationType.value }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"due\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Due </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.currency.displaySymbol }}{{ charge.amount| number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Paid </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.currency.displaySymbol }}{{ charge.amountPaid| number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Waived </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.currency.displaySymbol }}{{ charge.amountWaived| number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let charge\"> {{ charge.currency.displaySymbol }}{{ charge.amountOutstanding| number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\r\n        <td mat-cell *matCellDef=\"let charge\">\r\n          <span *ngIf=\"status === 'Submitted and pending approval'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Edit Charge\"\r\n              (click)=\"routeEdit($event); editCharge(charge)\">\r\n              <i class=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\" matTooltip=\"Delete Charge\"\r\n              (click)=\"routeEdit($event); deleteCharge(charge.id)\">\r\n              <i class=\"fa fa-trash\"></i>\r\n            </button>\r\n          </span>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Pay Charge\" *ngIf=\"charge.chargePayable && status=='Active'\"\r\n               (click)=\"routeEdit($event); payCharge(charge.id)\">\r\n              <i class=\"fa fa-dollar\"></i>\r\n            </button>\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"Waive Charge\" *ngIf=\"!charge.actionFlag\"\r\n              (click)=\"routeEdit($event); waiveCharge(charge.id)\">\r\n              <i class=\"fa fa-flag\"></i>\r\n            </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" [routerLink]=\"[row.id]\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-datatable-tab',\r\n  templateUrl: './datatable-tab.component.html',\r\n  styleUrls: ['./datatable-tab.component.scss']\r\n})\r\nexport class DatatableTabComponent {\r\n\r\n    /** Loan Datatable */\r\n    loanDatatable: any;\r\n    /** Multi Row Datatable Flag */\r\n    multiRowDatatableFlag: boolean;\r\n\r\n    /**\r\n     * Fetches data table data from `resolve`\r\n     * @param {ActivatedRoute} route Activated Route.\r\n     */\r\n    constructor(private route: ActivatedRoute) {\r\n      this.route.data.subscribe((data: { loanDatatable: any }) => {\r\n        this.loanDatatable = data.loanDatatable;\r\n        this.multiRowDatatableFlag = this.loanDatatable.columnHeaders[0].columnName === 'id' ? true : false;\r\n      });\r\n    }\r\n\r\n}\r\n","<div>\r\n  <mifosx-multi-row *ngIf=\"multiRowDatatableFlag\" [dataObject]=\"loanDatatable\"></mifosx-multi-row>\r\n  <mifosx-single-row *ngIf=\"!multiRowDatatableFlag\" [dataObject]=\"loanDatatable\"></mifosx-single-row>\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnChanges, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../../loans.service';\r\n\r\n/**\r\n * Loan Multi Row Data Tables\r\n */\r\n@Component({\r\n  selector: 'mifosx-multi-row',\r\n  templateUrl: './multi-row.component.html',\r\n  styleUrls: ['./multi-row.component.scss']\r\n})\r\nexport class MultiRowComponent implements OnInit, OnChanges {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Data Table Columns */\r\n  datatableColumns: string[] = [];\r\n  /** Data Table Data */\r\n  datatableData: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Toggle button visibility */\r\n  showDeleteBotton: boolean;\r\n\r\n  /** Data Table Reference */\r\n  @ViewChild('dataTable', { static: true }) dataTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Fetches loan Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {LoansService} loansService Loans Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private loansService: LoansService,\r\n              private dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.parent.snapshot.paramMap.get('loanId');\r\n  }\r\n\r\n  /**\r\n   * Updates related variables on changes to dataObject.\r\n   */\r\n  ngOnChanges() {\r\n    this.datatableColumns = this.dataObject.columnHeaders.map((columnHeader: any) => {\r\n      return columnHeader.columnName;\r\n    });\r\n    this.datatableData = this.dataObject.data;\r\n    this.showDeleteBotton = this.datatableData[0] ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a new row to the given multi row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: 'en' };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'loan_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.loansService.addLoanDatatableEntry(this.loanId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.loansService.getLoanDatatable(this.loanId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.dataTableRef.renderRows();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes all rows of the given multi row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteDatatableContent(this.loanId, this.datatableName).subscribe(() => {\r\n          this.loansService.getLoanDatatable(this.loanId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.datatableData = dataObject.data;\r\n            this.showDeleteBotton = false;\r\n            this.dataTableRef.renderRows();\r\n           });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n    <div class=\"m-b-10\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n    <div class=\"action-button m-b-5\" fxLayoutGap=\"10px\">\r\n      <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"add()\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n        </button>\r\n      </span>\r\n      <span *mifosxHasPermission=\"'DELETE_' + datatableName\">\r\n        <button class=\"delete-button\" mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"showDeleteBotton\">\r\n          <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete All\r\n        </button>\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <table #dataTable mat-table [hidden]=\"!datatableData[0]\" [dataSource]=\"datatableData\" class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <ng-container *ngFor=\"let datatableColumn of datatableColumns;let i = index\" [matColumnDef]=\"datatableColumn\">\r\n      <th mat-header-cell *matHeaderCellDef> {{datatableColumn}} </th>\r\n      <td mat-cell *matCellDef=\"let data\"> {{data.row[i]}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"datatableColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: datatableColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Components */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\r\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../../loans.service';\r\n\r\n\r\n@Component({\r\n  selector: 'mifosx-single-row',\r\n  templateUrl: './single-row.component.html',\r\n  styleUrls: ['./single-row.component.scss']\r\n})\r\nexport class SingleRowComponent implements OnInit {\r\n\r\n  /** Data Object */\r\n  @Input() dataObject: any;\r\n\r\n  /** Data Table Name */\r\n  datatableName: string;\r\n  /** Loan Id */\r\n  loanId: string;\r\n\r\n  /**\r\n   * Fetches loan Id from parent route params.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {LoansService} loansService Loans Service.\r\n   * @param {MatDialog} dialog Mat Dialog.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private dialog: MatDialog,\r\n              private loansService: LoansService,\r\n              private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.parent.snapshot.paramMap.get('loanId');\r\n  }\r\n\r\n  /**\r\n   * Fetches data table name from route params.\r\n   * subscription is required due to asynchronicity.\r\n   */\r\n  ngOnInit() {\r\n    this.route.params.subscribe((routeParams: any) => {\r\n      this.datatableName = routeParams.datatableName;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the given single row data table.\r\n   */\r\n  add() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'loan_id'));\r\n    });\r\n    const formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    const data = {\r\n      title: 'Add ' + this.datatableName,\r\n      formfields: formfields\r\n    };\r\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    addDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.loansService.addLoanDatatableEntry(this.loanId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.loansService.getLoanDatatable(this.loanId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the current instance of single row data table.\r\n   */\r\n  edit() {\r\n    let dataTableEntryObject: any = { locale: this.settingsService.language.code };\r\n    const dateTransformColumns: string[] = [];\r\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\r\n      return ((column.columnName !== 'id') && (column.columnName !== 'loan_id'));\r\n    });\r\n    let formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\r\n    formfields = formfields.map((formfield: FormfieldBase, index: number) => {\r\n      formfield.value = (this.dataObject.data[0].row[index + 1]) ? this.dataObject.data[0].row[index + 1] : '';\r\n      return formfield;\r\n    });\r\n    const data = {\r\n      title: 'Edit ' + this.datatableName,\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        dateTransformColumns.forEach((column) => {\r\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\r\n        });\r\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\r\n        this.loansService.editLoanDatatableEntry(this.loanId, this.datatableName, dataTableEntryObject).subscribe(() => {\r\n          this.loansService.getLoanDatatable(this.loanId, this.datatableName).subscribe((dataObject: any) => {\r\n            this.dataObject = dataObject;\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the current instance of single row data table.\r\n   */\r\n  delete() {\r\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the contents of ${this.datatableName}` }\r\n    });\r\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteDatatableContent(this.loanId, this.datatableName)\r\n          .subscribe(() => {\r\n            this.loansService.getLoanDatatable(this.loanId, this.datatableName).subscribe((dataObject: any) => {\r\n              this.dataObject = dataObject;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Maps API response to data table form fields.\r\n   * @param {any} columns Data Table Columns.\r\n   * @param {string[]} dateTransformColumns Columns transformed with date pipe.\r\n   * @param {any} dataTableEntryObject Additional data table details.\r\n   */\r\n  getFormfields(columns: any, dateTransformColumns: string[], dataTableEntryObject: any) {\r\n    return columns.map((column: any) => {\r\n      switch (column.columnDisplayType) {\r\n        case 'INTEGER':\r\n        case 'STRING':\r\n        case 'DECIMAL':\r\n        case 'TEXT': return new InputBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'BOOLEAN': return new CheckboxBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          type: 'checkbox',\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'CODELOOKUP': return new SelectBase({\r\n          controlName: column.columnName,\r\n          label: column.columnName,\r\n          value: '',\r\n          options: { label: 'value', value: 'id', data: column.columnValues },\r\n          required: (column.isColumnNullable) ? false : true\r\n        });\r\n        case 'DATE': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = this.settingsService.dateFormat;\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'date',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n        case 'DATETIME': {\r\n          dateTransformColumns.push(column.columnName);\r\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\r\n          return new DatepickerBase({\r\n            controlName: column.columnName,\r\n            label: column.columnName,\r\n            value: '',\r\n            type: 'datetime-local',\r\n            required: (column.isColumnNullable) ? false : true\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"50%\" class=\"tableName\">\r\n      <h3>{{datatableName}}</h3>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"50%\" >\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n        <span *mifosxHasPermission=\"'CREATE_' + datatableName\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"add()\" *ngIf=\"!dataObject.data[0]\">\r\n            <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n          </button>\r\n        </span>\r\n        <span *mifosxHasPermission=\"'UPDATE_' + datatableName\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"edit()\" *ngIf=\"dataObject.data[0]\">\r\n            <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n          </button>\r\n        </span>\r\n        <span *mifosxHasPermission=\"'DELETE_' + datatableName\" class=\"delete-button\">\r\n          <button mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"dataObject.data[0]\">\r\n            <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div>\r\n    <mat-list role=\"list\" *ngIf=\"dataObject.data[0]\">\r\n      <mat-list-item role=\"listitem\" *ngFor=\"let columnHeader of dataObject.columnHeaders;let i = index\">\r\n        {{columnHeader.columnName}} : {{dataObject.data[0].row[i]}}\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-floating-interest-rates',\r\n  templateUrl: './floating-interest-rates.component.html',\r\n  styleUrls: ['./floating-interest-rates.component.scss']\r\n})\r\nexport class FloatingInterestRatesComponent implements OnInit {\r\n\r\n  /** Loan Details */\r\n  loanDetails: any;\r\n  /** Interest Rate Data */\r\n  interestRateData: any;\r\n  /** Columns to be displayed in charges table. */\r\n  displayedColumns: string[] = ['fromDate', 'interestRate'];\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe(( data: { loanDetailsData: any }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.interestRateData = this.loanDetails.interestRatesPeriods;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"interestRateData\">\r\n\r\n    <ng-container matColumnDef=\"fromDate\">\r\n      <th mat-header-cell *matHeaderCellDef> From Date </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.fromDate | date}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interestRate\">\r\n      <th mat-header-cell *matHeaderCellDef> Interest Rate </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.effectiveInterestRate }} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'mifosx-general-tab',\r\n  templateUrl: './general-tab.component.html',\r\n  styleUrls: ['./general-tab.component.scss']\r\n})\r\nexport class GeneralTabComponent implements OnInit {\r\n\r\n  loanDetails: any;\r\n  status: any;\r\n  loanSummaryColumns: string[] = ['Empty', 'Original', 'Paid', 'Waived', 'Written Off', 'Outstanding', 'Over Due'];\r\n  loanDetailsColumns: string[] = ['Key', 'Value'];\r\n  loanSummaryTableData: {\r\n    'property': string,\r\n    'original': string,\r\n    'paid': string,\r\n    'waived': string,\r\n    'writtenOff': string,\r\n    'outstanding': string,\r\n    'overdue': string\r\n  }[];\r\n  loanDetailsTableData: {\r\n    'key': string,\r\n    'value'?: string\r\n  }[];\r\n\r\n  /** Data source for loans summary table. */\r\n  dataSource: MatTableDataSource<any>;\r\n  detailsDataSource: MatTableDataSource<any>;\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any, }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.status = this.loanDetails.value;\r\n    if (this.loanDetails.summary) {\r\n      this.setloanSummaryTableData();\r\n      this.setloanDetailsTableData();\r\n    } else {\r\n      this.setloanNonDetailsTableData();\r\n    }\r\n  }\r\n\r\n  setloanSummaryTableData() {\r\n    this.loanSummaryTableData = [\r\n      {\r\n        'property': 'Principal',\r\n        'original': this.loanDetails.summary.principalDisbursed,\r\n        'paid': this.loanDetails.summary.principalPaid,\r\n        'waived': this.loanDetails.summary.principalWrittenOff,\r\n        'writtenOff': this.loanDetails.summary.principalOutstanding,\r\n        'outstanding': this.loanDetails.summary.principalOutstanding,\r\n        'overdue': this.loanDetails.summary.principalOverdue,\r\n\r\n    },\r\n    {\r\n        'property': 'Interest',\r\n        'original': this.loanDetails.summary.interestCharged,\r\n        'paid': this.loanDetails.summary.interestPaid,\r\n        'waived': this.loanDetails.summary.interestWaived,\r\n        'writtenOff': this.loanDetails.summary.interestWrittenOff,\r\n        'outstanding': this.loanDetails.summary.interestOutstanding,\r\n        'overdue': this.loanDetails.summary.interestOverdue,\r\n    },\r\n    {\r\n        'property': 'Fees',\r\n        'original': this.loanDetails.summary.feeChargesCharged,\r\n        'paid': this.loanDetails.summary.feeChargesPaid,\r\n        'waived': this.loanDetails.summary.feeChargesWaived,\r\n        'writtenOff': this.loanDetails.summary.feeChargesWrittenOff,\r\n        'outstanding': this.loanDetails.summary.feeChargesOutstanding,\r\n        'overdue': this.loanDetails.summary.feeChargesOverdue,\r\n    },\r\n    {\r\n        'property': 'Penalties',\r\n        'original': this.loanDetails.summary.penaltyChargesCharged,\r\n        'paid': this.loanDetails.summary.penaltyChargesPaid,\r\n        'waived': this.loanDetails.summary.penaltyChargesWaived,\r\n        'writtenOff': this.loanDetails.summary.penaltyChargesWrittenOff,\r\n        'outstanding': this.loanDetails.summary.penaltyChargesOutstanding,\r\n        'overdue': this.loanDetails.summary.penaltyChargesOverdue,\r\n    },\r\n    {\r\n        'property': 'Total',\r\n        'original': this.loanDetails.summary.totalExpectedRepayment,\r\n        'paid': this.loanDetails.summary.totalRepayment,\r\n        'waived': this.loanDetails.summary.totalWaived,\r\n        'writtenOff': this.loanDetails.summary.totalWrittenOff,\r\n        'outstanding': this.loanDetails.summary.totalOutstanding,\r\n        'overdue': this.loanDetails.summary.totalOverdue,\r\n    }\r\n    ];\r\n    this.dataSource = new MatTableDataSource(this.loanSummaryTableData);\r\n  }\r\n\r\n  setloanDetailsTableData() {\r\n\r\n    this.loanDetailsTableData = [\r\n      {\r\n        'key': 'Disbursement Date'\r\n      },\r\n      {\r\n        'key': 'Loan Purpose'\r\n      },\r\n      {\r\n        'key': 'Loan Officer'\r\n      },\r\n      {\r\n        'key': 'Currency'\r\n      },\r\n      {\r\n        'key': 'External Id'\r\n      },\r\n      {\r\n        'key': 'Proposed Amount',\r\n        'value': this.loanDetails.proposedPrincipal,\r\n      },\r\n      {\r\n        'key': 'Approved Amount',\r\n        'value': this.loanDetails.approvedPrincipal,\r\n      },\r\n      {\r\n        'key': 'Disburse Amount',\r\n        'value': this.loanDetails.principal,\r\n      },\r\n    ];\r\n    this.detailsDataSource = new MatTableDataSource(this.loanDetailsTableData);\r\n\r\n  }\r\n\r\n  setloanNonDetailsTableData() {\r\n    this.loanDetailsTableData = [\r\n      {\r\n        'key': 'Disbursement Date'\r\n      },\r\n      {\r\n        'key': 'Currency'\r\n      },\r\n      {\r\n        'key': 'Loan Officer'\r\n      },\r\n      {\r\n        'key': 'External Id'\r\n      }\r\n    ];\r\n    this.detailsDataSource = new MatTableDataSource(this.loanDetailsTableData);\r\n  }\r\n\r\n  showApprovedAmountBasedOnStatus() {\r\n    if (this.status === 'Submitted and pending approval' || this.status === 'Withdrawn by applicant' || this.status === 'Rejected') {\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showDisbursedAmountBasedOnStatus = function() {\r\n    if (this.status === 'Submitted and pending approval' || this.status === 'Withdrawn by applicant' || this.status === 'Rejected' ||\r\n        this.status === 'Approved') {\r\n        return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <ng-container *ngIf=\"loanDetails.summary\">\r\n    <h3>Performance History</h3>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"32px\" class=\"performance-history-container\">\r\n      <p>\r\n        # of Repayments :{{loanDetails?.numberOfRepayments}}\r\n      <p>\r\n        Maturity Date :{{loanDetails?.timeline.expectedMaturityDate | date}}\r\n      </p>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div *ngIf=\"loanDetails.summary\">\r\n\r\n    <h3> Loan Summary </h3>\r\n\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"Empty\">\r\n        <th mat-header-cell *matHeaderCellDef>  </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.property }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Original\">\r\n        <th mat-header-cell *matHeaderCellDef> Original </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.original | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Paid\">\r\n        <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.paid | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.waived | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Written Off\">\r\n        <th mat-header-cell *matHeaderCellDef> Written Off </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.writtenOff | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Outstanding\">\r\n        <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.outstanding | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Over Due\">\r\n        <th mat-header-cell *matHeaderCellDef> Over Due </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.overdue | number }} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"loanSummaryColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: loanSummaryColumns;\"></tr>\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"loanDetails.summary\">\r\n\r\n    <h3> Loan Details</h3>\r\n    <table mat-table [dataSource]=\"detailsDataSource\">\r\n\r\n      <ng-container matColumnDef=\"Key\">\r\n        <th mat-header-cell *matHeaderCellDef> Key </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.key }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Value\">\r\n        <th mat-header-cell *matHeaderCellDef> Value </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> \r\n          <ng-container *ngIf=\"ele.key === 'Disbursement Date'\" >\r\n            <span *ngIf=\"loanDetails.timeline.actualDisbursementDate\"> {{loanDetails.timeline.actualDisbursementDate | date}} </span>\r\n            <span *ngIf=\"!loanDetails.timeline.actualDisbursementDate\"> Not Available </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Loan Purpose'\">\r\n            <span *ngIf=\"loanDetails.loanPurchaseName\"> {{loanDetails.loanPurchaseName}} </span>\r\n            <span *ngIf=\"!loanDetails.loanPurchaseName\"> Not Available </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Loan Officer'\">\r\n            <span *ngIf=\"!loanDetails.loanOfficerName\"> Unassigned </span>\r\n            <span *ngIf=\"loanDetails.loanOfficerName\"> {{loanDetails.loanOfficerName}} &nbsp;\r\n              <span *ngIf=\"loanDetails.loanOfficerName\">\r\n                    <!-- <a ng-click=\"clickEvent('unassignloanofficer', loanDetails.id)\" *mifosxHasPermission = \"'REMOVELOANOFFICER_LOAN'\"><i\r\n                      class=\"fa fa-times\"></i></a> -->\r\n              </span>\r\n            </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Currency'\">\r\n            <span> {{loanDetails.currency.name }} {{loanDetails.currency.code}} </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'External Id'\">\r\n            <span *ngIf=\"loanDetails.externalId\"> {{loanDetails.externalId}} </span>\r\n            <span *ngIf=\"!loanDetails.externalId\"> Not Available </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Proposed Amount' || ele.key === 'Approved Amount' || ele.key === 'Disburse Amount'\">\r\n            {{ ele.value }}\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"loanDetailsColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: loanDetailsColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"!loanDetails.summary\">\r\n\r\n    <h3> Loan Details </h3>\r\n    <table mat-table [dataSource]=\"detailsDataSource\">\r\n\r\n      <ng-container matColumnDef=\"Key\">\r\n        <th mat-header-cell *matHeaderCellDef> Key </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.key }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Value\">\r\n        <th mat-header-cell *matHeaderCellDef> Value </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> \r\n          <ng-container *ngIf=\"ele.key === 'Disbursement Date'\" >\r\n            <span *ngIf=\"loanDetails.timeline.actualDisbursementDate\"> {{loanDetails.timeline.actualDisbursementDate | date}} </span>\r\n            <span *ngIf=\"!loanDetails.timeline.actualDisbursementDate\"> Not Available </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Loan Officer'\">\r\n            <span *ngIf=\"!loanDetails.loanOfficerName\"> Unassigned </span>\r\n            <span *ngIf=\"loanDetails.loanOfficerName\"> {{loanDetails.loanOfficerName}} &nbsp;\r\n              <span *ngIf=\"loanDetails.loanOfficerName\">\r\n                    <!-- <a ng-click=\"clickEvent('unassignloanofficer', loanDetails.id)\" *mifosxHasPermission = \"'REMOVELOANOFFICER_LOAN'\"><i\r\n                      class=\"fa fa-times\"></i></a> -->\r\n              </span>\r\n            </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'Currency'\">\r\n            <span> {{loanDetails.currency.name }} </span>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"ele.key === 'External Id'\">\r\n            <span *ngIf=\"loanDetails.externalId\"> {{loanDetails.externalId}} </span>\r\n            <span *ngIf=\"!loanDetails.externalId\"> Not Available </span>\r\n          </ng-container>\r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"loanDetailsColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: loanDetailsColumns;\"></tr>\r\n\r\n    </table>\r\n  </div>\r\n\r\n  <div *ngIf=\"!loanDetails.summary\">\r\n    <h3> Loan Purpose </h3>\r\n    <div class=\"container\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n        <div fxFlexFill>\r\n            <span fxFlex=\"50%\">Loan Purpose:</span>\r\n            <span fxFlex=\"50%\" *ngIf=\"loanDetails.loanPurposeName\">\r\n              {{ loanDetails.loanPurposeName }}\r\n            </span>\r\n            <span fxFlex=\"50%\" *ngIf=\"!loanDetails.loanPurposeName\">\r\n              Not Provided\r\n            </span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n          <span fxFlex=\"50%\">Proposed Amount:</span>\r\n          <span fxFlex=\"50%\">{{ loanDetails.proposedPrincipal | number}}</span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"showApprovedAmountBasedOnStatus()\">\r\n          <span fxFlex=\"50%\">Approved Amount:</span>\r\n          <span fxFlex=\"50%\">{{ loanDetails.approvedPrincipal | number }}</span>\r\n        </div>\r\n\r\n        <div fxFlexFill *ngIf=\"showDisbursedAmountBasedOnStatus()\">\r\n          <span fxFlex=\"50%\">Disburse Amount:</span>\r\n          <span fxFlex=\"50%\">{{ loanDetails.principal | number }}</span>\r\n        </div>\r\n\r\n        <div fxFlexFill>\r\n          <span fxFlex=\"50%\">Arrears By:</span>\r\n          <span fxFlex=\"50%\"> Not Provided</span>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\n\r\n/**\r\n * Add Collateral component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-add-collateral',\r\n  templateUrl: './add-collateral.component.html',\r\n  styleUrls: ['./add-collateral.component.scss']\r\n})\r\nexport class AddCollateralComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Collateral form. */\r\n  collateralForm: FormGroup;\r\n  /** Loan Id. */\r\n  loanId: string;\r\n\r\n  /**\r\n   * Retrieve data from `Resolver`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {Router} router Router.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {LoansService} LoansService loans service.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private loanService: LoansService ) { }\r\n\r\n  ngOnInit() {\r\n    this.createAddCollateralForm();\r\n  }\r\n\r\n  /**\r\n   * Set Collateral form.\r\n   */\r\n  createAddCollateralForm() {\r\n    this.collateralForm = this.formBuilder.group({\r\n      'collateralTypeId': ['', Validators.required],\r\n      'value': ['', Validators.required],\r\n      'description': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits collateral form.\r\n   */\r\n  submit() {\r\n    const collateralTypeId = this.collateralForm.value.collateralTypeId;\r\n    this.collateralForm.patchValue({\r\n      'collateralTypeId': collateralTypeId\r\n    });\r\n    const loanId = this.route.parent.snapshot.params['loanId'];\r\n    const collateralForm = this.collateralForm.value;\r\n    collateralForm.locale = 'en';\r\n    this.loanService.createLoanCollateral(loanId, collateralForm).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"collateralForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Collateral Type</mat-label>\r\n            <mat-select required formControlName=\"collateralTypeId\">\r\n              <mat-option *ngFor=\"let collateral of dataObject.allowedCollateralTypes\" [value]=\"collateral.id\">\r\n                {{ collateral.name }}</mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"collateralForm.controls.collateralTypeId.hasError('required')\">\r\n              Collateral type <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Value</mat-label>\r\n            <input matInput required formControlName=\"value\">\r\n            <mat-error *ngIf=\"collateralForm.controls.value.hasError('required')\">\r\n              Value is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description\"></textarea>\r\n          </mat-form-field>\r\n\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!collateralForm.valid\"\r\n            *mifosxHasPermission=\"'CREATE_COLLATERAL'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../../loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Create Add Loan Charge component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-add-loan-charge',\r\n  templateUrl: './add-loan-charge.component.html',\r\n  styleUrls: ['./add-loan-charge.component.scss']\r\n})\r\nexport class AddLoanChargeComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Add Loan Charge form. */\r\n  loanChargeForm: FormGroup;\r\n  /** loan charge options. */\r\n  loanChargeOptions: {\r\n    id: number;\r\n    name: string;\r\n    amount: number;\r\n    currency: {\r\n      name: string;\r\n    };\r\n    chargeCalculationType: {\r\n      value: any;\r\n    };\r\n    chargeTimeType: {\r\n      id: number;\r\n      value: any;\r\n    };\r\n  }[];\r\n  /** loan Id of the loan account. */\r\n  loanId: string;\r\n\r\n  /**\r\n   * Retrieves the loan charge template data from `resolve`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {AccountingService} accountingService Accounting Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private loansService: LoansService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { actionButtonData: any }) => {\r\n      this.loanChargeOptions = data.actionButtonData.chargeOptions;\r\n    });\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Loan Charge form.\r\n   */\r\n  ngOnInit() {\r\n    this.createLoanChargeForm();\r\n    this.loanChargeForm.controls.chargeId.valueChanges.subscribe(chargeId => {\r\n      const chargeDetails = this.loanChargeOptions.find(option => {\r\n        return option.id === chargeId;\r\n      });\r\n      if (chargeDetails.chargeTimeType.id === 2) {\r\n        this.loanChargeForm.addControl('dueDate', new FormControl('', Validators.required));\r\n      } else {\r\n        this.loanChargeForm.removeControl('dueDate');\r\n      }\r\n      this.loanChargeForm.patchValue({\r\n        'amount': chargeDetails.amount,\r\n        'chargeCalculation': chargeDetails.chargeCalculationType.value,\r\n        'chargeTime': chargeDetails.chargeTimeType.value\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the Loan Charge form.\r\n   */\r\n  createLoanChargeForm() {\r\n    this.loanChargeForm = this.formBuilder.group({\r\n      'chargeId': ['', Validators.required],\r\n      'amount': ['', Validators.required],\r\n      'chargeCalculation': [{ value: '', disabled: true }],\r\n      'chargeTime': [{ value: '', disabled: true }]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const prevDueDate: Date = this.loanChargeForm.value.dueDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.loanChargeForm.patchValue({\r\n      dueDate: this.datePipe.transform(prevDueDate, dateFormat)\r\n    });\r\n    const loanCharge = this.loanChargeForm.value;\r\n    loanCharge.locale = this.settingsService.language.code;\r\n    loanCharge.dateFormat = dateFormat;\r\n    this.loansService.createLoanCharge(this.loanId, 'charges', loanCharge).subscribe(res => {\r\n      this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"loanChargeForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n          <mat-form-field>\r\n            <mat-label>Charge</mat-label>\r\n            <mat-select required formControlName=\"chargeId\">\r\n              <mat-option *ngFor=\"let loanCharge of loanChargeOptions\" [value]=\"loanCharge.id\">\r\n                {{ loanCharge.name + ' (' + loanCharge?.currency.name + ')' }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"loanChargeForm.controls.chargeId.hasError('required')\">\r\n              Charge is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Amount</mat-label>\r\n            <input type=number required matInput formControlName=\"amount\" />\r\n            <mat-error *ngIf=\"loanChargeForm.controls.amount.hasError('required')\">\r\n              Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Charge Calculation</mat-label>\r\n            <input matInput formControlName=\"chargeCalculation\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Charge Time</mat-label>\r\n            <input matInput formControlName=\"chargeTime\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf=\"loanChargeForm.controls['dueDate']\">\r\n            <mat-label>Due On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\" required\r\n              formControlName=\"dueDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dueDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"loanChargeForm.controls.dueDate.hasError('required')\">\r\n              Due Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!loanChargeForm.valid\"\r\n            *mifosxHasPermission=\"'CREATE_LOANCHARGE'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Approve Loan component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-approve-loan',\r\n  templateUrl: './approve-loan.component.html',\r\n  styleUrls: ['./approve-loan.component.scss']\r\n})\r\nexport class ApproveLoanComponent implements OnInit {\r\n\r\n  /** Approve Loan form. */\r\n  approveLoanForm: FormGroup;\r\n  /** Loan data. */\r\n  loanData: any = new Object();\r\n  /** Association Data */\r\n  associationData: any;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Loan Id */\r\n  loanId: any;\r\n\r\n  /**\r\n   * Retrieve data from `Resolver`.\r\n   * @param formBuilder Form Builder.\r\n   * @param route Activated Route.\r\n   * @param datePipe Date Pipe.\r\n   * @param loanService Loan Service.\r\n   * @param router Router.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private datePipe: DatePipe,\r\n    private loanService: LoansService,\r\n    private router: Router,\r\n    private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { actionButtonData: any }) => {\r\n      this.loanData = data.actionButtonData;\r\n    });\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setApproveLoanForm();\r\n    this.loanService.getApproveAssociationsDetails(this.loanId).subscribe((response: any) => {\r\n      this.associationData = response;\r\n      this.approveLoanForm.patchValue({\r\n        'expectedDisbursementDate': new Date(response.timeline.expectedDisbursementDate)\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set Approve Loan form.\r\n   */\r\n  setApproveLoanForm() {\r\n    this.approveLoanForm = this.formBuilder.group({\r\n      'approvedOnDate': [this.loanData.approvalDate && new Date(this.loanData.approvalDate), Validators.required],\r\n      'expectedDisbursementDate': [''],\r\n      'approvedLoanAmount': [this.loanData.approvalAmount, Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits Approve form.\r\n   */\r\n  submit() {\r\n    const local = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const approvedOnDate = this.approveLoanForm.value.approvedOnDate;\r\n    const expectedDisbursementDate = this.approveLoanForm.value.expectedDisbursementDate;\r\n    this.approveLoanForm.patchValue({\r\n      approvedOnDate: this.datePipe.transform(approvedOnDate, dateFormat),\r\n      expectedDisbursementDate: this.datePipe.transform(expectedDisbursementDate, dateFormat)\r\n    });\r\n    const approveLoanFormData = {\r\n      ... this.approveLoanForm.value,\r\n      dateFormat,\r\n      local\r\n    };\r\n    this.loanService.loanActionButtons(this.loanId, 'approve', approveLoanFormData).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"approveLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved On</mat-label>\r\n            <input matInput [min]=\"minDate\" [matDatepicker]=\"approvedDatePicker\" required\r\n              formControlName=\"approvedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"approvedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #approvedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"approveLoanForm.controls.approvedOnDate.hasError('required')\">\r\n              Approved Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Expected disbursement on</mat-label>\r\n            <input matInput [min]=\"minDate\" [matDatepicker]=\"disbursementDatePicker\"\r\n              formControlName=\"expectedDisbursementDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"disbursementDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #disbursementDatePicker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Approved Amount</mat-label>\r\n            <input matInput type=\"number\" formControlName=\"approvedLoanAmount\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput type=\"number\" required formControlName=\"approvedLoanAmount\" required>\r\n            <mat-error *ngIf=\"approveLoanForm.controls.approvedLoanAmount.hasError('required')\">\r\n              Transaction Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!approveLoanForm.valid\"\r\n            *mifosxHasPermission=\"'APPROVE_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-assign-loan-officer',\r\n  templateUrl: './assign-loan-officer.component.html',\r\n  styleUrls: ['./assign-loan-officer.component.scss']\r\n})\r\nexport class AssignLoanOfficerComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  loanOfficers: any[];\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Assign loan Officer form. */\r\n  assignOfficerForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} systemService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  /**\r\n   * Creates the assign officer form.\r\n   */\r\n  ngOnInit() {\r\n    this.createassignOfficerForm();\r\n    this.loanOfficers = this.dataObject.loanOfficerOptions;\r\n  }\r\n\r\n  /**\r\n   * Creates the create close form.\r\n   */\r\n  createassignOfficerForm() {\r\n    this.assignOfficerForm = this.formBuilder.group({\r\n      'toLoanOfficerId': ['', Validators.required],\r\n      'assignmentDate': [new Date(), Validators.required]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const assignmentDate = this.assignOfficerForm.value.assignmentDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.assignOfficerForm.patchValue({\r\n      assignmentDate: this.datePipe.transform(assignmentDate, dateFormat)\r\n    });\r\n    const assignForm = this.assignOfficerForm.value;\r\n    assignForm.locale = this.settingsService.language.code;\r\n    assignForm.dateFormat = dateFormat;\r\n    assignForm.fromLoanOfficerId = this.dataObject.loanOfficerId || '';\r\n\r\n    this.loanService.loanActionButtons(this.loanId, 'assignLoanOfficer', assignForm)\r\n      .subscribe((response: any) => {\r\n        this.router.navigate([`../../general`], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"assignOfficerForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label> To Loan Officer</mat-label>\r\n            <mat-select required formControlName=\"toLoanOfficerId\">\r\n              <mat-option *ngFor=\"let loanOfficer of loanOfficers\" [value]=\"loanOfficer.id\">\r\n                {{ loanOfficer.displayName }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"assignOfficerForm.controls.toLoanOfficerId.hasError('required')\">\r\n              Loan Officer is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Assignment Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"assignOnDatePicker\" required\r\n              formControlName=\"assignmentDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"assignOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #assignOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"assignOfficerForm.controls.assignmentDate.hasError('required')\">\r\n              Assignment Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!assignOfficerForm.valid\"\r\n            *mifosxHasPermission=\"'BULKREASSIGN_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-close-as-rescheduled',\r\n  templateUrl: './close-as-rescheduled.component.html',\r\n  styleUrls: ['./close-as-rescheduled.component.scss']\r\n})\r\nexport class CloseAsRescheduledComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Close form. */\r\n  closeLoanForm: FormGroup;\r\n  /** Loan Id */\r\n  loanId: any;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} systemService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  /**\r\n   * Creates the close form.\r\n   */\r\n  ngOnInit() {\r\n    this.createCloseForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the create close form.\r\n   */\r\n  createCloseForm() {\r\n    this.closeLoanForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(this.dataObject.date) || new Date(), Validators.required],\r\n      'note': []\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the close form and creates a close,\r\n   * if successful redirects to view created close.\r\n   */\r\n  submit() {\r\n    const transactionDate = this.closeLoanForm.value.transactionDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.closeLoanForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat)\r\n    });\r\n    const closeForm = this.closeLoanForm.value;\r\n    closeForm.locale = this.settingsService.language.code;\r\n    closeForm.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(this.loanId, closeForm, 'close-rescheduled')\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeLoanForm.controls.transactionDate.hasError('required')\">\r\n              Closed Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!closeLoanForm.valid\"\r\n            *mifosxHasPermission=\"'CLOSEASRESCHEDULED_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ClientsService } from 'app/clients/clients.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Create Guarantor Action\r\n */\r\n@Component({\r\n  selector: 'mifosx-create-guarantor',\r\n  templateUrl: './create-guarantor.component.html',\r\n  styleUrls: ['./create-guarantor.component.scss']\r\n})\r\nexport class CreateGuarantorComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** New Guarantor Form */\r\n  newGuarantorForm: FormGroup;\r\n  /** Loan ID */\r\n  loanId: string;\r\n  /** Relation Types */\r\n  relationTypes: any;\r\n  /** Show Client Details Form */\r\n  showClientDetailsForm = false;\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Client data. */\r\n  clientsData: any = [];\r\n  /** Account Options */\r\n  accountOptions: any = [];\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private clientsService: ClientsService,\r\n    private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createNewGuarantorForm();\r\n    this.setNewGuarantorDetailsForm();\r\n    this.buildDependencies();\r\n  }\r\n\r\n  /** Create Guarantor Details Form */\r\n  createNewGuarantorForm() {\r\n    this.newGuarantorForm = this.formBuilder.group({\r\n      'existingClient': [''],\r\n      'name': ['', Validators.required],\r\n      'clientRelationshipTypeId': [''],\r\n      'savingsId': [''],\r\n      'amount': ['']\r\n    });\r\n  }\r\n\r\n  /** Sets Guarantor Details Form */\r\n  setNewGuarantorDetailsForm() {\r\n    this.relationTypes = this.dataObject.allowedClientRelationshipTypes;\r\n    this.newGuarantorForm.patchValue({\r\n      existingClient: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add guarantor detail fields to the UI.\r\n   */\r\n  buildDependencies() {\r\n    this.newGuarantorForm.get('existingClient').valueChanges.subscribe(() => {\r\n      this.showClientDetailsForm = !this.showClientDetailsForm;\r\n      if (this.showClientDetailsForm) {\r\n        this.newGuarantorForm.addControl('firstname', new FormControl(''));\r\n        this.newGuarantorForm.addControl('lastname', new FormControl(''));\r\n        this.newGuarantorForm.addControl('dob', new FormControl(''));\r\n        this.newGuarantorForm.addControl('addressLine1', new FormControl(''));\r\n        this.newGuarantorForm.addControl('addressLine2', new FormControl(''));\r\n        this.newGuarantorForm.addControl('city', new FormControl(''));\r\n        this.newGuarantorForm.addControl('zip', new FormControl(''));\r\n        this.newGuarantorForm.addControl('mobileNumber', new FormControl(''));\r\n        this.newGuarantorForm.addControl('housePhoneNumber', new FormControl(''));\r\n        this.newGuarantorForm.removeControl('name');\r\n        this.newGuarantorForm.removeControl('savingsId');\r\n        this.newGuarantorForm.removeControl('amount');\r\n      } else {\r\n        this.newGuarantorForm.addControl('name', new FormControl(''));\r\n        this.newGuarantorForm.addControl('savingsId', new FormControl(''));\r\n        this.newGuarantorForm.addControl('amount', new FormControl(''));\r\n        this.newGuarantorForm.removeControl('firstname');\r\n        this.newGuarantorForm.removeControl('lastname');\r\n        this.newGuarantorForm.removeControl('dob');\r\n        this.newGuarantorForm.removeControl('addressLine1');\r\n        this.newGuarantorForm.removeControl('addressLine2');\r\n        this.newGuarantorForm.removeControl('city');\r\n        this.newGuarantorForm.removeControl('zip');\r\n        this.newGuarantorForm.removeControl('mobileNumber');\r\n        this.newGuarantorForm.removeControl('housePhoneNumber');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribes to Clients search filter:\r\n   */\r\n  ngAfterViewInit() {\r\n    if (this.newGuarantorForm.value.existingClient) {\r\n      this.newGuarantorForm.get('name').valueChanges.subscribe((value: string) => {\r\n        if (value.length >= 2) {\r\n          this.clientsService.getFilteredClients('displayName', 'ASC', true, value)\r\n            .subscribe((data: any) => {\r\n              this.clientsData = data.pageItems;\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  clientSelected(clientDetails: any) {\r\n    this.accountOptions = [];\r\n    this.loanService.guarantorAccountResource(this.loanId, clientDetails.id).subscribe((response: any) => {\r\n      this.accountOptions = response.accountLinkingOptions;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Displays Client name in form control input.\r\n   * @param {any} client Client data.\r\n   * @returns {string} Client name if valid otherwise undefined.\r\n   */\r\n  displayClient(client: any): string | undefined {\r\n    return client ? client.displayName : undefined;\r\n  }\r\n\r\n  /** Submits the new guarantor details form */\r\n  submit() {\r\n    const prevdob: Date = this.newGuarantorForm.value.dob;\r\n    const guarantorTypeId: number = this.newGuarantorForm.value.existingClient ? this.dataObject.guarantorTypeOptions[0].id : this.dataObject.guarantorTypeOptions[2].id;\r\n    // TODO: Update once language and date settings are setup\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const newGuarantorData = {\r\n      ... this.newGuarantorForm.value,\r\n      locale,\r\n      guarantorTypeId\r\n    };\r\n\r\n    if (this.newGuarantorForm.value.existingClient) {\r\n      newGuarantorData['entityId'] = this.newGuarantorForm.controls.name.value.id;\r\n    } else {\r\n      newGuarantorData['dob'] = this.datePipe.transform(prevdob, dateFormat),\r\n      newGuarantorData['dateFormat'] = dateFormat;\r\n    }\r\n\r\n    delete newGuarantorData.existingClient;\r\n    delete newGuarantorData.name;\r\n\r\n    this.loanService.createNewGuarantor(this.loanId, newGuarantorData)\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"newGuarantorForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-checkbox labelPosition=\"before\" formControlName=\"existingClient\">\r\n            Existing Client\r\n          </mat-checkbox>\r\n\r\n          <ng-container *ngIf=\"!showClientDetailsForm\">\r\n\r\n            <mat-form-field fxFlex=\"30%\">\r\n              <mat-label>Name</mat-label>\r\n              <input matInput formControlName=\"name\" [matAutocomplete]=\"clientsAutocomplete\">\r\n              <mat-error *ngIf=\"newGuarantorForm.controls.name.hasError('required')\">\r\n                Name <strong>is required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-autocomplete autoActiveFirstOption #clientsAutocomplete=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n              (optionSelected)='clientSelected($event.option.value)'>\r\n              <mat-option *ngFor=\"let client of clientsData\" [value]=\"client\">\r\n                {{ client.displayName }}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Relationship</mat-label>\r\n              <mat-select formControlName=\"clientRelationshipTypeId\">\r\n                <mat-option *ngFor=\"let relationType of relationTypes\" [value]=\"relationType.id\">\r\n                  {{ relationType.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <ng-container *ngIf=\"accountOptions.length > 0\">\r\n\r\n              <mat-form-field>\r\n                <mat-label>Account</mat-label>\r\n                <mat-select formControlName=\"savingsId\">\r\n                  <mat-option *ngFor=\"let accountOption of accountOptions\" [value]=\"accountOption.id\">\r\n                    {{ accountOption.productName }} - {{ accountOption.accountNo }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                <mat-label>Amount</mat-label>\r\n                <input type=\"number\" matInput required formControlName=\"amount\" required>\r\n              </mat-form-field>\r\n\r\n            </ng-container>\r\n\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"showClientDetailsForm\">\r\n\r\n            <mat-form-field>\r\n              <mat-label>Relationship</mat-label>\r\n              <mat-select formControlName=\"clientRelationshipTypeId\">\r\n                <mat-option *ngFor=\"let relationType of relationTypes\" [value]=\"relationType.id\">\r\n                  {{ relationType.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>First Name</mat-label>\r\n              <input matInput required formControlName=\"firstname\" required>\r\n              <mat-error *ngIf=\"newGuarantorForm.controls.firstname.hasError('required')\">\r\n                First Name <strong>is required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Last Name</mat-label>\r\n              <input matInput required formControlName=\"lastname\" required>\r\n              <mat-error *ngIf=\"newGuarantorForm.controls.lastname.hasError('required')\">\r\n                Last Name <strong>is required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Date Of Birth</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dobDatePicker\" formControlName=\"dob\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"dobDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dobDatePicker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Address Line 1</mat-label>\r\n              <input matInput formControlName=\"addressLine1\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Address Line 2</mat-label>\r\n              <input matInput formControlName=\"addressLine2\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>City</mat-label>\r\n              <input matInput formControlName=\"city\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Zip</mat-label>\r\n              <input matInput formControlName=\"zip\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Mobile</mat-label>\r\n              <input type=\"number\" matInput formControlName=\"mobileNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Residence Phone #</mat-label>\r\n              <input type=\"number\" matInput formControlName=\"housePhoneNumber\">\r\n            </mat-form-field>\r\n\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!newGuarantorForm.valid\"\r\n            *mifosxHasPermission=\"'CREATE_GUARANTOR'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n    <ng-container *ngIf=\"!(newGuarantorForm.controls.name === undefined)\">\r\n      <div class=\"mat-table\">\r\n        <div class=\"mat-header-row\">\r\n          <div class=\"mat-header-cell\">Client Details</div>\r\n        </div>\r\n        <div class=\"mat-row\">\r\n          <div class=\"mat-cell\">Name</div>\r\n          <div class=\"mat-cell\">{{newGuarantorForm.controls.name.value.displayName}}</div>\r\n        </div>\r\n        <div class=\"mat-row\">\r\n          <div class=\"mat-cell\">Id</div>\r\n          <div class=\"mat-cell\">{{newGuarantorForm.controls.name.value.id}}</div>\r\n        </div>\r\n        <div class=\"mat-row\">\r\n          <div class=\"mat-cell\">Office</div>\r\n          <div class=\"mat-cell\">{{newGuarantorForm.controls.name.value.officeName}}</div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Service. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Disburse To Savings component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-disburse-loan-account',\r\n  templateUrl: './disburse-loan-account.component.html',\r\n  styleUrls: ['./disburse-loan-account.component.scss']\r\n})\r\nexport class DisburseLoanAccountComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Disbursement Loan form. */\r\n  disbursementForm: FormGroup;\r\n\r\n  /**\r\n   * Get data from `Resolver`.\r\n   * @param {FormBuilder} formBuilder FormBuilder.\r\n   * @param {ActivatedRoute} route ActivatedRoute.\r\n   * @param {Router} router Router.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private loanService: LoansService,\r\n              private settingsService: SettingsService) { }\r\n\r\n  ngOnInit() {\r\n    this.setDisbursementToSavingsForm();\r\n  }\r\n\r\n  /**\r\n   * Set Disbursement Loan form.\r\n   */\r\n  setDisbursementToSavingsForm() {\r\n    this.disbursementForm = this.formBuilder.group({\r\n      'actualDisbursementDate': [new Date(), Validators.required],\r\n      'transactionAmount': [this.dataObject.amount, Validators.required],\r\n      'note': ['', Validators.required]\r\n    });\r\n    if (this.dataObject.fixedEmiAmount !== null || this.dataObject.fixedEmiAmount !== undefined) {\r\n      this.disbursementForm.addControl('fixedEmiAmount', new FormControl(this.dataObject.fixedEmiAmount, [Validators.required]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submit Disburse Form.\r\n   */\r\n  submit() {\r\n    const actualDisbursementDate = this.disbursementForm.value.actualDisbursementDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.disbursementForm.patchValue({\r\n      actualDisbursementDate: this.datePipe.transform(actualDisbursementDate, dateFormat)\r\n    });\r\n    const loanId = this.route.parent.snapshot.params['loanId'];\r\n    const disbursementForm = this.disbursementForm.value;\r\n    disbursementForm.locale = this.settingsService.language.code;\r\n    disbursementForm.dateFormat = dateFormat;\r\n    this.loanService.loanActionButtons(loanId, 'disbursetosavings', disbursementForm).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], {relativeTo: this.route});\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"disbursementForm\" (ngSubmit)=\"submit()\">\r\n    \r\n      <mat-card-content>\r\n    \r\n        <div fxLayout=\"column\">\r\n    \r\n          <mat-form-field>\r\n            <mat-label>Disbursement On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"disbursementDatePicker\" required\r\n              formControlName=\"actualDisbursementDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"disbursementDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #disbursementDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"disbursementForm.controls.actualDisbursementDate.hasError('required')\">\r\n              Disbursement Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n    \r\n          <mat-form-field>\r\n            <mat-label>Transaction amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"disbursementForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n    \r\n          <mat-form-field *ngIf=\"dataObject.fixedEmiAmount !== null || dataObject.fixedEmiAmount !== undefined\">\r\n            <mat-label>Fixed EMI amount</mat-label>\r\n            <input matInput required formControlName=\"fixedEmiAmount\">\r\n            <mat-error *ngIf=\"disbursementForm.controls.fixedEmiAmount.hasError('required')\">\r\n              Fixed EMI Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n    \r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n    \r\n        </div>\r\n    \r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!disbursementForm.valid\"\r\n            *mifosxHasPermission=\"'DISBURSETOSAVINGS_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n    \r\n      </mat-card-content>\r\n    \r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Disburse Loan Option\r\n */\r\n@Component({\r\n  selector: 'mifosx-disburse',\r\n  templateUrl: './disburse.component.html',\r\n  styleUrls: ['./disburse.component.scss']\r\n})\r\nexport class DisburseComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Payment Type Options */\r\n  paymentTypes: any;\r\n  /** Show payment details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Disbursement Loan Form */\r\n  disbursementLoanForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates the disbursement loan form\r\n   * and initialize with the required values\r\n   */\r\n  ngOnInit() {\r\n    this.createDisbursementLoanForm();\r\n    this.setDisbursementLoanDetails();\r\n  }\r\n\r\n  /**\r\n   * Creates the disbursement loan form.\r\n   */\r\n  createDisbursementLoanForm() {\r\n    this.disbursementLoanForm = this.formBuilder.group({\r\n      'actualDisbursementDate': [new Date(), Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': '',\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  setDisbursementLoanDetails() {\r\n    this.paymentTypes = this.dataObject.paymentTypeOptions;\r\n    this.disbursementLoanForm.patchValue({\r\n      transactionAmount: this.dataObject.amount,\r\n      // actualDisbursementDate: new Date(this.dataObject.date)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.showPaymentDetails = !this.showPaymentDetails;\r\n    if (this.showPaymentDetails) {\r\n      this.disbursementLoanForm.addControl('accountNumber', new FormControl(''));\r\n      this.disbursementLoanForm.addControl('checkNumber', new FormControl(''));\r\n      this.disbursementLoanForm.addControl('routingCode', new FormControl(''));\r\n      this.disbursementLoanForm.addControl('receiptNumber', new FormControl(''));\r\n      this.disbursementLoanForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.disbursementLoanForm.removeControl('accountNumber');\r\n      this.disbursementLoanForm.removeControl('checkNumber');\r\n      this.disbursementLoanForm.removeControl('routingCode');\r\n      this.disbursementLoanForm.removeControl('receiptNumber');\r\n      this.disbursementLoanForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /** Submits the disbursement form */\r\n  submit() {\r\n    const prevActualDisbursementDate: Date = this.disbursementLoanForm.value.actualDisbursementDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.disbursementLoanForm.patchValue({\r\n      actualDisbursementDate: this.datePipe.transform(prevActualDisbursementDate, dateFormat)\r\n    });\r\n    const disbursementLoanData = this.disbursementLoanForm.value;\r\n    disbursementLoanData.locale = this.settingsService.language.code;\r\n    disbursementLoanData.dateFormat = dateFormat;\r\n    this.loanService.loanActionButtons(this.loanId, 'disburse', disbursementLoanData )\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"disbursementLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Disbursed On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"actualDisbursementDatePicker\" required\r\n              formControlName=\"actualDisbursementDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"actualDisbursementDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #actualDisbursementDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"disbursementLoanForm.controls.actualDisbursementDate.hasError('required')\">\r\n              Disbursed On Date<strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"disbursementLoanForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\">\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"addPaymentDetails()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"checkNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!disbursementLoanForm.valid\"\r\n            *mifosxHasPermission=\"'DISBURSE_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-foreclosure',\r\n  templateUrl: './foreclosure.component.html',\r\n  styleUrls: ['./foreclosure.component.scss']\r\n})\r\nexport class ForeclosureComponent implements OnInit {\r\n\r\n\r\n  loanId: any;\r\n  foreclosureForm: FormGroup;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  foreclosuredata: any;\r\n  paymentTypes: any;\r\n\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} systemService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.createforeclosureForm();\r\n    this.onChanges();\r\n  }\r\n\r\n  createforeclosureForm() {\r\n    this.foreclosureForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(), Validators.required],\r\n      'outstandingPrincipalPortion': [{value: '', disabled: true}],\r\n      'outstandingInterestPortion': [{value: '', disabled: true}],\r\n      'outstandingFeeChargesPortion': [{value: '', disabled: true}],\r\n      'outstandingPenaltyChargesPortion': [{value: '', disabled: true}],\r\n      'transactionAmount': [{value: '', disabled: true}],\r\n      'interestAccruedAfterDeath': '',\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  onChanges(): void {\r\n    this.foreclosureForm.get('transactionDate').valueChanges.subscribe(val => {\r\n      this.retrieveLoanForeclosureTemplate(val);\r\n    });\r\n\r\n  }\r\n\r\n  retrieveLoanForeclosureTemplate(val: any) {\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    const transactionDateFormatted = this.datePipe.transform(val, dateFormat);\r\n    const data = {\r\n      command: 'foreclosure',\r\n      dateFormat: this.settingsService.dateFormat,\r\n      locale: this.settingsService.language.code,\r\n      transactionDate: transactionDateFormatted\r\n    };\r\n    this.loanService.getForeclosureData(this.loanId, data)\r\n    .subscribe((response: any) => {\r\n      this.foreclosuredata = response;\r\n\r\n      this.foreclosureForm.patchValue({\r\n        outstandingPrincipalPortion: this.foreclosuredata.principalPortion,\r\n        outstandingInterestPortion: this.foreclosuredata.interestPortion,\r\n        outstandingFeeChargesPortion: this.foreclosuredata.feeChargesPortion,\r\n        outstandingPenaltyChargesPortion: this.foreclosuredata.penaltyChargesPortion,\r\n        foreClosureChargesPortion: this.foreclosuredata.foreClosureChargesPortion\r\n      });\r\n      if (this.foreclosuredata.unrecognizedIncomePortion) {\r\n        this.foreclosureForm.patchValue({\r\n          interestAccruedAfterDeath: this.foreclosuredata.unrecognizedIncomePortion\r\n        });\r\n      }\r\n      this.calculateTransactionAmount();\r\n      this.paymentTypes = this.foreclosuredata.paymentTypeOptions;\r\n    });\r\n  }\r\n\r\n  calculateTransactionAmount() {\r\n    let transactionAmount = 0;\r\n    transactionAmount += parseFloat(this.foreclosuredata.principalPortion);\r\n    transactionAmount += parseFloat(this.foreclosuredata.interestPortion);\r\n    transactionAmount += parseFloat(this.foreclosuredata.feeChargesPortion);\r\n    transactionAmount += parseFloat(this.foreclosuredata.penaltyChargesPortion);\r\n    this.foreclosureForm.patchValue({\r\n      transactionAmount: transactionAmount\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const transactionDate = this.foreclosureForm.value.transactionDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.foreclosureForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat)\r\n    });\r\n    const formData = {\r\n      transactionDate: this.foreclosureForm.value.transactionDate,\r\n      locale: this.settingsService.language.code,\r\n      dateFormat: dateFormat,\r\n      note: this.foreclosureForm.value.note\r\n    };\r\n\r\n    this.loanService.loanForclosureData(this.loanId, formData)\r\n      .subscribe((response: any) => {\r\n        this.router.navigate([`../../general`], { relativeTo: this.route });\r\n      });\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"foreclosureForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionsDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"transactionsDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #transactionsDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"foreclosureForm.controls.transactionDate.hasError('required')\">\r\n              Transaction Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Principal</mat-label>\r\n            <input matInput required formControlName=\"outstandingPrincipalPortion\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Interest</mat-label>\r\n            <input matInput required formControlName=\"outstandingInterestPortion\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Fee Amount</mat-label>\r\n            <input matInput required formControlName=\"outstandingFeeChargesPortion\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Penalty Amount</mat-label>\r\n            <input matInput required formControlName=\"outstandingPenaltyChargesPortion\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!foreclosureForm.valid\"\r\n            *mifosxHasPermission=\"'FORECLOSURE_LOAN'\">Foreclosure</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/**\r\n * Loan Account Actions component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-loan-account-actions',\r\n  templateUrl: './loan-account-actions.component.html',\r\n  styleUrls: ['./loan-account-actions.component.scss']\r\n})\r\nexport class LoanAccountActionsComponent {\r\n\r\n  /** flag object to store possible actions and render appropriate UI to the user */\r\n  actions: { 'Close': boolean,\r\n            'Undo Approval': boolean,\r\n            'Write Off': boolean,\r\n            'Add Collateral': boolean,\r\n            'Assign Loan Officer': boolean,\r\n            'Foreclosure': boolean,\r\n            'Prepay Loan': boolean,\r\n            'Reject': boolean,\r\n            'Disburse To Savings': boolean,\r\n            'Make Repayment': boolean,\r\n            'Waive Interest': boolean,\r\n            'Close (as Rescheduled)': boolean,\r\n            'Reschedule': boolean,\r\n            'Recovery Payment': boolean,\r\n            'View Guarantors': boolean,\r\n            'Create Guarantor': boolean,\r\n            'Disburse': boolean,\r\n            'Withdrawn by Client': boolean,\r\n            'Undo Disbursal': boolean,\r\n            'Loan Screen Reports': boolean,\r\n            'Approve': boolean,\r\n            'Add Loan Charge': boolean } = {\r\n              'Close': false,\r\n              'Undo Approval': false,\r\n              'Write Off':  false,\r\n              'Add Collateral':  false,\r\n              'Assign Loan Officer':  false,\r\n              'Foreclosure':  false,\r\n              'Prepay Loan':  false,\r\n              'Reject':  false,\r\n              'Disburse To Savings':  false,\r\n              'Make Repayment':  false,\r\n              'Waive Interest':  false,\r\n              'Close (as Rescheduled)':  false,\r\n              'Reschedule':  false,\r\n              'Recovery Payment':  false,\r\n              'View Guarantors':  false,\r\n              'Create Guarantor':  false,\r\n              'Disburse':  false,\r\n              'Withdrawn by Client':  false,\r\n              'Undo Disbursal':  false,\r\n              'Loan Screen Reports':  false,\r\n              'Approve':  false,\r\n              'Add Loan Charge':  false };\r\n\r\n  actionButtonData: any;\r\n  actionName: any;\r\n\r\n  /**\r\n   * @param router Router.\r\n   * @param route Activated Route.\r\n   */\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute) {\r\n      this.route.data.subscribe(( data: { actionButtonData: any }) => {\r\n        this.actionButtonData = data.actionButtonData;\r\n      });\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.actionName = params['action'];\r\n      if (this.actionName === 'Change Loan Officer') {\r\n        this.actionName = 'Assign Loan Officer';\r\n      }\r\n      for (const key of Object.keys(this.actions)) {\r\n        this.actions[key] = false;\r\n      }\r\n      this.actions[this.actionName] = true;\r\n    });\r\n  }\r\n\r\n}\r\n","<mifosx-loans-account-close [dataObject]=\"actionButtonData\" *ngIf=\"actions['Close']\"></mifosx-loans-account-close>\r\n<mifosx-undo-approval *ngIf=\"actions['Undo Approval']\"></mifosx-undo-approval>\r\n<mifosx-assign-loan-officer *ngIf=\"actions['Assign Loan Officer']\" [dataObject]=\"actionButtonData\" ></mifosx-assign-loan-officer>\r\n<mifosx-foreclosure *ngIf=\"actions['Foreclosure']\"></mifosx-foreclosure>\r\n<mifosx-prepay-loan [dataObject]=\"actionButtonData\" *ngIf=\"actions['Prepay Loan']\"></mifosx-prepay-loan>\r\n<mifosx-make-repayment [dataObject]=\"actionButtonData\" *ngIf=\"actions['Make Repayment']\"></mifosx-make-repayment>\r\n<mifosx-waive-interest [dataObject]=\"actionButtonData\" *ngIf=\"actions['Waive Interest']\"></mifosx-waive-interest>\r\n<mifosx-write-off-page [dataObject]=\"actionButtonData\" *ngIf=\"actions['Write Off']\"></mifosx-write-off-page>\r\n<mifosx-close-as-rescheduled [dataObject]=\"actionButtonData\" *ngIf=\"actions['Close (as Rescheduled)']\"></mifosx-close-as-rescheduled>\r\n<mifosx-loan-reschedule [dataObject]=\"actionButtonData\" *ngIf=\"actions['Reschedule']\"></mifosx-loan-reschedule>\r\n<mifosx-recovery-repayment [dataObject]=\"actionButtonData\" *ngIf=\"actions['Recovery Payment']\"></mifosx-recovery-repayment>\r\n<mifosx-view-guarantors [dataObject]=\"actionButtonData\" *ngIf=\"actions['View Guarantors']\"></mifosx-view-guarantors>\r\n<mifosx-create-guarantor [dataObject]=\"actionButtonData\" *ngIf=\"actions['Create Guarantor']\"></mifosx-create-guarantor>\r\n<mifosx-disburse-loan-account [dataObject]=\"actionButtonData\" *ngIf=\"actions['Disburse To Savings']\"></mifosx-disburse-loan-account>\r\n<mifosx-reject-loan *ngIf=\"actions['Reject']\"></mifosx-reject-loan>\r\n<mifosx-disburse [dataObject]=\"actionButtonData\" *ngIf=\"actions['Disburse']\"></mifosx-disburse>\r\n<mifosx-withdrawn-by-client *ngIf=\"actions['Withdrawn by Client']\"></mifosx-withdrawn-by-client>\r\n<mifosx-add-collateral [dataObject]=\"actionButtonData\" *ngIf=\"actions['Add Collateral']\"></mifosx-add-collateral>\r\n<mifosx-undo-disbursal *ngIf=\"actions['Undo Disbursal']\"></mifosx-undo-disbursal>\r\n<mifosx-loan-screen-reports [dataObject]=\"actionButtonData\" *ngIf=\"actions['Loan Screen Reports']\"></mifosx-loan-screen-reports>\r\n<mifosx-approve-loan *ngIf=\"actions['Approve']\" ></mifosx-approve-loan>\r\n<mifosx-add-loan-charge *ngIf=\"actions['Add Loan Charge']\"></mifosx-add-loan-charge>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport { subscribeOn } from 'rxjs/operators';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-loan-reschedule',\r\n  templateUrl: './loan-reschedule.component.html',\r\n  styleUrls: ['./loan-reschedule.component.scss']\r\n})\r\nexport class LoanRescheduleComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  loanId: any;\r\n  rescheduleLoanForm: FormGroup;\r\n\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  codes: any;\r\n\r\n  changeRepaymentDate = new FormControl(false);\r\n  introduceGracePeriods = new FormControl(false);\r\n  extendRepaymentPeriod = new FormControl(false);\r\n  adjustinterestrates = new FormControl(false);\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} systemService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.codes = this.dataObject.rescheduleReasons;\r\n    this.setRescheduleLoanForm();\r\n  }\r\n\r\n  setRescheduleLoanForm() {\r\n    this.rescheduleLoanForm = this.formBuilder.group({\r\n      'rescheduleFromDate': [new Date(), Validators.required],\r\n      'rescheduleReasonId': ['', Validators.required],\r\n      'submittedOnDate': [new Date(), Validators.required],\r\n      'rescheduleReasonComment': [''],\r\n      'adjustedDueDate': [''],\r\n      'graceOnPrincipal': [''],\r\n      'graceOnInterest': [''],\r\n      'extraTerms': [''],\r\n      'newInterestRate': ['']\r\n    });\r\n\r\n  }\r\n\r\n  submit() {\r\n    const rescheduleFromDate = this.rescheduleLoanForm.value.rescheduleFromDate;\r\n    const adjustedDueDate = this.rescheduleLoanForm.value.adjustedDueDate;\r\n    const submittedOnDate = this.rescheduleLoanForm.value.submittedOnDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n\r\n    this.rescheduleLoanForm.patchValue({\r\n      rescheduleFromDate: this.datePipe.transform(rescheduleFromDate, dateFormat),\r\n      adjustedDueDate: this.datePipe.transform(adjustedDueDate, dateFormat),\r\n      submittedOnDate: this.datePipe.transform(submittedOnDate, dateFormat)\r\n    });\r\n    const rescheduleForm = this.rescheduleLoanForm.value;\r\n    rescheduleForm.locale = this.settingsService.language.code;\r\n    rescheduleForm.dateFormat = dateFormat;\r\n    rescheduleForm.loanId = this.loanId;\r\n    this.loanService.submitRescheduleData(rescheduleForm).subscribe((response: any) => {\r\n\r\n      // TODO: needs to be updated\r\n      // mentioned in Community App:\r\n      // location.path('/loans-accounts/' + scope.loanId + '/viewreschedulerequest/'+ data.resourceId);\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rescheduleLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Reschedule from Installment On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rescheduleDatePicker\" required\r\n              formControlName=\"rescheduleFromDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rescheduleDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rescheduleDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rescheduleLoanForm.controls.rescheduleFromDate.hasError('required')\">\r\n              Reschedule Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Reason for Rescheduling</mat-label>\r\n            <mat-select formControlName=\"rescheduleReasonId\">\r\n              <mat-option *ngFor=\"let rescheduleReasonCode of codes\" [value]=\"rescheduleReasonCode.id\">\r\n                {{ rescheduleReasonCode.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"rescheduleLoanForm.controls.rescheduleReasonId.hasError('required')\">\r\n              Reason for Rescheduling <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Submitted On</mat-label>\r\n            <input matInput [min]=\"minDate\" [matDatepicker]=\"submittedDatePicker\" required\r\n              formControlName=\"submittedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"submittedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #submittedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rescheduleLoanForm.controls.submittedOnDate.hasError('required')\">\r\n              Submitted On Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Comments</mat-label>\r\n            <textarea matInput formControlName=\"rescheduleReasonComment\"></textarea>\r\n          </mat-form-field>\r\n\r\n          <mat-checkbox [formControl]=\"changeRepaymentDate\"> Change Repayment Date </mat-checkbox>\r\n\r\n          <ng-container *ngIf=\"changeRepaymentDate.value\">\r\n            <mat-form-field>\r\n              <mat-label>Installment Rescheduled to</mat-label>\r\n              <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"installmentrescheduledDatePicker\"\r\n                formControlName=\"adjustedDueDate\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"installmentrescheduledDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #installmentrescheduledDatePicker></mat-datepicker>\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-checkbox [formControl]=\"introduceGracePeriods\"> Introduce Mid-term grace periods </mat-checkbox>\r\n\r\n          <ng-container *ngIf=\"introduceGracePeriods.value\">\r\n            <mat-form-field>\r\n              <mat-label>Principal Grace Periods </mat-label>\r\n              <input matInput formControlName=\"graceOnPrincipal\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Interest Grace Periods </mat-label>\r\n              <input matInput formControlName=\"graceOnInterest\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-checkbox [formControl]=\"extendRepaymentPeriod\"> Extend Repayment Period </mat-checkbox>\r\n\r\n          <ng-container *ngIf=\"extendRepaymentPeriod.value\">\r\n            <mat-form-field>\r\n              <mat-label>Number Of new Repayments</mat-label>\r\n              <input matInput formControlName=\"extraTerms\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-checkbox [formControl]=\"adjustinterestrates\"> Adjust interest rates for remainder of loan </mat-checkbox>\r\n          <ng-container *ngIf=\"adjustinterestrates.value\">\r\n            <mat-form-field>\r\n              <mat-label>New Interest Rate</mat-label>\r\n              <input matInput formControlName=\"newInterestRate\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!rescheduleLoanForm.valid\"\r\n            *mifosxHasPermission=\"'APPROVE_RESCHEDULELOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Renderer2, ViewChild, ElementRef, SecurityContext, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/**\r\n * Loans Screen Reports Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-loan-screen-reports',\r\n  templateUrl: './loan-screen-reports.component.html',\r\n  styleUrls: ['./loan-screen-reports.component.scss']\r\n})\r\nexport class LoanScreenReportsComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Screen Reportform. */\r\n  loanScreenReportForm: FormGroup;\r\n  /** Templates Data */\r\n  templatesData: any;\r\n  /** Loan Id */\r\n  loanId: any;\r\n  /** HTML Template */\r\n  template: any;\r\n\r\n  /** Screen report output reference */\r\n  @ViewChild('screenReport', { static: true }) screenReportRef: ElementRef;\r\n\r\n  /**\r\n   * Fetches Loan Action Data from `resolve`\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {LoansService} loansService Loans Service\r\n   * @param {ActivatedRoute} route Activated Route\r\n   * @param {DomSanitizer} sanitizer DOM Sanitizer\r\n   * @param {Renderer2} renderer Renderer 2\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loansService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private sanitizer: DomSanitizer,\r\n    private renderer: Renderer2) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the loan screen report form.\r\n   */\r\n  ngOnInit() {\r\n    this.templatesData = this.dataObject;\r\n    this.createLoanScreenReportForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the loan screen report form.\r\n   */\r\n  createLoanScreenReportForm() {\r\n    this.loanScreenReportForm = this.formBuilder.group({\r\n      'templateId': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Prints loan screen report\r\n   */\r\n  print() {\r\n    const templateWindow = window.open('', 'Screen Report', 'height=400,width=600');\r\n    templateWindow.document.write('<html><head>');\r\n    templateWindow.document.write('</head><body>');\r\n    templateWindow.document.write(this.template);\r\n    templateWindow.document.write('</body></html>');\r\n    templateWindow.print();\r\n    templateWindow.close();\r\n  }\r\n\r\n  /**\r\n   * Submits the form and generates screen report for the loan.\r\n   */\r\n  generate() {\r\n    const templateId = this.loanScreenReportForm.get('templateId').value;\r\n    this.loansService.getTemplateData(templateId, this.loanId).subscribe((response: any) => {\r\n      this.template = this.sanitizer.sanitize(SecurityContext.HTML, response);\r\n      this.renderer.setProperty(this.screenReportRef.nativeElement, 'innerHTML', this.template);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container m-b-20\">\r\n\r\n    <mat-card>\r\n\r\n        <form [formGroup]=\"loanScreenReportForm\" (ngSubmit)=\"generate()\">\r\n\r\n            <mat-card-content>\r\n\r\n                <div>\r\n\r\n                    <mat-form-field fxFlex>\r\n                        <mat-label>Loan Screen Reports</mat-label>\r\n                        <mat-select formControlName=\"templateId\">\r\n                            <mat-option *ngFor=\"let template of templatesData\" [value]=\"template.id\">\r\n                                {{ template.name }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"loanScreenReportForm.controls.templateId.hasError('required')\">\r\n                            Screen Report is <strong>required</strong>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n                <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n                <button mat-raised-button color=\"primary\" [disabled]=\"!loanScreenReportForm.valid\">\r\n                    <fa-icon icon=\"cogs\" size=\"sm\"></fa-icon>&nbsp;&nbsp;Generate Report\r\n                </button>\r\n            </mat-card-actions>\r\n\r\n        </form>\r\n\r\n    </mat-card>\r\n\r\n</div>\r\n\r\n<div #output class=\"container\">\r\n\r\n    <mat-card fxLayout=\"column\" fxLayoutGap=\"3%\">\r\n\r\n        <div fxLayoutAlign=\"end\">\r\n            <button mat-stroked-button color=\"primary\" [disabled]=\"!template\" (click)=\"print()\">\r\n                <fa-icon icon=\"file\"></fa-icon>&nbsp;&nbsp;\r\n                Print\r\n            </button>\r\n        </div>\r\n\r\n        <div #screenReport class=\"screen-report\">\r\n            <p>Please select a screen report.</p>\r\n        </div>\r\n\r\n    </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-loans-account-close',\r\n  templateUrl: './loans-account-close.component.html',\r\n  styleUrls: ['./loans-account-close.component.scss']\r\n})\r\nexport class LoansAccountCloseComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Close form. */\r\n  closeLoanForm: FormGroup;\r\n  /** Loan Id */\r\n  loanId: any;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} systemService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  /**\r\n   * Creates the close form.\r\n   */\r\n  ngOnInit() {\r\n    this.createCloseForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the create close form.\r\n   */\r\n  createCloseForm() {\r\n    this.closeLoanForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(this.dataObject.date) || new Date(), Validators.required],\r\n      'note': []\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits the close form and creates a close,\r\n   * if successful redirects to view created close.\r\n   */\r\n  submit() {\r\n    const transactionDate = this.closeLoanForm.value.transactionDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.closeLoanForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat)\r\n    });\r\n    const closeForm = this.closeLoanForm.value;\r\n    closeForm.locale = this.settingsService.language.code;\r\n    closeForm.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(this.loanId, closeForm, 'close')\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"closeLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Closed On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"closedDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"closedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #closedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"closeLoanForm.controls.transactionDate.hasError('required')\">\r\n              Closed Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!closeLoanForm.valid\"\r\n            *mifosxHasPermission=\"'CLOSE_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Loan Make Repayment Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-make-repayment',\r\n  templateUrl: './make-repayment.component.html',\r\n  styleUrls: ['./make-repayment.component.scss']\r\n})\r\nexport class MakeRepaymentComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Payment Type Options */\r\n  paymentTypes: any;\r\n  /** Show payment details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Repayment Loan Form */\r\n  repaymentLoanForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  /**\r\n   * Creates the repayment loan form\r\n   * and initialize with the required values\r\n   */\r\n  ngOnInit() {\r\n    this.createRepaymentLoanForm();\r\n    // this.setRepaymentLoanDetails();\r\n  }\r\n\r\n  /**\r\n   * Creates the create close form.\r\n   */\r\n  createRepaymentLoanForm() {\r\n    this.repaymentLoanForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(), Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': '',\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  setRepaymentLoanDetails() {\r\n    this.paymentTypes = this.dataObject.paymentTypeOptions;\r\n    this.repaymentLoanForm.patchValue({\r\n      transactionAmount: this.dataObject.amount,\r\n      transactionDate: new Date(this.dataObject.date)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.showPaymentDetails = !this.showPaymentDetails;\r\n    if (this.showPaymentDetails) {\r\n      this.repaymentLoanForm.addControl('accountNumber', new FormControl(''));\r\n      this.repaymentLoanForm.addControl('checkNumber', new FormControl(''));\r\n      this.repaymentLoanForm.addControl('routingCode', new FormControl(''));\r\n      this.repaymentLoanForm.addControl('receiptNumber', new FormControl(''));\r\n      this.repaymentLoanForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.repaymentLoanForm.removeControl('accountNumber');\r\n      this.repaymentLoanForm.removeControl('checkNumber');\r\n      this.repaymentLoanForm.removeControl('routingCode');\r\n      this.repaymentLoanForm.removeControl('receiptNumber');\r\n      this.repaymentLoanForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /** Submits the repayment form */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.repaymentLoanForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.repaymentLoanForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const repaymentLoanData = this.repaymentLoanForm.value;\r\n    repaymentLoanData.locale = this.settingsService.language.code;\r\n    repaymentLoanData.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(this.loanId, repaymentLoanData, 'repayment')\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"repaymentLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"transactionDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"repaymentLoanForm.controls.transactionDate.hasError('required')\">\r\n              Transaction Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"repaymentLoanForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\">\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"addPaymentDetails()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"checkNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!repaymentLoanForm.valid\"\r\n            *mifosxHasPermission=\"'REPAYMENT_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n\r\n/**\r\n * Loan Prepay Loan Option\r\n */\r\n@Component({\r\n  selector: 'mifosx-prepay-loan',\r\n  templateUrl: './prepay-loan.component.html',\r\n  styleUrls: ['./prepay-loan.component.scss']\r\n})\r\nexport class PrepayLoanComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Payment Types */\r\n  paymentTypes: any;\r\n  /** Principal Portion */\r\n  principalPortion: any;\r\n  /** Interest Portion */\r\n  interestPortion: any;\r\n  /** Show Payment Details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Prepay Loan form. */\r\n  prepayLoanForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n      this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    }\r\n\r\n  /**\r\n   * Creates the prepay loan form\r\n   * and initialize with the required values\r\n   */\r\n  ngOnInit() {\r\n    this.createprepayLoanForm();\r\n    this.setPrepayLoanDetails();\r\n  }\r\n\r\n  /**\r\n   * Creates the prepay loan form.\r\n   */\r\n  createprepayLoanForm() {\r\n    this.prepayLoanForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(), Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'principal': [{value: '', disabled: true}],\r\n      'interestAmount': [{value: '', disabled: true}, Validators.required],\r\n      'paymentTypeId': [''],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the value in the prepay loan form\r\n   */\r\n  setPrepayLoanDetails() {\r\n    this.paymentTypes = this.dataObject.paymentTypeOptions;\r\n    this.prepayLoanForm.patchValue({\r\n      transactionAmount: this.dataObject.amount,\r\n      principal: this.dataObject.principalPortion,\r\n      interestAmount: this.dataObject.interestPortion,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.showPaymentDetails = !this.showPaymentDetails;\r\n    if (this.showPaymentDetails) {\r\n      this.prepayLoanForm.addControl('accountNumber', new FormControl(''));\r\n      this.prepayLoanForm.addControl('checkNumber', new FormControl(''));\r\n      this.prepayLoanForm.addControl('routingCode', new FormControl(''));\r\n      this.prepayLoanForm.addControl('receiptNumber', new FormControl(''));\r\n      this.prepayLoanForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.prepayLoanForm.removeControl('accountNumber');\r\n      this.prepayLoanForm.removeControl('checkNumber');\r\n      this.prepayLoanForm.removeControl('routingCode');\r\n      this.prepayLoanForm.removeControl('receiptNumber');\r\n      this.prepayLoanForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submits the prepay loan form\r\n   */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.prepayLoanForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.prepayLoanForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const prepayLoanData = this.prepayLoanForm.value;\r\n    prepayLoanData.locale = this.settingsService.language.code;\r\n    prepayLoanData.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(this.loanId, prepayLoanData, 'repayment')\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"prepayLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"transactionDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"prepayLoanForm.controls.transactionDate.hasError('required')\">\r\n              Transaction Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"prepayLoanForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Principal</mat-label>\r\n            <input matInput formControlName=\"principal\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Interest Amount</mat-label>\r\n            <input matInput required formControlName=\"interestAmount\">\r\n            <mat-error *ngIf=\"prepayLoanForm.controls.interestAmount.hasError('required')\">\r\n              Interest Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\">\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"addPaymentDetails()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"checkNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!prepayLoanForm.valid\"\r\n            *mifosxHasPermission=\"'REPAYMENT_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Loan Recovery Repayment Action\r\n */\r\n@Component({\r\n  selector: 'mifosx-recovery-repayment',\r\n  templateUrl: './recovery-repayment.component.html',\r\n  styleUrls: ['./recovery-repayment.component.scss']\r\n})\r\nexport class RecoveryRepaymentComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Payment Type Options */\r\n  paymentTypes: any;\r\n  /** Show payment details */\r\n  showPaymentDetails = false;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Recovery Repayment Loan Form */\r\n  recoveryRepaymentLoanForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the recovery repayment loan form\r\n   * and initialize with the required values\r\n   */\r\n  ngOnInit() {\r\n    this.createRecoveryRepaymentLoanForm();\r\n    this.setRecoveryRepaymentLoanDetails();\r\n  }\r\n\r\n  /**\r\n   * Creates the recovery repayment loan form\r\n   */\r\n  createRecoveryRepaymentLoanForm() {\r\n    this.recoveryRepaymentLoanForm = this.formBuilder.group({\r\n      'transactionDate': [new Date(), Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': [''],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /** Sets Recovery Payment Loan Details */\r\n  setRecoveryRepaymentLoanDetails() {\r\n    this.paymentTypes = this.dataObject.paymentTypeOptions;\r\n    this.recoveryRepaymentLoanForm.patchValue({\r\n      transactionAmount: this.dataObject.amount,\r\n      transactionDate: new Date(this.dataObject.date)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.showPaymentDetails = !this.showPaymentDetails;\r\n    if (this.showPaymentDetails) {\r\n      this.recoveryRepaymentLoanForm.addControl('accountNumber', new FormControl(''));\r\n      this.recoveryRepaymentLoanForm.addControl('checkNumber', new FormControl(''));\r\n      this.recoveryRepaymentLoanForm.addControl('routingCode', new FormControl(''));\r\n      this.recoveryRepaymentLoanForm.addControl('receiptNumber', new FormControl(''));\r\n      this.recoveryRepaymentLoanForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.recoveryRepaymentLoanForm.removeControl('accountNumber');\r\n      this.recoveryRepaymentLoanForm.removeControl('checkNumber');\r\n      this.recoveryRepaymentLoanForm.removeControl('routingCode');\r\n      this.recoveryRepaymentLoanForm.removeControl('receiptNumber');\r\n      this.recoveryRepaymentLoanForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /** Submits the recovery payment form */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.recoveryRepaymentLoanForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.recoveryRepaymentLoanForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const recoveryRepaymentLoanData = this.recoveryRepaymentLoanForm.value;\r\n    recoveryRepaymentLoanData.locale = this.settingsService.language.code;\r\n    recoveryRepaymentLoanData.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(this.loanId, recoveryRepaymentLoanData, 'recoverypayment')\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../general'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"recoveryRepaymentLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"transactionDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"transactionDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"recoveryRepaymentLoanForm.controls.transactionDate.hasError('required')\">\r\n              Transaction Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction Amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"recoveryRepaymentLoanForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Payment Type</mat-label>\r\n            <mat-select formControlName=\"paymentTypeId\">\r\n              <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.id\">\r\n                {{ paymentType.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxFlexFill>\r\n            <span fxFlex=\"25%\">Show Payment Details</span>\r\n            <span fxFlex=\"75%\" class=\"expandCollapsebutton\" (click)=\"addPaymentDetails()\">\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"showPaymentDetails\">\r\n                <i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" *ngIf=\"!showPaymentDetails\">\r\n                <i class=\"fa fa-plus\"></i>\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showPaymentDetails\">\r\n            <mat-form-field>\r\n              <mat-label> Account #</mat-label>\r\n              <input matInput formControlName=\"accountNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Cheque #</mat-label>\r\n              <input matInput formControlName=\"checkNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Routing Code</mat-label>\r\n              <input matInput formControlName=\"routingCode\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Reciept #</mat-label>\r\n              <input matInput formControlName=\"receiptNumber\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <mat-label>Bank #</mat-label>\r\n              <input matInput formControlName=\"bankNumber\">\r\n            </mat-form-field>\r\n          </ng-container>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!recoveryRepaymentLoanForm.valid\"\r\n            *mifosxHasPermission=\"'REPAYMENT_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Reject Loan component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-reject-loan',\r\n  templateUrl: './reject-loan.component.html',\r\n  styleUrls: ['./reject-loan.component.scss']\r\n})\r\nexport class RejectLoanComponent implements OnInit {\r\n\r\n  /** Loan Id. */\r\n  loanId: any;\r\n  /** Reject Loan form. */\r\n  rejectLoanForm: FormGroup;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n\r\n  /**\r\n   * Retrieve data from `Resolver`.\r\n   * @param formBuilder Form Builder.\r\n   * @param router Router.\r\n   * @param route Activated Route.\r\n   * @param datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private loanService: LoansService,\r\n              private datePipe: DatePipe,\r\n              private settingsService: SettingsService ) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setRejectLoanForm();\r\n  }\r\n\r\n  /**\r\n   * Set Reject Loan form.\r\n   */\r\n  setRejectLoanForm() {\r\n    this.rejectLoanForm = this.formBuilder.group({\r\n      'rejectedOnDate': [new Date(), Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submit Reject Loan form.\r\n   */\r\n  submit() {\r\n    const rejectedOnDate = this.rejectLoanForm.value.rejectedOnDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.rejectLoanForm.patchValue({\r\n      rejectedOnDate: this.datePipe.transform(rejectedOnDate, dateFormat)\r\n    });\r\n    const rejectForm = this.rejectLoanForm.value;\r\n    rejectForm.locale = this.settingsService.language.code;\r\n    rejectForm.dateFormat = dateFormat;\r\n    this.loanService.loanActionButtons(this.loanId, 'reject', rejectForm).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"rejectLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Rejected On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"rejectedDatePicker\" required\r\n              formControlName=\"rejectedOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"rejectedDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #rejectedDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"rejectLoanForm.controls.rejectedOnDate.hasError('required')\">\r\n              Rejected Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!rejectLoanForm.valid\"\r\n            *mifosxHasPermission=\"'REJECT_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\n/**\r\n * Undo Loan component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-approval',\r\n  templateUrl: './undo-approval.component.html',\r\n  styleUrls: ['./undo-approval.component.scss']\r\n})\r\nexport class UndoApprovalComponent implements OnInit {\r\n\r\n  /** Form Controller. */\r\n  note: FormControl;\r\n\r\n  /**\r\n   * @param loanService Loan Service.\r\n   * @param route Activated Route.\r\n   * @param router Router.\r\n   */\r\n  constructor(private loanService: LoansService,\r\n              private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.note = this.formBuilder.control('');\r\n  }\r\n\r\n  /**\r\n   * Submits undo approval form.\r\n   */\r\n  submit() {\r\n    const loanId = this.route.parent.snapshot.params['loanId'];\r\n    this.loanService.loanActionButtons(loanId, 'undoapproval', { 'note': this.note.value }).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], {relativeTo: this.route});\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <mat-form-field fxFlex>\r\n        <mat-label>Note</mat-label>\r\n        <textarea matInput [formControl]=\"note\"></textarea>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n      <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"submit()\"\r\n        *mifosxHasPermission=\"'APPROVALUNDO_LOAN'\">Submit</button>\r\n    </mat-card-actions>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormBuilder } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../../loans.service';\r\n\r\n/**\r\n * Undo Disbursal component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-undo-disbursal',\r\n  templateUrl: './undo-disbursal.component.html',\r\n  styleUrls: ['./undo-disbursal.component.scss']\r\n})\r\nexport class UndoDisbursalComponent implements OnInit {\r\n\r\n  /** Loan ID. */\r\n  loanId: any;\r\n  /** Undo disbursal form. */\r\n  note: FormControl;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loansService Loans Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private loansService: LoansService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the undo disbursal form.\r\n   */\r\n  ngOnInit() {\r\n    this.note = this.formBuilder.control('');\r\n  }\r\n\r\n  /**\r\n   * Submits the undo disbursal form.\r\n   */\r\n  submit() {\r\n    this.loansService.loanActionButtons(this.loanId, 'undodisbursal', {'note': this.note.value}).subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], { relativeTo: this.route });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <mat-form-field fxFlex>\r\n        <mat-label>Note</mat-label>\r\n        <textarea matInput [formControl]=\"note\"></textarea>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n      <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"submit()\"\r\n        *mifosxHasPermission=\"'DISBURSALUNDO_LOAN'\">Submit</button>\r\n    </mat-card-actions>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { LoansAccountViewGuarantorDetailsDialogComponent } from 'app/loans/custom-dialog/loans-account-view-guarantor-details-dialog/loans-account-view-guarantor-details-dialog.component';\r\n\r\n/**\r\n * View Guarantors Action\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-guarantors',\r\n  templateUrl: './view-guarantors.component.html',\r\n  styleUrls: ['./view-guarantors.component.scss']\r\n})\r\nexport class ViewGuarantorsComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  guarantorDetails: any;\r\n  showDeletedGuarantorsAccounts = false;\r\n  loanId: any;\r\n  guarantorsDisplayedColumns: string[] = ['fullname', 'relationship', 'guarantortype', 'depositAccount', 'amount', 'remainingAmount', 'status', 'action'];\r\n\r\n  /** View and perform various action on existing list of guarantors\r\n   * @param {MatDialog} dialog Dialog\r\n   * @param {LoansService} loansService Loans Service\r\n   * @param {route} Route Route\r\n   * @param {router} Router Router\r\n   */\r\n  constructor(public dialog: MatDialog,\r\n              public loansService: LoansService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.guarantorDetails = this.dataObject.guarantors;\r\n  }\r\n\r\n  toggleGuarantorsDetailsOverview() {\r\n    this.showDeletedGuarantorsAccounts = !this.showDeletedGuarantorsAccounts;\r\n  }\r\n\r\n  deleteGuarantor(id: any) {\r\n    const deleteGuarantorDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `the guarantor id: ${id}` }\r\n    });\r\n    deleteGuarantorDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteGuarantor(this.loanId, id).subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  viewGuarantorDetails(guarantorData: any) {\r\n    const viewGuarantorDetailsDialogRef = this.dialog.open(LoansAccountViewGuarantorDetailsDialogComponent, {\r\n      data: { guarantorData: guarantorData }\r\n    });\r\n    viewGuarantorDetailsDialogRef.afterClosed().subscribe(() => {});\r\n  }\r\n\r\n  /**\r\n   * Refetches data for the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.dataObject.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/loans-accounts`, { skipLocationChange: true })\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <div class=\"viewGuarantors-account-tables\" fxLayout=\"row\" fxLayoutGap=\"2%\">\r\n\r\n      <div fxFlex=\"49%\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Disbursement Date</td>\r\n              <td>{{dataObject.timeline.actualDisbursementDate}}<span\r\n                  *ngIf=\"!dataObject.timeline.actualDisbursementDate\">Not Available</span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Currency</td>\r\n              <td>{{dataObject.currency.name}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Loan Officer</td>\r\n              <td>{{dataObject.loanOfficerName}} <span *ngIf=\"!dataObject.loanOfficerName\">Unassigned</span>\r\n                <span *ngIf=\"dataObject.loanOfficerName\">\r\n                  <fa-icon icon=\"times\"></fa-icon>\r\n                </span></td>\r\n            </tr>\r\n            <tr>\r\n              <td>External Id</td>\r\n              <td>{{dataObject.externalId}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div fxFlex=\"49%\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Loan Purpose</td>\r\n              <td>\r\n                {{dataObject.loanPurposeName}} <span *ngIf=\"!dataObject.loanPurposeName\"> Not Provided </span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Approved Amount</td>\r\n              <td>\r\n                <span>{{dataObject.approvedPrincipal | number}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Disburse Amount</td>\r\n              <td>\r\n                <span>{{dataObject.principal | number}}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Arrears By</td>\r\n              <td>{{dataObject.summary.totalOverdue | number}}\r\n                <span *ngIf=\"dataObject.summary.totalOverdue < 0\">Not Provided</span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlexFill *ngIf=\"guarantorDetails\" fxLayout=\"row wrap\" fxLayout.lt-md=\"column\">\r\n\r\n      <!-- guarantors details table -->\r\n      <div class=\"headingContent\">\r\n        <div fxLayout=\"column\" fxFlex=\"50%\">\r\n          <div class=\"headingName\">\r\n            <h3>Guarantors Details</h3>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"column\" fxFlex=\"50%\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n            <button mat-raised-button class=\"f-right\" color=\"primary\"\r\n              (click)=\"toggleGuarantorsDetailsOverview()\">{{showDeletedGuarantorsAccounts?'Hide Deleted Guarantors':'Show Deleted Guarantors'}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table fxFlexFill mat-table\r\n        [dataSource]=\"guarantorDetails|accountsFilter:'guarantor':showDeletedGuarantorsAccounts\">\r\n        <!-- <ng-container *ngIf=\"expression\"> -->\r\n        <ng-container matColumnDef=\"fullname\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n              {{guarantor.firstname}} &nbsp; {{guarantor.lastname}}\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"relationship\">\r\n          <th mat-header-cell *matHeaderCellDef> Relationship </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n              {{guarantor.clientRelationshipType.name}}\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"guarantortype\">\r\n          <th mat-header-cell *matHeaderCellDef> Guarantor Type </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n              {{guarantor.guarantorType.value}}\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"depositAccount\">\r\n          <th mat-header-cell *matHeaderCellDef> Deposit Account </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"amount\">\r\n          <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"remainingAmount\">\r\n          <th mat-header-cell *matHeaderCellDef> Remaining Amount </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> Status </th>\r\n          <td mat-cell *matCellDef=\"let guarantor\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n              <span *ngIf=\"guarantor.status\">\r\n                Active\r\n              </span>\r\n              <span *ngIf=\"!guarantor.status\">\r\n                Deleted\r\n              </span>\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let guarantor; let id = index\">\r\n            <span *ngIf=\"!guarantor.guarantorFundingDetails\">\r\n              <button mat-raised-button class=\"account-action-button\" color=\"primary\"\r\n                *mifosxHasPermission=\"'READ_SAVINGSACCOUNT'\" (click)=\"viewGuarantorDetails(guarantor)\">\r\n                <fa-icon icon=\"eye\"></fa-icon>&nbsp;&nbsp;\r\n              </button>\r\n              <button mat-raised-button class=\"account-action-button\" color=\"primary\"\r\n                *ngIf=\"guarantor.status && guarantor.guarantorType.id == 3 && guarantor.id\">\r\n                <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;\r\n              </button>\r\n              <span *ngIf=\"guarantor.status\">\r\n                <button mat-raised-button class=\"account-action-button\" color=\"warn\"\r\n                  *mifosxHasPermission='\"DELETE_GUARANTOR\"' (click)=\"deleteGuarantor(guarantor.id)\">\r\n                  <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;\r\n                </button>\r\n              </span>\r\n            </span>\r\n          </td>\r\n        </ng-container>\r\n        <!-- </ng-container> -->\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"guarantorsDisplayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: guarantorsDisplayedColumns\"></tr>\r\n\r\n      </table>\r\n    </div>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\n\r\n/**\r\n * Waive Interest component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-waive-interest',\r\n  templateUrl: './waive-interest.component.html',\r\n  styleUrls: ['./waive-interest.component.scss']\r\n})\r\nexport class WaiveInterestComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Loan Interest form. */\r\n  loanInterestForm: FormGroup;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n\r\n  /**\r\n   * Get data from `Resolver`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {Router} router Router.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private loanService: LoansService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.setLoanInterestForm();\r\n  }\r\n\r\n  /**\r\n   * Set Loan Interest form.\r\n   */\r\n  setLoanInterestForm() {\r\n    this.loanInterestForm = this.formBuilder.group({\r\n      'transactionAmount': [this.dataObject.amount, Validators.required],\r\n      'transactionDate': [this.dataObject.date && new Date(this.dataObject.date), Validators.required],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits loan interest form.\r\n   */\r\n  submit() {\r\n    const transactionDate = this.loanInterestForm.value.transactionDate;\r\n    const transactionAmount = this.loanInterestForm.value.transactionAmount;\r\n    const dateFormat = 'dd MMMM yyyy';\r\n    this.loanInterestForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat),\r\n      transactionAmount: parseInt(transactionAmount, 10)\r\n    });\r\n    const loanId = this.route.parent.snapshot.params['loanId'];\r\n    const loanInterestForm = this.loanInterestForm.value;\r\n    loanInterestForm.locale = 'en';\r\n    loanInterestForm.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(loanId, loanInterestForm, 'waiveinterest').subscribe((response: any) => {\r\n      this.router.navigate(['../../general'], {relativeTo: this.route});\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"loanInterestForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Interest waived on</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"interestDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"interestDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #interestDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"loanInterestForm.controls.transactionDate.hasError('required')\">\r\n              Interest Date is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Transaction amount</mat-label>\r\n            <input matInput required formControlName=\"transactionAmount\">\r\n            <mat-error *ngIf=\"loanInterestForm.controls.transactionAmount.hasError('required')\">\r\n              Transaction Amount is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!loanInterestForm.valid\"\r\n            *mifosxHasPermission=\"'WAIVEINTERESTPORTION_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Withdrawn By Applicant Loan Form\r\n */\r\n@Component({\r\n  selector: 'mifosx-withdrawn-by-client',\r\n  templateUrl: './withdrawn-by-client.component.html',\r\n  styleUrls: ['./withdrawn-by-client.component.scss']\r\n})\r\nexport class WithdrawnByClientComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n  /** Loan Id */\r\n  loanId: string;\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n  /** Withdrawn By Applicant Loan Form */\r\n  withdrawnByClientLoanForm: FormGroup;\r\n\r\n  /**\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loanService: LoansService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private settingsService: SettingsService) {\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the withdraw by Applicant loan form\r\n   * and initialize with the required values\r\n   */\r\n  ngOnInit() {\r\n    this.createWithdrawnByClientLoanForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the create withdraw by applicant form.\r\n   */\r\n  createWithdrawnByClientLoanForm() {\r\n    this.withdrawnByClientLoanForm = this.formBuilder.group({\r\n      'withdrawnOnDate': [new Date(), Validators.required],\r\n      'note': ''\r\n    });\r\n  }\r\n\r\n  /** Submits the withdraw by appplicant form */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.withdrawnByClientLoanForm.value.withdrawnOnDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.withdrawnByClientLoanForm.patchValue({\r\n      withdrawnOnDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const WithdrawnByClientLoanData = this.withdrawnByClientLoanForm.value;\r\n    WithdrawnByClientLoanData.locale = this.settingsService.language.code;\r\n    WithdrawnByClientLoanData.dateFormat = dateFormat;\r\n    this.loanService.loanActionButtons(this.loanId, 'withdrawnByApplicant', WithdrawnByClientLoanData)\r\n      .subscribe((response: any) => {\r\n        this.router.navigate(['../../../general'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"withdrawnByClientLoanForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content>\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Withdrawn On</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"withdrawnOnDatePicker\" required\r\n              formControlName=\"withdrawnOnDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"withdrawnOnDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #withdrawnOnDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"withdrawnByClientLoanForm.controls.withdrawnOnDate.hasError('required')\">\r\n              Withdrawn On Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../../../general']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!withdrawnByClientLoanForm.valid\"\r\n            *mifosxHasPermission=\"'WITHDRAW_LOAN'\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports. */\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services. */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Write Off component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-write-off-page',\r\n  templateUrl: './write-off-page.component.html',\r\n  styleUrls: ['./write-off-page.component.scss']\r\n})\r\nexport class WriteOffPageComponent implements OnInit {\r\n\r\n  @Input() dataObject: any;\r\n\r\n  /** Minimum Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Date allowed. */\r\n  maxDate = new Date();\r\n\r\n  /** Write Off form. */\r\n  writeOffForm: FormGroup;\r\n\r\n  /**\r\n   * Get data from `Resolver`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {LoansService} loanService Loan Service.\r\n   * @param {DatePipe} datePipe Date Pipe.\r\n   * @param {Router} router Router.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private loanService: LoansService,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              private settingsService: SettingsService) { }\r\n\r\n  ngOnInit() {\r\n    this.setWriteOffForm();\r\n  }\r\n\r\n  /**\r\n   * Set Write Off form.\r\n   */\r\n  setWriteOffForm() {\r\n    this.writeOffForm = this.formBuilder.group({\r\n      'transactionDate': [this.dataObject.date && new Date(this.dataObject.date), Validators.required],\r\n      'amount': [{value: this.dataObject.amount, disabled: true}],\r\n      'note': ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submits write off form.\r\n   */\r\n  submit() {\r\n    const transactionDate = this.writeOffForm.value.transactionDate;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.writeOffForm.patchValue({\r\n      transactionDate: this.datePipe.transform(transactionDate, dateFormat)\r\n    });\r\n    const loanId = this.route.parent.snapshot.params['loanId'];\r\n    const writeOffForm = this.writeOffForm.value;\r\n    delete writeOffForm.amount;\r\n    writeOffForm.locale = this.settingsService.language.code;\r\n    writeOffForm.dateFormat = dateFormat;\r\n    this.loanService.submitLoanActionButton(loanId, writeOffForm, 'writeoff').subscribe((response: any) => {\r\n      this.router.navigate(['../../../general'], {relativeTo: this.route});\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <form [formGroup]=\"writeOffForm\" (ngSubmit)=\"submit()\">\r\n\r\n        <div fxLayout=\"column\">\r\n\r\n          <mat-form-field>\r\n            <mat-label>Write off on</mat-label>\r\n            <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"writeOffDatePicker\" required\r\n              formControlName=\"transactionDate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"writeOffDatePicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #writeOffDatePicker></mat-datepicker>\r\n            <mat-error *ngIf=\"writeOffForm.controls.transactionDate.hasError('required')\">\r\n              Write Off Date <strong>is required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Amount</mat-label>\r\n            <input matInput formControlName=\"amount\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Note</mat-label>\r\n            <textarea matInput formControlName=\"note\"></textarea>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <mat-card-actions fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5px\">\r\n        <button type=\"button\" mat-raised-button [routerLink]=\"['../../general']\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"submit()\"\r\n          *mifosxHasPermission=\"'WRITEOFF_LOAN'\">Submit</button>\r\n      </mat-card-actions>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Recurring Deposits Account Buttons Configuration */\r\nexport class LoansAccountButtonConfiguration {\r\n\r\n    optionArray: {\r\n        name: string,\r\n        taskPermissionName?: string,\r\n    }[];\r\n\r\n    buttonsArray: {\r\n        name: string,\r\n        icon: string,\r\n        taskPermissionName?: string,\r\n    }[];\r\n\r\n    constructor(status: string) {\r\n        this.setOptions(status);\r\n        this.setButtons(status);\r\n    }\r\n\r\n    get singleButtons() {\r\n        return this.buttonsArray;\r\n    }\r\n\r\n    get options() {\r\n        return this.optionArray;\r\n    }\r\n\r\n    setButtons(status: string) {\r\n        switch (status) {\r\n            case 'Active':\r\n                this.buttonsArray = [\r\n                    {\r\n                        name: 'Add Loan Charge',\r\n                        icon: 'fa fa-plus',\r\n                        taskPermissionName: 'CREATE_LOANCHARGE',\r\n                    },\r\n                    {\r\n                        name: 'Foreclosure',\r\n                        icon: 'icon-dollar',\r\n                        taskPermissionName: 'FORECLOSURE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Make Repayment',\r\n                        icon: 'fa fa-dollar',\r\n                        taskPermissionName: 'REPAYMENT_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Undo Disbursal',\r\n                        icon: 'fa fa-undo',\r\n                        taskPermissionName: 'DISBURSALUNDO_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Submitted and pending approval':\r\n                this.buttonsArray = [\r\n                    {\r\n                        name: 'Add Loan Charge',\r\n                        icon: 'fa fa-plus',\r\n                        taskPermissionName: 'CREATE_LOANCHARGE',\r\n                    },\r\n                    {\r\n                        name: 'Approve',\r\n                        icon: 'fa fa-check',\r\n                        taskPermissionName: 'APPROVE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Modify Application',\r\n                        icon: 'fa fa-pincel-square-o',\r\n                        taskPermissionName: 'UPDATE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Reject',\r\n                        icon: 'fa fa-times',\r\n                        taskPermissionName: 'REJECT_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Approved':\r\n                this.buttonsArray = [\r\n                    {\r\n                        name: 'Disburse',\r\n                        icon: 'fa fa-flag',\r\n                        taskPermissionName: 'DISBURSE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Disburse to Savings',\r\n                        icon: 'fa fa-flag',\r\n                        taskPermissionName: 'DISBURSETOSAVINGS_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Undo Approval',\r\n                        icon: 'fa fa-undo',\r\n                        taskPermissionName: 'APPROVALUNDO_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Overpaid':\r\n                this.buttonsArray = [\r\n                    {\r\n                        name: 'Transfer Funds',\r\n                        icon: 'fa fa-exchange',\r\n                        taskPermissionName: 'CREATE_ACCOUNTTRANSFER',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Closed (written off)':\r\n                this.buttonsArray = [\r\n                    {\r\n                        name: 'Recovery Payment',\r\n                        icon: 'fa fa-briefcase',\r\n                        taskPermissionName: 'RECOVERYPAYMENT_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            default:\r\n                this.buttonsArray = [];\r\n        }\r\n    }\r\n\r\n    setOptions(status: string) {\r\n        switch (status) {\r\n            case 'Active':\r\n                this.optionArray = [\r\n                    {\r\n                        name: 'Waive Interest',\r\n                        taskPermissionName: 'WAIVEINTERESTPORTION_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Reschedule',\r\n                        taskPermissionName: 'CREATE_RESCHEDULELOAN',\r\n                    },\r\n                    {\r\n                        name: 'Write Off',\r\n                        taskPermissionName: 'WRITEOFF_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Close (as Rescheduled)',\r\n                        taskPermissionName: 'CLOSEASRESCHEDULED_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Close',\r\n                        taskPermissionName: 'CLOSE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Loan Screen Report',\r\n                        taskPermissionName: 'READ_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'View Guarantors',\r\n                        taskPermissionName: 'READ_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Create Guarantor',\r\n                        taskPermissionName: 'CREATE_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Recover From Guarantor',\r\n                        taskPermissionName: 'RECOVERGUARANTEES_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Submitted and pending approval':\r\n                this.optionArray = [\r\n                    {\r\n                        name: 'Withdrawn by client',\r\n                        taskPermissionName: 'WITHDRAW_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Delete',\r\n                        taskPermissionName: 'DELETE_LOAN',\r\n                    },\r\n                    {\r\n                        name: 'Add Collateral',\r\n                        taskPermissionName: 'CREATE_COLLATERAL',\r\n                    },\r\n                    {\r\n                        name: 'View Guarantors',\r\n                        taskPermissionName: 'READ_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Create Guarantor',\r\n                        taskPermissionName: 'CREATE_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Loan Screen Reports',\r\n                        taskPermissionName: 'READ_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            case 'Approved':\r\n                this.optionArray = [\r\n                    {\r\n                        name: 'Add Loan Charge',\r\n                        taskPermissionName: 'CREATE_LOANCHARGE',\r\n                    },\r\n                    {\r\n                        name: 'View Guarantors',\r\n                        taskPermissionName: 'READ_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Create Guarantor',\r\n                        taskPermissionName: 'CREATE_GUARANTOR',\r\n                    },\r\n                    {\r\n                        name: 'Loan Screen Report',\r\n                        taskPermissionName: 'READ_LOAN',\r\n                    },\r\n                ];\r\n                break;\r\n            default:\r\n                this.optionArray = [];\r\n        }\r\n    }\r\n\r\n    addOption(option: { name: string, icon?: string, taskPermissionName?: string }) {\r\n        this.optionArray.push(option);\r\n    }\r\n\r\n    addButton(option: { name: string, icon: string, taskPermissionName?: string }) {\r\n        this.buttonsArray.push(option);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-loan-collateral-tab',\r\n  templateUrl: './loan-collateral-tab.component.html',\r\n  styleUrls: ['./loan-collateral-tab.component.scss']\r\n})\r\nexport class LoanCollateralTabComponent implements OnInit {\r\n\r\n  /** Loan Details */\r\n  loanDetails: any;\r\n  /** Columns to be displayed in collateral table. */\r\n  displayedColumns: string[] = ['type', 'value', 'description'];\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"loanDetails.collateral\">\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef> Type </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.type.name }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef> Value </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.value }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Description </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.description }} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { environment } from 'environments/environment';\r\nimport { LoansService } from 'app/loans/loans.service';\r\n\r\n/** Dialog Components */\r\nimport { LoanAccountLoadDocumentsDialogComponent } from 'app/loans/custom-dialog/loan-account-load-documents-dialog/loan-account-load-documents-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/**\r\n * Overdue charges tab component\r\n */\r\n@Component({\r\n  selector: 'mifosx-loan-documents-tab',\r\n  templateUrl: './loan-documents-tab.component.html',\r\n  styleUrls: ['./loan-documents-tab.component.scss']\r\n})\r\nexport class LoanDocumentsTabComponent implements OnInit {\r\n  @ViewChild('documentsTable') documentsTable: MatTable<Element>;\r\n\r\n  /** Stores the resolved loan documents data */\r\n  loanDocuments: any;\r\n  /** Stores the resolved loan details data */\r\n  loanDetailsData: any;\r\n  /** Status of the loan account */\r\n  status: any;\r\n  /** Choice */\r\n  choice: boolean;\r\n\r\n  /** Columns to be displayed in loan documents table. */\r\n  displayedColumns: string[] = ['name', 'description', 'filename', 'actions'];\r\n  /** Data source for loan documents table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /** Paginator for codes table. */\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  /** Sorter for codes table. */\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private loansService: LoansService,\r\n    public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { loanDocuments: any }) => {\r\n      this.getLoanDocumentsData(data.loanDocuments);\r\n    });\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.loanDetailsData = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.status = this.loanDetailsData.status.value;\r\n    if (this.status === 'Submitted and pending approval' || this.status === 'Active' || this.status === 'Approved') {\r\n      this.choice = true;\r\n    }\r\n    this.dataSource = new MatTableDataSource(this.loanDocuments);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getLoanDocumentsData(data: any) {\r\n    data.forEach((ele: any) => {\r\n      let loandocs = {};\r\n      loandocs = environment.serverUrl + '/loans/' + ele.parentEntityId + '/documents/' + ele.id + '/attachment?tenantIdentifier=' + environment.fineractPlatformTenantId;\r\n      ele.docUrl = loandocs;\r\n      if (ele.fileName) {\r\n        if (ele.fileName.toLowerCase().indexOf('.jpg') !== -1 || ele.fileName.toLowerCase().indexOf('.jpeg') !== -1 || ele.fileName.toLowerCase().indexOf('.png') !== -1) {\r\n          ele.fileIsImage = true;\r\n        }\r\n      }\r\n      if (ele.type) {\r\n        if (ele.type.toLowerCase().indexOf('image') !== -1) {\r\n          ele.fileIsImage = true;\r\n        }\r\n      }\r\n    });\r\n    this.loanDocuments = data;\r\n  }\r\n\r\n  uploadDocument() {\r\n    const uploadLoanDocumentDialogRef = this.dialog.open(LoanAccountLoadDocumentsDialogComponent);\r\n    uploadLoanDocumentDialogRef.afterClosed().subscribe((data: any) => {\r\n      if (data) {\r\n        this.loansService.loadLoanDocument(this.loanDetailsData.id, data)\r\n          .subscribe(() => {});\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDocument(documentId: any, index: any) {\r\n    const deleteDocumentDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `document id:${documentId}` }\r\n    });\r\n    deleteDocumentDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteLoanDocument(this.loanDetailsData.id, documentId).subscribe((res: any) => {\r\n          this.loanDocuments.splice(index, 1);\r\n          this.documentsTable.renderRows();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div>\r\n    <div fxLayout=\"column\" fxFlex=\"100%\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"uploadDocument()\" *ngIf=\"choice\">\r\n          <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"loanDocuments.length > 0\">\r\n\r\n    <table mat-table #documentsTable [dataSource]=\"dataSource\" matSort>\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let document\"> {{ document.name }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n        <td mat-cell *matCellDef=\"let document\"> {{ document.description }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"filename\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> File Name </th>\r\n        <td mat-cell *matCellDef=\"let document\"> {{ document.fileName }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\r\n        <td mat-cell *matCellDef=\"let document; let index\">\r\n          <button class=\"loan-document-action-button\" mat-raised-button color=\"primary\">\r\n            <fa-icon icon=\"cloud-download-alt\"></fa-icon>\r\n          </button>\r\n\r\n          <button class=\"loan-document-action-button\" mat-raised-button color=\"primary\" *ngIf=\"document.fileIsImage\">\r\n            <i class=\"fa fa-eye\"></i>\r\n          </button>\r\n\r\n          <button class=\"loan-document-action-button\" mat-raised-button color=\"warn\"\r\n            (click)=\"deleteDocument(document.id, index)\">\r\n            <fa-icon icon=\"times\"></fa-icon>\r\n          </button>\r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n\r\n  </ng-container>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-loan-tranche-details',\r\n  templateUrl: './loan-tranche-details.component.html',\r\n  styleUrls: ['./loan-tranche-details.component.scss'],\r\n})\r\nexport class LoanTrancheDetailsComponent implements OnInit {\r\n  loanDetails: any;\r\n  return: any;\r\n  status: any;\r\n  totalDisbursedAmount: any;\r\n  count: number;\r\n  expectedDisbursementColumns: string[] = ['expected disbursement on', 'disbursed on', 'principal', 'action'];\r\n  emivariationColumns: string[] = ['emi amount variation from', 'fixed emi amount'];\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.status = this.loanDetails.status.value;\r\n  }\r\n\r\n  showAddDeleteTrancheButtons(action: string) {\r\n    this.return = true;\r\n    if (\r\n      this.status === 'Closed (obligations met)' ||\r\n      this.status === 'Overpaid' ||\r\n      this.status === 'Closed (rescheduled)' ||\r\n      this.status === 'Closed (written off)' ||\r\n      this.status === 'Submitted and pending approval'\r\n    ) {\r\n      this.return = false;\r\n    }\r\n    this.totalDisbursedAmount = 0;\r\n    this.count = 0;\r\n    this.loanDetails.disbursementDetails.forEach((element: any) => {\r\n      if (element.actualDisbursementDate) {\r\n        this.totalDisbursedAmount += element.principal;\r\n      } else {\r\n        this.count += 1;\r\n      }\r\n    });\r\n\r\n    if (this.totalDisbursedAmount === this.loanDetails.approvedPrincipal || this.return === false) {\r\n      return false;\r\n    }\r\n    if (this.count === 0 && action === 'deletedisbursedetails') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  showEdit(disbursementDetail: any) {\r\n    if (\r\n      (!disbursementDetail.actualDisbursementDate || disbursementDetail.actualDisbursementDate === null) &&\r\n      this.status === 'Approved'\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div fxFlexFill>\r\n    <span fxFlex=\"40%\">Maximum allowed outstanding balance:</span>\r\n    <span fxFlex=\"60%\">{{ loanDetails.maxOutstandingLoanBalance | number }}</span>\r\n  </div>\r\n\r\n  <h3> Loan Tranche Details</h3>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n      <button mat-raised-button color=\"primary\" *ngIf=\"showAddDeleteTrancheButtons('adddisbursedetails')\">\r\n        <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp;Add\r\n      </button>\r\n      <span class=\"delete-button\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"delete()\" *ngIf=\"showAddDeleteTrancheButtons('deletedisbursedetails')\">\r\n          <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;Delete\r\n        </button>\r\n      </span>\r\n  </div>\r\n\r\n  <table mat-table [dataSource]=\"loanDetails.disbursementDetails\" *ngIf=\"loanDetails.disbursementDetails.length>0\">\r\n\r\n    <ng-container matColumnDef=\"expected disbursement on\">\r\n      <th mat-header-cell *matHeaderCellDef> Expected Disbursement On </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.expectedDisbursementDate | date}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"disbursed on\">\r\n      <th mat-header-cell *matHeaderCellDef> Disbursed On </th>\r\n      <td mat-cell *matCellDef=\"let ele\">\r\n        <span *ngIf=\"ele.actualDisbursementDate\">\r\n          {{ ele.actualDisbursementDate | date }}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"principal\">\r\n      <th mat-header-cell *matHeaderCellDef> Principal </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.principal }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let ele\">\r\n        <span *ngIf=\"ele.actualDisbursementDate\">\r\n          <i class=\"fa fa-check \"></i>\r\n        </span>\r\n        <button mat-raised-button color=\"primary\" *ngIf=\"showEdit(ele)\">\r\n          <i class=\"fa fa-pencil\"></i>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"expectedDisbursementColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: expectedDisbursementColumns;\"></tr>\r\n  </table>\r\n\r\n  <div *ngIf=\"loanDetails.emiAmountVariations.length > 0\">\r\n\r\n    <h3>Installment Amount Variations: </h3>\r\n\r\n    <table mat-table [dataSource]=\"loanDetails.emiAmountVariations\">\r\n\r\n      <ng-container matColumnDef=\"emi amount variation from\">\r\n        <th mat-header-cell *matHeaderCellDef> Applicable From Date </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.termVariationApplicableFrom | date}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"fixed emi amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Installment Amount </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.termValue }} </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"emivariationColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: emivariationColumns;\"></tr>\r\n    </table>\r\n  </div>\r\n  \r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../loans.service';\r\n\r\n/** Custom Buttons Configuration */\r\nimport { LoansAccountButtonConfiguration } from './loan-accounts-button-config';\r\n\r\n/** Dialog Components */\r\nimport { ConfirmationDialogComponent } from '../../shared/confirmation-dialog/confirmation-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n@Component({\r\n  selector: 'mifosx-loans-view',\r\n  templateUrl: './loans-view.component.html',\r\n  styleUrls: ['./loans-view.component.scss']\r\n})\r\nexport class LoansViewComponent implements OnInit {\r\n\r\n  /** Loan Details Data */\r\n  loanDetailsData: any;\r\n  /** Loan Datatables */\r\n  loanDatatables: any;\r\n  /** Recalculate Interest */\r\n  recalculateInterest: any;\r\n  /** Status */\r\n  status: string;\r\n  /** Loan Id */\r\n  loanId: number;\r\n  /** Client Id */\r\n  clientId: any;\r\n  /** Button Configuration */\r\n  buttonConfig: LoansAccountButtonConfiguration;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              public loansService: LoansService,\r\n              public dialog: MatDialog) {\r\n    this.route.data.subscribe((data: { loanDetailsData: any, loanDatatables: any}) => {\r\n      this.loanDetailsData = data.loanDetailsData;\r\n      this.loanDatatables = data.loanDatatables;\r\n    });\r\n    this.loanId = this.route.snapshot.params['loanId'];\r\n    this.clientId = this.loanDetailsData.clientId;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.recalculateInterest = this.loanDetailsData.recalculateInterest || true;\r\n    this.status = this.loanDetailsData.status.value;\r\n    this.setConditionalButtons();\r\n  }\r\n\r\n  // Defines the buttons based on the status of the loan account\r\n  setConditionalButtons() {\r\n    this.buttonConfig = new LoansAccountButtonConfiguration(this.status);\r\n\r\n    if (this.status === 'Submitted and pending approval') {\r\n\r\n      this.buttonConfig.addOption({\r\n        name: (this.loanDetailsData.loanOfficerName ? 'Change Loan Officer' : 'Assign Loan Officer'),\r\n        taskPermissionName: 'DISBURSE_LOAN'\r\n      });\r\n\r\n      if (this.loanDetailsData.isVariableInstallmentsAllowed) {\r\n        this.buttonConfig.addOption({\r\n          name: 'Edit Repayment Schedule',\r\n          taskPermissionName: 'ADJUST_REPAYMENT_SCHEDULE'\r\n        });\r\n      }\r\n\r\n    } else if (this.status === 'Approved') {\r\n\r\n      this.buttonConfig.addButton({\r\n        name: (this.loanDetailsData.loanOfficerName ? 'Change Loan Officer' : 'Assign Loan Officer'),\r\n        icon: 'fa fa-user',\r\n        taskPermissionName: 'DISBURSE_LOAN'\r\n      });\r\n\r\n    } else if (this.status === 'Active') {\r\n\r\n      if (this.loanDetailsData.canDisburse) {\r\n        this.buttonConfig.addButton({\r\n          name: 'Disburse',\r\n          icon: 'fa fa-flag',\r\n          taskPermissionName: 'DISBURSE_LOAN'\r\n        });\r\n        this.buttonConfig.addButton({\r\n          name: 'Disburse To Savings',\r\n          icon: 'fa fa-flag',\r\n          taskPermissionName: 'DISBURSETOSAVINGS_LOAN'\r\n        });\r\n      }\r\n\r\n      // loan officer not assigned to loan, below logic\r\n      // helps to display otherwise not\r\n      if (!this.loanDetailsData.loanOfficerName) {\r\n        this.buttonConfig.addButton({\r\n          name: 'Assign Loan Officer',\r\n          icon: 'fa fa-user',\r\n          taskPermissionName: 'UPDATELOANOFFICER_LOAN'\r\n        });\r\n      }\r\n\r\n      if (this.recalculateInterest) {\r\n        this.buttonConfig.addButton({\r\n          name: 'Prepay Loan',\r\n          icon: 'fa fa-money',\r\n          taskPermissionName: 'REPAYMENT_LOAN'\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  loanAction(button: string) {\r\n    switch (button) {\r\n      case 'Recover From Guarantor':\r\n        this.recoverFromGuarantor();\r\n        break;\r\n      case 'Delete':\r\n        this.deleteLoanAccount();\r\n        break;\r\n      case 'Modify Application':\r\n        this.router.navigate(['edit-loans-account'], { relativeTo: this.route});\r\n        break;\r\n      case 'Transfer Funds':\r\n        const queryParams: any = { loanId: this.loanId, accountType: 'fromloans' };\r\n        this.router.navigate(['transfer-funds/make-account-transfer'], { relativeTo: this.route, queryParams: queryParams });\r\n        break;\r\n      default:\r\n        this.router.navigate(['actions', button], { relativeTo: this.route });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recover from guarantor action\r\n   */\r\n  private recoverFromGuarantor() {\r\n    const recoverFromGuarantorDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { heading: 'Recover from Guarantor', dialogContext: 'Are you sure you want recover from Guarantor', type: 'Mild' }\r\n    });\r\n    recoverFromGuarantorDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.loansService.loanActionButtons(this.loanId, 'recoverGuarantees').subscribe(() => {\r\n          this.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete loan Account\r\n   */\r\n  private deleteLoanAccount() {\r\n    const deleteGuarantorDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `with loan id: ${this.loanId}` }\r\n    });\r\n    deleteGuarantorDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteLoanAccount(this.loanId).subscribe(() => {\r\n          this.router.navigate(['../../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refetches data for the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.clientId;\r\n    const url: string = this.router.url;\r\n    this.router.navigateByUrl(`/clients/${clientId}/loans-accounts`, { skipLocationChange: true })\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<mat-card class=\"loan-card\">\r\n\r\n  <mat-card-header fxLayout=\"column\" class=\"header\">\r\n\r\n\t<mat-card-title-group class=\"header-title-group\">\r\n\r\n\t<div class=\"profile-image-container\">\r\n\t\t<div>\r\n\t\t\t<img mat-card-md-image class=\"profile-image\" matTooltip=\"Loans Account\"\r\n\t\t\t\t[src]=\"'assets/images/loans_account_placeholder.png'\">\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t  <div class=\"mat-typography loan-card-title\">\r\n\t    <mat-card-title>\r\n\t\t  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n\r\n\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t  <i class=\"fa fa-stop\" matTooltip=\"{{ loanDetailsData.status.value }}\" [ngClass]=\"loanDetailsData.inArrears?'status-active-overdue':(loanDetailsData.status.code|statusLookup)\"></i>\r\n\t\t\t\t  Loan Product: {{loanDetailsData.loanProductName}}(#{{loanDetailsData.accountNo}})\r\n\t\t\t\t  <br/>\r\n\t\t\t\t  <span *ngIf=\"loanDetailsData.clientName\" > Client Name: {{loanDetailsData.clientName}} </span> <br/>\r\n\t\t\t\t  <span *ngIf=\"loanDetailsData.group\" > Group Name: {{loanDetailsData.group.name}} </span>\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div *ngIf=\"loanDetailsData.summary\" class=\"loansOverview mat-typography\" fxFlex=\"50%\">\r\n\t\t\t  <h3> Loan Account OverView </h3>\r\n\t\t\t\t<span>Current Balance: {{loanDetailsData.currency.displaySymbol}} {{loanDetailsData.summary.totalOutstanding | number}}</span><br>\r\n\t\t\t\t  <span>Arrears By: {{loanDetailsData.summary.totalOverdue | number}}\r\n\t\t\t\t  <span *ngIf=\"!(loanDetailsData.summary.totalOverdue>=0)\">Not Provided</span>\r\n\t\t\t\t</span><br>\r\n\t\t\t</div>\r\n\r\n\t\t  </div>\r\n\t\t</mat-card-title>\r\n\t  </div>\r\n\t</mat-card-title-group>\r\n\r\n\t<mat-card-actions class=\"loan-actions\">\r\n\r\n\t  <ng-container *ngFor=\"let item of buttonConfig.singleButtons\" class=\"loan-span\">\r\n\t\t<button mat-raised-button *mifosxHasPermission=\"item.taskPermissionName\" (click)=\"loanAction(item.name)\">\r\n\t\t  <i class=\"{{item.icon}}\"></i> {{item.name}} </button>\r\n\t  </ng-container>\r\n\r\n\t  <ng-container *ngIf=\"buttonConfig.options.length\" class=\"loan-span\">\r\n\t\t<button mat-raised-button [matMenuTriggerFor]=\"More\">More</button>\r\n\t\t  <mat-menu #More=\"matMenu\">\r\n\t\t\t<span *ngFor=\"let item of buttonConfig.options\">\r\n\t\t\t  <button mat-menu-item *mifosxHasPermission=\"item.taskPermissionName\" (click)=\"loanAction(item.name)\">{{item.name}}</button>\r\n\t\t\t</span>\r\n\t\t  </mat-menu>\r\n\t  </ng-container>\r\n\r\n\t</mat-card-actions>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <nav mat-tab-nav-bar class=\"navigation-tabs\">\r\n  \t  <a mat-tab-link [routerLink]=\"['./general']\" routerLinkActive #general=\"routerLinkActive\" [active]=\"general.isActive\">\r\n\t\tGeneral\r\n\t  </a>\r\n\t  <a mat-tab-link [routerLink]=\"['./accountdetail']\" routerLinkActive #accountdetail=\"routerLinkActive\" [active]=\"accountdetail.isActive\">\r\n\t\tAccount Details\r\n\t  </a>\r\n\t  <ng-container *ngIf=\"loanDetailsData.originalSchedule\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./original-schedule']\" routerLinkActive #originalSchedule=\"routerLinkActive\" [active]=\"originalSchedule.isActive\">\r\n\t\t  Original Schedule\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t  <a mat-tab-link [routerLink]=\"['./repayment-schedule']\" routerLinkActive #repaymentSchedule=\"routerLinkActive\" [active]=\"repaymentSchedule.isActive\">\r\n\t\tRepayment Schedule\r\n\t  </a>\r\n\t  <ng-container *ngIf=\"loanDetailsData.transactions\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./transactions']\" routerLinkActive #transactions=\"routerLinkActive\" [active]=\"transactions.isActive\">\r\n\t\t  Transactions\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t  <ng-container *ngIf=\"loanDetailsData.collateral\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./loan-collateral']\" routerLinkActive #loanCollateralDetails=\"routerLinkActive\"\r\n\t  \t  [active]=\"loanCollateralDetails.isActive\">\r\n\t      Loan Collateral Details\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t  <ng-container *ngIf=\"loanDetailsData.multiDisburseLoan\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./loan-tranche-details']\" routerLinkActive #loanTrancheDetails=\"routerLinkActive\" [active]=\"loanTrancheDetails.isActive\">\r\n\t\t  Loan Tranche Details\r\n\t\t</a>\r\n      </ng-container>\r\n\t  <ng-container *ngIf=\"loanDetailsData.overdueCharges.length > 0\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./overdue-charges']\" routerLinkActive #overduecharges=\"routerLinkActive\" [active]=\"overduecharges.isActive\">\r\n\t\t\tOverdue Charges\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t  <ng-container *ngIf=\"loanDetailsData.isLoanProductLinkedToFloatingRate\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./floating-interest-rates']\" routerLinkActive #floatingInterestRates=\"routerLinkActive\" [active]=\"floatingInterestRates.isActive\">\r\n\t\t\tFloating Interest Rates\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t  <ng-container *ngIf=\"loanDetailsData.charges\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./charges']\" routerLinkActive #charges=\"routerLinkActive\" [active]=\"charges.isActive\">\r\n\t\t  Charges\r\n\t\t</a>\r\n\t  </ng-container>\r\n\t\t<a mat-tab-link [routerLink]=\"['./loan-documents']\" routerLinkActive #loanDocuments=\"routerLinkActive\" [active]=\"loanDocuments.isActive\">\r\n\t\t\tLoan Documents\r\n\t\t</a>\r\n\t  <a mat-tab-link *mifosxHasPermission=\"'READ_LOANNOTE'\" [routerLink]=\"['./notes']\" routerLinkActive #notes=\"routerLinkActive\" [active]=\"notes.isActive\">\r\n\t\tNotes\r\n\t  </a>\r\n\t<ng-container *ngIf=\"loanDetailsData.clientId\">\r\n\t\t<a mat-tab-link [routerLink]=\"['./standing-instruction']\" routerLinkActive #standingInstruction=\"routerLinkActive\"\r\n\t\t\t[active]=\"standingInstruction.isActive\">\r\n\t\t\tStanding Instruction\r\n\t\t</a>\r\n\t</ng-container>\r\n\t  <ng-container *ngFor=\"let loanDatatable of loanDatatables\">\r\n        <a mat-tab-link *mifosxHasPermission=\"'READ_' + loanDatatable.registeredTableName\" [routerLink]=\"['./datatables',loanDatatable.registeredTableName]\"\r\n          routerLinkActive #datatable=\"routerLinkActive\" [active]=\"datatable.isActive\">\r\n          {{loanDatatable.registeredTableName}}\r\n        </a>\r\n      </ng-container>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/** Custom Components */\r\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from '../../loans.service';\r\nimport { AuthenticationService } from '../../../core/authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'mifosx-notes-tab',\r\n  templateUrl: './notes-tab.component.html',\r\n  styleUrls: ['./notes-tab.component.scss']\r\n})\r\nexport class NotesTabComponent implements OnInit {\r\n\r\n  loanId: string;\r\n  username: string;\r\n  loanNotes: any;\r\n  noteForm: FormGroup;\r\n  @ViewChild('formRef', { static: true }) formRef: any;\r\n\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private loansService: LoansService,\r\n    private authenticationService: AuthenticationService,\r\n    private dialog: MatDialog) {\r\n    const savedCredentials = this.authenticationService.getCredentials();\r\n    this.username = savedCredentials.username;\r\n    this.loanId = this.route.parent.snapshot.params['loanId'];\r\n    this.route.data.subscribe((data: { loanNotes: any }) => {\r\n      this.loanNotes = data.loanNotes;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createNoteForm();\r\n  }\r\n\r\n  createNoteForm() {\r\n    this.noteForm = this.formBuilder.group({\r\n      'note': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.loansService.createLoanNote(this.loanId, this.noteForm.value).subscribe((response: any) => {\r\n      this.loanNotes.push({\r\n        id: response.resourceId,\r\n        createdByUsername: this.username,\r\n        createdOn: new Date(),\r\n        note: this.noteForm.value.note\r\n      });\r\n      this.formRef.resetForm();\r\n    });\r\n  }\r\n\r\n  editNote(noteId: string, noteContent: string, index: number) {\r\n    const editNoteDialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: { formfields: [{\r\n                controlName: 'note',\r\n                required: true,\r\n                value: noteContent,\r\n                controlType: 'input',\r\n                label: 'Note'\r\n              }],\r\n              layout: {\r\n                columns: 1,\r\n                addButtonText: 'Confirm'\r\n              },\r\n              title: 'Edit Note'\r\n            }\r\n    });\r\n    editNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        this.loansService.editLoanNote(this.loanId, noteId, response.data.value).subscribe(() => {\r\n          this.loanNotes[index].note = response.data.value.note;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteNote(noteId: string, index: number) {\r\n    const deleteNoteDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `Note id:${noteId}` }\r\n    });\r\n    deleteNoteDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteLoanNote(this.loanId, noteId)\r\n          .subscribe(() => {\r\n            this.loanNotes.splice(index, 1);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n  <h3>Notes</h3>\r\n  <div>\r\n    <form #formRef=\"ngForm\" [formGroup]=\"noteForm\" fxLayout=\"row\" fxLayoutAlign=\"start baseline\" fxLayoutGap=\"20px\"\r\n      (ngSubmit)=\"submit()\">\r\n      <mat-form-field fxFlex=\"calc(90%-20px)\">\r\n        <textarea formControlName=\"note\" matInput placeholder=\"Write a note ....\"></textarea>\r\n      </mat-form-field>\r\n      <button mat-raised-button fxFlex color=\"primary\" [disabled]=\"!noteForm.valid\">\r\n        <fa-icon icon=\"plus\"></fa-icon>&nbsp;&nbsp; Add\r\n      </button>\r\n    </form>\r\n  </div>\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let loanNote of loanNotes; let i=index;\">\r\n      <fa-icon icon=\"sticky-note\" matListIcon></fa-icon>\r\n      <h3 matLine>{{loanNote.note}} </h3>\r\n      <p matLine>\r\n        <span>Created by: {{loanNote.createdByUsername}}</span><br />\r\n        <span>Date: {{loanNote.createdOn | date}}</span>\r\n      </p>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"flex-start\">\r\n        <button mat-button color=\"primary\" (click)=\"editNote(loanNote.id,loanNote.note,i)\">\r\n          <fa-icon icon=\"edit\"></fa-icon>\r\n        </button>\r\n        <button mat-button color=\"warn\" (click)=\"deleteNote(loanNote.id,i)\">\r\n          <fa-icon icon=\"trash\"></fa-icon>\r\n        </button>\r\n      </div>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-original-schedule-tab',\r\n  templateUrl: './original-schedule-tab.component.html',\r\n  styleUrls: ['./original-schedule-tab.component.scss']\r\n})\r\nexport class OriginalScheduleTabComponent implements OnInit {\r\n\r\n  /** Loan Details Data */\r\n  originalScheduleDetails: any;\r\n  /** Columns to be displayed in original schedule table. */\r\n  displayedColumns: string[] = ['date', 'principalDue', 'balanceOfLoan', 'interest', 'fees', 'penalties', 'outstanding'];\r\n\r\n  /**\r\n   * Retrieves the loans with associations data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.originalScheduleDetails = data.loanDetailsData.originalSchedule;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"originalScheduleDetails.periods\" matSort>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.dueDate | date}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> Total</b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"principalDue\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Principal Due </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.principalDue | number }} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ originalScheduleDetails.totalPrincipalExpected | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"balanceOfLoan\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Balance Of Loan </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.principalLoanBalanceOutstanding | number }} </td>\r\n      <td mat-footer-cell *matFooterCellDef> &nbsp; </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interest\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Interest </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.interestOriginalDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ originalScheduleDetails.totalInterestCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fees\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fees </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.feeChargesDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ originalScheduleDetails.totalFeeChargesCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"penalties\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Penalties </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.penaltyChargesDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ originalScheduleDetails.totalPenaltyChargesCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"outstanding\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Outstanding </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalOutstandingForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ originalScheduleDetails.totalRepaymentExpected | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <!-- Header row first group -->\r\n    <ng-container matColumnDef=\"header\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> </th>\r\n    </ng-container>\r\n\r\n    <!-- Header row second group -->\r\n    <ng-container matColumnDef=\"header-amount\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"2\"> Loan Amount and Balance </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-total-cost\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"3\"> Total Cost of Loan </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-installment-totals\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> Installment Totals </th>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"['header', 'header-amount', 'header-total-cost', 'header-installment-totals']\"></tr>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Overdue charges tab component\r\n */\r\n@Component({\r\n  selector: 'mifosx-overdue-charges-tab',\r\n  templateUrl: './overdue-charges-tab.component.html',\r\n  styleUrls: ['./overdue-charges-tab.component.scss']\r\n})\r\nexport class OverdueChargesTabComponent implements OnInit {\r\n\r\n  /** Stores the resolved loan data */\r\n  loanDetails: any;\r\n  /** Stores the overdue data */\r\n  overdueCharges: any;\r\n\r\n  /** Columns to be displayed in overdue charges table. */\r\n  displayedColumns: string[] = ['name', 'type', 'amount', 'collectedon'];\r\n  /** Data source for codes table. */\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  /** Paginator for codes table. */\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  /** Sorter for codes table. */\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  /**\r\n   * Retrieves the loans data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe(( data: { loanDetailsData: any }) => {\r\n      this.loanDetails = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.overdueCharges = this.loanDetails.overdueCharges;\r\n    this.dataSource = new MatTableDataSource(this.overdueCharges);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.name }},{{ charge.currency.displaySymbol }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeCalculationType.value }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.amount| number }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"collectedon\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Collected On </th>\r\n      <td mat-cell *matCellDef=\"let charge\"> {{ charge.chargeTimeType.value }} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mifosx-repayment-schedule-tab',\r\n  templateUrl: './repayment-schedule-tab.component.html',\r\n  styleUrls: ['./repayment-schedule-tab.component.scss']\r\n})\r\nexport class RepaymentScheduleTabComponent implements OnInit {\r\n\r\n  /** Loan Repayment Schedule Details Data */\r\n  repaymentScheduleDetails: any;\r\n  /** Stores if there is any waived amount */\r\n  isWaived: boolean;\r\n  /** Columns to be displayed in original schedule table. */\r\n  displayedColumns: string[] = ['number', 'days', 'date', 'paiddate', 'check', 'principalDue', 'balanceOfLoan', 'interest', 'fees', 'penalties', 'due', 'paid', 'inadvance', 'late', 'waived', 'outstanding'];\r\n\r\n  /**\r\n   * Retrieves the loans with associations data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.repaymentScheduleDetails = data.loanDetailsData.repaymentSchedule;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isWaived = this.repaymentScheduleDetails.totalWaived > 0;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <table mat-table [dataSource]=\"repaymentScheduleDetails.periods\">\r\n\r\n    <ng-container matColumnDef=\"number\">\r\n      <th mat-header-cell *matHeaderCellDef> # </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.period }} </td>\r\n      <td mat-footer-cell *matFooterCellDef> &nbsp; </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"days\">\r\n      <th mat-header-cell *matHeaderCellDef> Days </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.daysInPeriod }} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> Total</b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.dueDate | date}} </td>\r\n      <td mat-footer-cell *matFooterCellDef>  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"paiddate\">\r\n      <th mat-header-cell *matHeaderCellDef> Paid Date </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.obligationsMetOnDate | date}} </td>\r\n      <td mat-footer-cell *matFooterCellDef>  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"check\">\r\n      <th mat-header-cell *matHeaderCellDef> &nbsp; </th>\r\n      <td mat-cell *matCellDef=\"let ele\">\r\n        <span *ngIf=\"ele.obligationsMetOnDate\"> <i class='fa fa-check'></i> </span> \r\n      </td>\r\n      <td mat-footer-cell *matFooterCellDef> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"principalDue\">\r\n      <th mat-header-cell *matHeaderCellDef> Principal Due </th>\r\n      <td mat-cell class=\"check\" *matCellDef=\"let ele\"> {{ ele.principalDue | number }} </td>\r\n      <td mat-footer-cell class=\"check\" *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalPrincipalExpected | number }}</b>  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"balanceOfLoan\">\r\n      <th mat-header-cell *matHeaderCellDef> Balance Of Loan </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.principalLoanBalanceOutstanding | number }} </td>\r\n      <td mat-footer-cell *matFooterCellDef> &nbsp; </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"interest\">\r\n      <th mat-header-cell *matHeaderCellDef> Interest </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.interestOriginalDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalInterestCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"fees\">\r\n      <th mat-header-cell *matHeaderCellDef> Fees </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.feeChargesDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalFeeChargesCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"penalties\">\r\n      <th mat-header-cell *matHeaderCellDef> Penalties </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.penaltyChargesDue | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalPenaltyChargesCharged | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"due\">\r\n      <th mat-header-cell *matHeaderCellDef> Due </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalDueForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalRepaymentExpected | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"paid\">\r\n      <th mat-header-cell *matHeaderCellDef> Paid </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalPaidForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalRepayment | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"inadvance\">\r\n      <th mat-header-cell *matHeaderCellDef> In advance </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalPaidInAdvanceForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalPaidInAdvance | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"late\">\r\n      <th mat-header-cell *matHeaderCellDef> Late </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalPaidLateForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalPaidLate | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"isWaived\">\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> Waived </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalWaivedForPeriod | number}} </td>\r\n        <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalWaived | number }} </b> </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"!isWaived\">\r\n      <ng-container matColumnDef=\"waived\">\r\n        <th mat-header-cell *matHeaderCellDef> </th>\r\n        <td mat-cell *matCellDef=\"let ele\"> </td>\r\n        <td mat-footer-cell *matFooterCellDef> <b> </b> </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"outstanding\">\r\n      <th mat-header-cell *matHeaderCellDef> Outstanding </th>\r\n      <td mat-cell *matCellDef=\"let ele\"> {{ ele.totalOutstandingForPeriod | number}} </td>\r\n      <td mat-footer-cell *matFooterCellDef> <b> {{ repaymentScheduleDetails.totalOutstanding | number }} </b> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"5\"> </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-amount\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"2\"> Loan Amount and Balance </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-total-cost\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"3\"> Total Cost of Loan </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-installment-totals\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"6\"> Installment Totals </th>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"['header', 'header-amount', 'header-total-cost', 'header-installment-totals']\"></tr>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n\r\n<!-- <p>It works</p> -->","/** Angular Imports */\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { AccountTransfersService } from 'app/account-transfers/account-transfers.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Dialog Components */\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\n\r\n/**\r\n * Loans Standing Instructions Tab\r\n */\r\n@Component({\r\n  selector: 'mifosx-standing-instructions-tab',\r\n  templateUrl: './standing-instructions-tab.component.html',\r\n  styleUrls: ['./standing-instructions-tab.component.scss']\r\n})\r\nexport class StandingInstructionsTabComponent implements OnInit {\r\n\r\n  /** Loans Data */\r\n  loanDetailsData: any;\r\n  /** Instructions Data */\r\n  instructionsData: any[];\r\n  /** Data source for instructions table. */\r\n  dataSource = new MatTableDataSource();\r\n  /** Columns to be displayed in instructions table. */\r\n  displayedColumns: string[] = ['client', 'fromAccount', 'beneficiary', 'toAccount', 'amount', 'validity', 'actions'];\r\n\r\n  /** Instruction Table Reference */\r\n  @ViewChild('instructionsTable', { static: true }) instructionTableRef: MatTable<Element>;\r\n\r\n  /**\r\n   * Retrieves Loans Account Data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private loansService: LoansService,\r\n    private dialog: MatDialog,\r\n    private accountTransfersService: AccountTransfersService,\r\n    private settingsService: SettingsService) {\r\n    this.route.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.loanDetailsData = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStandingInstructions();\r\n  }\r\n\r\n  /**\r\n   * Retrieves standing instructions and initializes instructions table.\r\n   */\r\n  getStandingInstructions() {\r\n    const clientId = this.loanDetailsData.clientId;\r\n    const clientName = this.loanDetailsData.clientName;\r\n    const accountId = this.loanDetailsData.id;\r\n    const locale = this.settingsService.language.code;\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.loansService.getStandingInstructions(clientId, clientName, accountId, locale, dateFormat).subscribe((response: any) => {\r\n      this.instructionsData = response.pageItems;\r\n      this.dataSource.data = this.instructionsData;\r\n      this.instructionTableRef.renderRows();\r\n    });\r\n  }\r\n\r\n  deleteStandingInstruction(instructionId: any) {\r\n    const deleteStandingInstructionDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `standing instruction id: ${instructionId}` }\r\n    });\r\n    deleteStandingInstructionDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.accountTransfersService.deleteStandingInstrucions(instructionId)\r\n          .subscribe(() => { });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tab-container mat-typography\">\r\n\r\n  <div class=\"m-b-10\">\r\n    <h3>All Standing Instructions</h3>\r\n  </div>\r\n\r\n  <div class=\"mat-elevation-z1 m-b-25\">\r\n\r\n    <table mat-table #instructionsTable [dataSource]=\"dataSource\">\r\n\r\n      <ng-container matColumnDef=\"client\">\r\n        <th mat-header-cell *matHeaderCellDef> Client </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromClient.displayName}}-{{instruction.fromClient.id}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fromAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> From Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.fromAccount.accountNo}}\r\n          ({{instruction.fromAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"beneficiary\">\r\n        <th mat-header-cell *matHeaderCellDef> Beneficiary </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">\r\n          <span *ngIf=\"instruction.fromClient.id != instruction.toClient.id\"> {{instruction.toClient.displayName}} </span>\r\n          <span *ngIf=\"instruction.fromClient.id == instruction.toClient.id\">Own Account</span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"toAccount\">\r\n        <th mat-header-cell *matHeaderCellDef> To Account </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.toAccount.accountNo}}\r\n          ({{instruction.toAccountType.value}})</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.instructionType.value}}/{{instruction.amount}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"validity\">\r\n        <th mat-header-cell *matHeaderCellDef> Validity </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">{{instruction.validFrom | date}} to {{instruction.validTill | date}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let instruction\">\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"primary\"\r\n              matTooltip=\"Edit Standing Instruction\" *mifosxHasPermission=\"'UPDATE_STANDINGINSTRUCTION'\">\r\n              <i class=\"fa fa-edit\"></i>\r\n            </button>\r\n          </span>\r\n          <span *ngIf=\"instruction.status.value!=='Deleted'\">\r\n            <button class=\"account-action-button\" mat-raised-button color=\"warn\"\r\n              matTooltip=\"Delete Standing Instruction\" *mifosxHasPermission=\"'DELETE_STANDINGINSTRUCTION'\" (click)=\"deleteStandingInstruction(instruction.id)\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </button>\r\n          </span>\r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"View Standing Instruction\"\r\n            *mifosxHasPermission=\"'READ_STANDINGINSTRUCTION'\">\r\n            <i class=\"fa fa-eye\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mifosx-transactions-tab',\r\n  templateUrl: './transactions-tab.component.html',\r\n  styleUrls: ['./transactions-tab.component.scss']\r\n})\r\nexport class TransactionsTabComponent implements OnInit {\r\n\r\n  /** Loan Details Data */\r\n  transactions: any;\r\n  /** Show Transactions Data */\r\n  showTransactionsData: any;\r\n  /** Temporary Transaction Data */\r\n  tempTransaction: any;\r\n  /** Form control to handle accural parameter */\r\n  hideAccrualsParam: FormControl;\r\n  /** Stores the status of the loan account */\r\n  status: string;\r\n  /** Columns to be displayed in original schedule table. */\r\n  displayedColumns: string[] = ['id', 'office', 'transactionDate', 'transactionType', 'amount', 'principal', 'interest', 'fee', 'penalties', 'loanBalance', 'actions'];\r\n\r\n  /**\r\n   * Retrieves the loans with associations data from `resolve`.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.route.parent.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.transactions = data.loanDetailsData.transactions;\r\n      this.tempTransaction = data.loanDetailsData.transactions;\r\n      this.status = data.loanDetailsData.status.value;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.hideAccrualsParam = new FormControl(false);\r\n    this.tempTransaction.forEach((element: any) => {\r\n      if (element.type.accrual) {\r\n        this.tempTransaction = this.removeItem(this.tempTransaction, element);\r\n      }\r\n    });\r\n    this.showTransactionsData = this.transactions;\r\n  }\r\n\r\n  /**\r\n   * Checks Status of the loan account\r\n   */\r\n  checkStatus() {\r\n    if (this.status === 'Active' || this.status === 'Closed (obligations met)' || this.status === 'Overpaid' ||\r\n      this.status === 'Closed (rescheduled)' || this.status === 'Closed (written off)') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  hideAccruals()  {\r\n    if (!this.hideAccrualsParam.value) {\r\n      this.showTransactionsData = this.tempTransaction;\r\n    } else {\r\n      this.showTransactionsData = this.transactions;\r\n    }\r\n  }\r\n\r\n  removeItem(arr: any, item: any) {\r\n    return arr.filter((f: any) => f !== item);\r\n   }\r\n\r\n  /**\r\n   * Show Transactions Details\r\n   * @param transactionsData Transactions Data\r\n   */\r\n  showTransactions(transactionsData: any) {\r\n    if (transactionsData.type.id === 2 || transactionsData.type.id === 4 || transactionsData.type.id === 1) {\r\n      this.router.navigate([transactionsData.id], { relativeTo: this.route });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stops the propagation to view pages.\r\n   * @param $event Mouse Event\r\n   */\r\n  routeEdit($event: MouseEvent) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\" class=\"transaction-buttons\" *ngIf=\"checkStatus()\">\r\n    <mat-checkbox [formControl]=\"hideAccrualsParam\" (click)=\"hideAccruals()\" class=\"accruals\">Hide Accruals</mat-checkbox>\r\n    <button mat-raised-button color=\"primary\" [routerLink]=\"['export']\">\r\n      Export\r\n    </button>\r\n    <button mat-raised-button color=\"primary\">\r\n      View Journal Entries\r\n    </button>\r\n  </div>\r\n\r\n  <table mat-table [dataSource]=\"showTransactionsData\">\r\n\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.id }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"office\">\r\n        <th mat-header-cell *matHeaderCellDef> Office </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.officeName }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionDate\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Date </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.date | date }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"transactionType\">\r\n        <th mat-header-cell *matHeaderCellDef> Transaction Type </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.type.value  }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.amount | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"principal\">\r\n        <th mat-header-cell *matHeaderCellDef> Breakdown </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.principalPortion | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"interest\">\r\n        <th mat-header-cell *matHeaderCellDef> </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.interestPortion | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"fee\">\r\n        <th mat-header-cell *matHeaderCellDef>  </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.feeChargesPortion | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"penalties\">\r\n        <th mat-header-cell *matHeaderCellDef>  </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.penaltyChargesPortion | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"loanBalance\">\r\n        <th mat-header-cell *matHeaderCellDef> Loan Balance </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\"> {{ transaction.outstandingLoanBalance | number }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <td mat-cell *matCellDef=\"let transaction\" [ngClass]=\"{'strike': transaction.manuallyReversed}\">\r\n          <button class=\"account-action-button\" *ngIf=\"!transaction.manuallyReversed\" mat-raised-button color=\"primary\" (click)=\"routeEdit($event)\"\r\n            [routerLink]=\"[transaction.id, 'reciept']\" matTooltip=\"View Receipts\">\r\n            <i class=\"fa fa-file-text\"></i>\r\n          </button>\r\n          <button class=\"account-action-button\" mat-raised-button color=\"primary\" matTooltip=\"View Journal Entries\" matTooltipPosition=\"left\"\r\n            (click)=\"routeEdit($event)\" >\r\n            <i class=\"fa fa-arrow-circle-right\"></i>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n    <!-- Sub header -->\r\n    <ng-container matColumnDef=\"header\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"5\"> </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-principal\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> Principal </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-interest\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> Interest </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-fees\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> Fees </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-penalties\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"1\"> Penalties </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"header-action\">\r\n      <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"2\">  </th>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-header-row *matHeaderRowDef=\"['header', 'header-principal', 'header-interest', 'header-fees', 'header-penalties', 'header-action']\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"select-row\" (click)=\"showTransactions(row)\"></tr>\r\n\r\n  </table>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/**\r\n * Edit Transaction component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-edit-transaction',\r\n  templateUrl: './edit-transaction.component.html',\r\n  styleUrls: ['./edit-transaction.component.scss']\r\n})\r\nexport class EditTransactionComponent implements OnInit {\r\n\r\n  /** Minimum Due Date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum Due Date allowed. */\r\n  maxDate = new Date();\r\n  /** Loans account transaction form. */\r\n  editTransactionForm: FormGroup;\r\n  /** loans account transaction payment options. */\r\n  paymentTypeOptions: {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    isCashPayment: boolean,\r\n    position: number\r\n  }[];\r\n  /** Flag to enable payment details fields. */\r\n  addPaymentDetailsFlag: Boolean = false;\r\n  /** loan account's Id */\r\n  loanAccountId: string;\r\n  /** Transaction Template */\r\n  transactionTemplateData: any;\r\n\r\n  /**\r\n   * Retrieves the Loan Account transaction template data from `resolve`.\r\n   * @param {FormBuilder} formBuilder Form Builder.\r\n   * @param {LoansService} loansService Loans Service.\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private datePipe: DatePipe,\r\n              private loansService: LoansService,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { loansAccountTransactionTemplate: any }) => {\r\n      this.transactionTemplateData = data.loansAccountTransactionTemplate;\r\n      this.paymentTypeOptions = this.transactionTemplateData.paymentTypeOptions;\r\n    });\r\n    this.loanAccountId = this.route.parent.parent.parent.snapshot.params['loanId'];\r\n  }\r\n\r\n  /**\r\n   * Creates the Loan account transaction form when component loads.\r\n   */\r\n  ngOnInit() {\r\n    this.createEditTransactionForm();\r\n    this.editTransactionForm.patchValue({\r\n      'transactionDate': this.transactionTemplateData.date && new Date(this.transactionTemplateData.date),\r\n      'transactionAmount': this.transactionTemplateData.amount,\r\n      'paymentTypeId': this.transactionTemplateData.paymentTypeId\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to create the Loan Account Transaction Form.\r\n   */\r\n  createEditTransactionForm() {\r\n    this.editTransactionForm = this.formBuilder.group({\r\n      'transactionDate': ['', Validators.required],\r\n      'transactionAmount': ['', Validators.required],\r\n      'paymentTypeId': [''],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to add payment detail fields to the UI.\r\n   */\r\n  addPaymentDetails() {\r\n    this.addPaymentDetailsFlag = !this.addPaymentDetailsFlag;\r\n    if (this.addPaymentDetailsFlag) {\r\n      this.editTransactionForm.addControl('accountNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('checkNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('routingCode', new FormControl(''));\r\n      this.editTransactionForm.addControl('receiptNumber', new FormControl(''));\r\n      this.editTransactionForm.addControl('bankNumber', new FormControl(''));\r\n    } else {\r\n      this.editTransactionForm.removeControl('accountNumber');\r\n      this.editTransactionForm.removeControl('checkNumber');\r\n      this.editTransactionForm.removeControl('routingCode');\r\n      this.editTransactionForm.removeControl('receiptNumber');\r\n      this.editTransactionForm.removeControl('bankNumber');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to submit the transaction details.\r\n   */\r\n  submit() {\r\n    const prevTransactionDate: Date = this.editTransactionForm.value.transactionDate;\r\n    // TODO: Update once language and date settings are setup\r\n    const dateFormat = this.settingsService.dateFormat;\r\n    this.editTransactionForm.patchValue({\r\n      transactionDate: this.datePipe.transform(prevTransactionDate, dateFormat)\r\n    });\r\n    const transactionData = this.editTransactionForm.value;\r\n    transactionData.locale = this.settingsService.language.code;\r\n    transactionData.dateFormat = dateFormat;\r\n    this.loansService.executeLoansAccountTransactionsCommand(this.loanAccountId, 'modify', transactionData, this.transactionTemplateData.id)\r\n      .subscribe((res: any) => {\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"editTransactionForm\" (ngSubmit)=\"submit()\">\r\n\r\n      <mat-card-content fxLayout=\"column\">\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Date</mat-label>\r\n          <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"dueDatePicker\"\r\n            formControlName=\"transactionDate\" required>\r\n          <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dueDatePicker></mat-datepicker>\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionDate.hasError('required')\">\r\n            Transaction Date is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Transaction Amount</mat-label>\r\n          <input type=\"number\" formControlName=\"transactionAmount\" required matInput />\r\n          <mat-error *ngIf=\"editTransactionForm.controls.transactionAmount.hasError('required')\">\r\n            Transaction Amount is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Payment Type</mat-label>\r\n          <mat-select formControlName=\"paymentTypeId\">\r\n            <mat-option *ngFor=\"let paymentType of paymentTypeOptions\" [value]=\"paymentType.id\">\r\n              {{ paymentType.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n          <mat-label fxFlexAlign=\"center\">Show Payment Details</mat-label>\r\n          <button type=\"button\" mat-mini-fab color=\"primary\" (click)=\"addPaymentDetails()\">\r\n            <fa-icon [icon]=\"!addPaymentDetailsFlag ? 'plus-circle' : 'minus-circle'\" size=\"lg\"></fa-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['accountNumber']\">\r\n          <mat-label>Account Number</mat-label>\r\n          <input type=\"number\" formControlName=\"accountNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['checkNumber']\">\r\n          <mat-label>Cheque</mat-label>\r\n          <input type=\"number\" formControlName=\"checkNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['routingCode']\">\r\n          <mat-label>Routing Code</mat-label>\r\n          <input formControlName=\"routingCode\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['receiptNumber']\">\r\n          <mat-label>Receipt Number</mat-label>\r\n          <input formControlName=\"receiptNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"editTransactionForm.controls['bankNumber']\">\r\n          <mat-label>Bank</mat-label>\r\n          <input formControlName=\"bankNumber\" matInput />\r\n        </mat-form-field>\r\n\r\n        <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\r\n          <button type=\"button\" mat-raised-button [routerLink]=\"['../']\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" [disabled]=\"!editTransactionForm.valid\">Submit</button>\r\n        </mat-card-actions>\r\n\r\n      </mat-card-content>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/** Custom Services */\r\nimport { ReportsService } from 'app/reports/reports.service';\r\n\r\n/**\r\n * Export Client Loans Transactions Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-export-transactions',\r\n  templateUrl: './export-transactions.component.html',\r\n  styleUrls: ['./export-transactions.component.scss']\r\n})\r\nexport class ExportTransactionsComponent implements OnInit {\r\n\r\n  /** Minimum date allowed. */\r\n  minDate = new Date(2000, 0, 1);\r\n  /** Maximum date allowed. */\r\n  maxDate = new Date();\r\n  /** Transactions Report Form */\r\n  transactionsReportForm: any;\r\n  /** substitute for resolver */\r\n  hideOutput = true;\r\n  /** trusted resource url for pentaho output */\r\n  pentahoUrl: any;\r\n  /** Loans Account Id */\r\n  loansAccountId: any;\r\n\r\n  /**\r\n   * Fetches loans account data from grandparent's `resolve`\r\n   * @param {DomSanitizer} sanitizer DOM Sanitizer\r\n   * @param {ReportsService} reportsService Reports Service\r\n   * @param {FormBuilder} formBuilder Form Builder\r\n   * @param {DatePipe} datePipe Date Pipe\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private reportsService: ReportsService,\r\n              private formBuilder: FormBuilder,\r\n              private datePipe: DatePipe,\r\n              private route: ActivatedRoute) {\r\n    this.route.parent.parent.data.subscribe((data: { loanDetailsData: any }) => {\r\n      this.loansAccountId = data.loanDetailsData.accountNo;\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.createTransactionsReportForm();\r\n  }\r\n\r\n  /**\r\n   * Creates the transactions report form.\r\n   */\r\n  createTransactionsReportForm() {\r\n    this.transactionsReportForm = this.formBuilder.group({\r\n      'fromDate': ['', Validators.required],\r\n      'toDate': ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generates client loans transactions report.\r\n   */\r\n  generate() {\r\n    const data = {\r\n      'output-type':\t'PDF',\r\n      R_startDate:\tthis.datePipe.transform(this.transactionsReportForm.value.fromDate, 'yyyy-MM-dd'),\r\n      R_endDate:\tthis.datePipe.transform(this.transactionsReportForm.value.toDate, 'yyyy-MM-dd'),\r\n      R_selectLoan:\tthis.loansAccountId\r\n    };\r\n    this.reportsService.getPentahoRunReportData('Client Loan Account Schedule', data, 'default', 'en', 'dd MMMM yyyy')\r\n      .subscribe( (res: any) => {\r\n        const contentType = res.headers.get('Content-Type');\r\n        const file = new Blob([res.body], {type: contentType});\r\n        const filecontent = URL.createObjectURL(file);\r\n        this.pentahoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(filecontent);\r\n        this.hideOutput = false;\r\n      });\r\n  }\r\n\r\n}\r\n","<form class=\"m-t-20\" fxLayout=\"column\" [formGroup]=\"transactionsReportForm\" (ngSubmit)=\"generate()\">\r\n\r\n  <div fxLayout=\"row\" fxLayoutGap=\"3%\" fxLayoutAlign=\"center\">\r\n\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>From Date</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"fromDatePicker\" required formControlName=\"fromDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"fromDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #fromDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        From date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>To Date</mat-label>\r\n      <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"toDatePicker\" required formControlName=\"toDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"toDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #toDatePicker></mat-datepicker>\r\n      <mat-error>\r\n        To date is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </div>\r\n\r\n  <div class=\"generate-button\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"5%\">\r\n    <button type=\"button\" mat-raised-button [routerLink]=\"['../']\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!transactionsReportForm.valid\">\r\n    <fa-icon icon=\"cogs\"></fa-icon>&nbsp;&nbsp;Generate Report &nbsp;</button>\r\n  </div>\r\n\r\n</form>\r\n\r\n<iframe *ngIf=\"!hideOutput\" [src]=\"pentahoUrl\" frameborder=\"0\" width=100% height=\"750px;\"></iframe>\r\n","/** Angular Imports */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * View Transaction Reciept Component\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-reciept',\r\n  templateUrl: './view-reciept.component.html',\r\n  styleUrls: ['./view-reciept.component.scss']\r\n})\r\nexport class ViewRecieptComponent implements OnInit {\r\n\r\n  /** trusted resource url for pentaho output */\r\n  pentahoUrl: any;\r\n  /** Transaction Reciept Data */\r\n  transactionRecieptData: any;\r\n\r\n  /**\r\n   * Fetches transaction reciept `resolve`\r\n   * @param {DomSanitizer} sanitizer DOM Sanitizer\r\n   * @param {ActivatedRoute} route Activated Route\r\n   */\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private route: ActivatedRoute) {\r\n    this.route.data.subscribe((data: { loansTransactionReciept: any }) => {\r\n      this.transactionRecieptData = data.loansTransactionReciept;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const contentType = this.transactionRecieptData.headers.get('Content-Type');\r\n    const file = new Blob([this.transactionRecieptData.body], {type: contentType});\r\n    const filecontent = URL.createObjectURL(file);\r\n    this.pentahoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(filecontent);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"container\">\r\n\r\n  <div class=\"back-button\">\r\n    <button type=\"button\" color=\"primary\" mat-raised-button [routerLink]=\"['../../../general']\">\r\n      <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;&nbsp;Back</button>\r\n  </div>\r\n\r\n  <iframe [src]=\"pentahoUrl\" frameborder=\"0\" width=100% height=\"600px;\"></iframe>\r\n\r\n</mat-card>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { ConfirmationDialogComponent } from 'app/shared/confirmation-dialog/confirmation-dialog.component';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\n\r\n/**\r\n * View Transaction Component.\r\n * TODO: Add support for account transfers.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-transaction',\r\n  templateUrl: './view-transaction.component.html',\r\n  styleUrls: ['./view-transaction.component.scss']\r\n})\r\nexport class ViewTransactionComponent {\r\n\r\n  /** Transaction data. */\r\n  transactionData: any;\r\n\r\n  /**\r\n   * Retrieves the Transaction data from `resolve`.\r\n   * @param {LoansService} loansService Loans Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private loansService: LoansService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { loansAccountTransaction: any }) => {\r\n      this.transactionData = data.loansAccountTransaction;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the loans transaction\r\n   */\r\n  undoTransaction() {\r\n    const accountId = this.route.parent.parent.parent.snapshot.params['loanId'];\r\n    const undoTransactionAccountDialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { heading: 'Undo Transaction', dialogContext: `Are you sure you want undo the transaction ${this.transactionData.id}` }\r\n    });\r\n    undoTransactionAccountDialogRef.afterClosed().subscribe((response: { confirm: any }) => {\r\n      if (response.confirm) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const data = {\r\n          transactionDate: this.datePipe.transform(this.transactionData.date && new Date(this.transactionData.date), dateFormat),\r\n          transactionAmount: 0,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.loansService.executeLoansAccountTransactionsCommand(accountId, 'undo', data, this.transactionData.id).subscribe(() => {\r\n          this.router.navigate(['../'], { relativeTo: this.route });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div fxLayoutAlign=\"end\" class=\"container m-b-20 transaction-buttons\" fxLayoutGap=\"2%\"\r\n  *ngIf=\"!(transactionData.type.contra)\">\r\n  <span *mifosxHasPermission=\"'ADJUST_LOAN'\">\r\n    <button mat-raised-button color=\"primary\" [routerLink]=\"'edit'\">\r\n      <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;Edit\r\n    </button>\r\n  </span>\r\n  <button mat-raised-button color=\"warn\" *mifosxHasPermission=\"'ADJUST_LOAN'\" (click)=\"undoTransaction()\">\r\n    <fa-icon icon=\"undo\"></fa-icon>&nbsp;&nbsp;Undo\r\n  </button>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Id\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.id }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.type.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Transaction Date\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.date | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.currency.name }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Amount\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ transactionData.amount }}\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"transactionData.paymentDetailData\">\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Payment Type\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.paymentType\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.paymentType.name }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Account No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.accountNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.accountNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Cheque Number\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.checkNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.checkNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Routing Code\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.routingCode\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.routingCode }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Receipt No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.receiptNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.receiptNumber }}\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\" class=\"mat-body-strong\">\r\n            Bank No.\r\n          </div>\r\n\r\n          <div *ngIf=\"transactionData.paymentDetailData.bankNumber\" fxFlex=\"50%\">\r\n            {{ transactionData.paymentDetailData.bankNumber }}\r\n          </div>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/** Custom Services */\r\nimport { LoansService } from 'app/loans/loans.service';\r\nimport { SettingsService } from 'app/settings/settings.service';\r\n\r\n/** Custom Dialogs */\r\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\r\nimport { ConfirmationDialogComponent } from 'app/shared/confirmation-dialog/confirmation-dialog.component';\r\n\r\n/** Custom Models */\r\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\r\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\r\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\r\n\r\n/**\r\n * View Charge Component.\r\n */\r\n@Component({\r\n  selector: 'mifosx-view-charge',\r\n  templateUrl: './view-charge.component.html',\r\n  styleUrls: ['./view-charge.component.scss']\r\n})\r\nexport class ViewChargeComponent {\r\n\r\n  /** Charge data. */\r\n  chargeData: any;\r\n  /** Loans Account Data */\r\n  loansAccountData: any;\r\n\r\n  /**\r\n   * Retrieves the Charge data from `resolve`.\r\n   * @param {LoansService} loansService Loans Service\r\n   * @param {ActivatedRoute} route Activated Route.\r\n   * @param {Router} router Router for navigation.\r\n   * @param {MatDialog} dialog Dialog reference.\r\n   * @param {DatePipe} datePipe DatePipe.\r\n   * @param {SettingsService} settingsService Settings Service\r\n   */\r\n  constructor(private loansService: LoansService,\r\n              private route: ActivatedRoute,\r\n              private datePipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private settingsService: SettingsService) {\r\n    this.route.data.subscribe((data: { loansAccountCharge: any, loanDetailsData: any }) => {\r\n      this.chargeData = data.loansAccountCharge;\r\n      this.loansAccountData = data.loanDetailsData;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Pays the charge.\r\n   */\r\n  payCharge() {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: '',\r\n        type: 'number',\r\n        required: true\r\n      }),\r\n      new DatepickerBase({\r\n        controlName: 'dueDate',\r\n        label: 'Payment Date',\r\n        value: '',\r\n        type: 'date',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: 'Pay Charge',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const payChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    payChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dueDate: this.datePipe.transform(response.data.value.dueDate, dateFormat),\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.loansService.executeLoansAccountChargesCommand(this.chargeData.accountId, 'paycharge', dataObject, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waive's the charge\r\n   */\r\n  waiveCharge() {\r\n    const waiveChargeDialogRef = this.dialog.open(ConfirmationDialogComponent, { data: { heading: 'Waive Charge', dialogContext: `Are you sure you want to waive charge with id: ${this.chargeData.id}`, type: 'Basic' } });\r\n    waiveChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.confirm) {\r\n        this.loansService.executeLoansAccountChargesCommand(this.chargeData.accountId, 'waive', {}, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edits the charge\r\n   */\r\n  editCharge() {\r\n    const formfields: FormfieldBase[] = [\r\n      new InputBase({\r\n        controlName: 'amount',\r\n        label: 'Amount',\r\n        value: this.chargeData.amount || this.chargeData.amountOrPercentage,\r\n        type: 'number',\r\n        required: true\r\n      })\r\n    ];\r\n    const data = {\r\n      title: 'Edit Charge',\r\n      layout: { addButtonText: 'Confirm' },\r\n      formfields: formfields\r\n    };\r\n    const editChargeDialogRef = this.dialog.open(FormDialogComponent, { data });\r\n    editChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.data) {\r\n        const locale = this.settingsService.language.code;\r\n        const dateFormat = this.settingsService.dateFormat;\r\n        const dataObject = {\r\n          ...response.data.value,\r\n          dateFormat,\r\n          locale\r\n        };\r\n        this.loansService.editLoansAccountCharge(this.loansAccountData.id, dataObject, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the charge\r\n   */\r\n  deleteCharge() {\r\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: { deleteContext: `charge id:${this.chargeData.id}` }\r\n    });\r\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\r\n      if (response.delete) {\r\n        this.loansService.deleteLoansAccountCharge(this.loansAccountData.id, this.chargeData.id)\r\n          .subscribe(() => {\r\n            this.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refetches data fot the component\r\n   * TODO: Replace by a custom reload component instead of hard-coded back-routing.\r\n   */\r\n  private reload() {\r\n    const clientId = this.loansAccountData.clientId;\r\n    const url: string = this.router.url.replace(`/${this.chargeData.id}`, '');\r\n    this.router.navigateByUrl(`/clients/${clientId}/loansaccounts`, {skipLocationChange: true})\r\n      .then(() => this.router.navigate([url]));\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"loansAccountData.status.value === 'Active' && chargeData.amountOutstanding !== 0\"\r\n  fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" class=\"container m-b-20\">\r\n    <button mat-raised-button color=\"accent\" *mifosxHasPermission=\"'PAY_SAVINGSACCOUNTCHARGE'\" (click)=\"payCharge()\">\r\n      <fa-icon icon=\"dollar-sign\"></fa-icon>&nbsp;&nbsp;\r\n      Pay\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" *mifosxHasPermission=\"'WAIVE_SAVINGSACCOUNTCHARGE'\" (click)=\"waiveCharge()\">\r\n      <fa-icon icon=\"flag\"></fa-icon>&nbsp;&nbsp;\r\n      Waive\r\n    </button>\r\n</div>\r\n\r\n<div *ngIf=\"loansAccountData.status.value === 'Submitted and pending approval'\"\r\n  fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" class=\"container m-b-20\">\r\n    <button mat-raised-button color=\"primary\" *mifosxHasPermission=\"'UPDATE_SAVINGSACCOUNTCHARGE'\" (click)=\"editCharge()\">\r\n      <fa-icon icon=\"edit\"></fa-icon>&nbsp;&nbsp;\r\n      Edit\r\n    </button>\r\n    <button mat-raised-button color=\"warn\" *mifosxHasPermission=\"'DELETE_SAVINGSACCOUNTCHARGE'\" (click)=\"deleteCharge()\">\r\n      <fa-icon icon=\"trash\"></fa-icon>&nbsp;&nbsp;\r\n      Delete\r\n    </button>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\r\n  <mat-card>\r\n\r\n    <mat-card-content>\r\n\r\n      <div fxLayout=\"row wrap\" class=\"content\">\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Name\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.name }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Charge Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.penalty ? 'Penalty' : 'Fees' }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Currency\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.currency.displayLabel }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Payment due at\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.chargeTimeType.value }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Payment due as of\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.dueDate | date }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Calculation Type\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.chargeCalculationType.value }}\r\n        </div>\r\n        \r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Due\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amount }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Paid\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountPaid }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Waived\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountWaived }}\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"mat-body-strong\">\r\n          Outstanding\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\">\r\n          {{ chargeData.amountOutstanding }}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n\r\n  </mat-card>\r\n\r\n</div>\r\n","/** Angular Imports */\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DirectivesModule } from '../directives/directives.module';\r\n\r\n/** Custom Modules */\r\nimport { LoansRoutingModule } from './loans-routing.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\n\r\n/** Custom Components */\r\nimport { AddLoanChargeComponent } from './loans-view/loan-account-actions/add-loan-charge/add-loan-charge.component';\r\nimport { LoansViewComponent } from './loans-view/loans-view.component';\r\nimport { GeneralTabComponent } from './loans-view/general-tab/general-tab.component';\r\nimport { AccountDetailsComponent } from './loans-view/account-details/account-details.component';\r\nimport { NotesTabComponent } from './loans-view/notes-tab/notes-tab.component';\r\nimport { ChargesTabComponent } from './loans-view/charges-tab/charges-tab.component';\r\nimport { OverdueChargesTabComponent } from './loans-view/overdue-charges-tab/overdue-charges-tab.component';\r\nimport { OriginalScheduleTabComponent } from './loans-view/original-schedule-tab/original-schedule-tab.component';\r\nimport { RepaymentScheduleTabComponent } from './loans-view/repayment-schedule-tab/repayment-schedule-tab.component';\r\nimport { LoanAccountActionsComponent } from './loans-view/loan-account-actions/loan-account-actions.component';\r\nimport { LoansAccountCloseComponent } from './loans-view/loan-account-actions/loans-account-close/loans-account-close.component';\r\nimport { TransactionsTabComponent } from './loans-view/transactions-tab/transactions-tab.component';\r\nimport { DatatableTabComponent } from './loans-view/datatable-tab/datatable-tab.component';\r\nimport { MultiRowComponent } from './loans-view/datatable-tab/multi-row/multi-row.component';\r\nimport { SingleRowComponent } from './loans-view/datatable-tab/single-row/single-row.component';\r\nimport { UndoApprovalComponent } from './loans-view/loan-account-actions/undo-approval/undo-approval.component';\r\nimport { AssignLoanOfficerComponent } from './loans-view/loan-account-actions/assign-loan-officer/assign-loan-officer.component';\r\nimport { ForeclosureComponent } from './loans-view/loan-account-actions/foreclosure/foreclosure.component';\r\nimport { PrepayLoanComponent } from './loans-view/loan-account-actions/prepay-loan/prepay-loan.component';\r\nimport { MakeRepaymentComponent } from './loans-view/loan-account-actions/make-repayment/make-repayment.component';\r\nimport { WaiveInterestComponent } from './loans-view/loan-account-actions/waive-interest/waive-interest.component';\r\nimport { FloatingInterestRatesComponent } from './loans-view/floating-interest-rates/floating-interest-rates.component';\r\nimport { WriteOffPageComponent } from './loans-view/loan-account-actions/write-off-page/write-off-page.component';\r\nimport { LoanTrancheDetailsComponent } from './loans-view/loan-tranche-details/loan-tranche-details.component';\r\nimport { CloseAsRescheduledComponent } from './loans-view/loan-account-actions/close-as-rescheduled/close-as-rescheduled.component';\r\nimport { LoanRescheduleComponent } from './loans-view/loan-account-actions/loan-reschedule/loan-reschedule.component';\r\nimport { LoanCollateralTabComponent } from './loans-view/loan-collateral-tab/loan-collateral-tab.component';\r\nimport { CreateLoansAccountComponent } from './create-loans-account/create-loans-account.component';\r\nimport { LoansAccountDetailsStepComponent } from './loans-account-stepper/loans-account-details-step/loans-account-details-step.component';\r\nimport { LoansAccountTermsStepComponent } from './loans-account-stepper/loans-account-terms-step/loans-account-terms-step.component';\r\nimport { LoansAccountChargesStepComponent } from './loans-account-stepper/loans-account-charges-step/loans-account-charges-step.component';\r\nimport { LoansAccountPreviewStepComponent } from './loans-account-stepper/loans-account-preview-step/loans-account-preview-step.component';\r\nimport { RecoveryRepaymentComponent } from './loans-view/loan-account-actions/recovery-repayment/recovery-repayment.component';\r\nimport { ViewGuarantorsComponent } from './loans-view/loan-account-actions/view-guarantors/view-guarantors.component';\r\nimport { CreateGuarantorComponent } from './loans-view/loan-account-actions/create-guarantor/create-guarantor.component';\r\nimport { DisburseLoanAccountComponent } from './loans-view/loan-account-actions/disburse-loan-account/disburse-loan-account.component';\r\nimport { DisburseComponent } from './loans-view/loan-account-actions/disburse/disburse.component';\r\nimport { RejectLoanComponent } from './loans-view/loan-account-actions/reject-loan/reject-loan.component';\r\nimport { WithdrawnByClientComponent } from './loans-view/loan-account-actions/withdrawn-by-client/withdrawn-by-client.component';\r\nimport { UndoDisbursalComponent } from './loans-view/loan-account-actions/undo-disbursal/undo-disbursal.component';\r\nimport { AddCollateralComponent } from './loans-view/loan-account-actions/add-collateral/add-collateral.component';\r\nimport { LoanDocumentsTabComponent } from './loans-view/loan-documents-tab/loan-documents-tab.component';\r\nimport { ViewChargeComponent } from './loans-view/view-charge/view-charge.component';\r\nimport { StandingInstructionsTabComponent } from './loans-view/standing-instructions-tab/standing-instructions-tab.component';\r\nimport { EditLoansAccountComponent } from './edit-loans-account/edit-loans-account.component';\r\nimport { LoanScreenReportsComponent } from './loans-view/loan-account-actions/loan-screen-reports/loan-screen-reports.component';\r\nimport { ApproveLoanComponent } from './loans-view/loan-account-actions/approve-loan/approve-loan.component';\r\nimport { ViewRecieptComponent } from './loans-view/transactions/view-reciept/view-reciept.component';\r\nimport { ExportTransactionsComponent } from './loans-view/transactions/export-transactions/export-transactions.component';\r\nimport { ViewTransactionComponent } from './loans-view/transactions/view-transaction/view-transaction.component';\r\nimport { EditTransactionComponent } from './loans-view/transactions/edit-transaction/edit-transaction.component';\r\n\r\n/** Dialog Components */\r\nimport { LoansAccountViewGuarantorDetailsDialogComponent } from './custom-dialog/loans-account-view-guarantor-details-dialog/loans-account-view-guarantor-details-dialog.component';\r\nimport { LoansAccountAddCollateralDialogComponent } from './custom-dialog/loans-account-add-collateral-dialog/loans-account-add-collateral-dialog.component';\r\nimport { LoanAccountLoadDocumentsDialogComponent } from './custom-dialog/loan-account-load-documents-dialog/loan-account-load-documents-dialog.component';\r\n\r\n/**\r\n * Loans Module\r\n *\r\n * All components related to loan functions should be declared here.\r\n */\r\n@NgModule({\r\n  imports: [SharedModule, LoansRoutingModule, DirectivesModule, PipesModule],\r\n  declarations: [\r\n    AddLoanChargeComponent,\r\n    LoansViewComponent,\r\n    GeneralTabComponent,\r\n    AccountDetailsComponent,\r\n    NotesTabComponent,\r\n    ChargesTabComponent,\r\n    OverdueChargesTabComponent,\r\n    OriginalScheduleTabComponent,\r\n    RepaymentScheduleTabComponent,\r\n    LoanAccountActionsComponent,\r\n    LoansAccountCloseComponent,\r\n    TransactionsTabComponent,\r\n    DatatableTabComponent,\r\n    MultiRowComponent,\r\n    SingleRowComponent,\r\n    UndoApprovalComponent,\r\n    AssignLoanOfficerComponent,\r\n    ForeclosureComponent,\r\n    PrepayLoanComponent,\r\n    MakeRepaymentComponent,\r\n    WaiveInterestComponent,\r\n    FloatingInterestRatesComponent,\r\n    WriteOffPageComponent,\r\n    LoanTrancheDetailsComponent,\r\n    CloseAsRescheduledComponent,\r\n    LoanRescheduleComponent,\r\n    LoanCollateralTabComponent,\r\n    CreateLoansAccountComponent,\r\n    LoansAccountDetailsStepComponent,\r\n    LoansAccountTermsStepComponent,\r\n    LoansAccountChargesStepComponent,\r\n    LoansAccountPreviewStepComponent,\r\n    LoansAccountAddCollateralDialogComponent,\r\n    RecoveryRepaymentComponent,\r\n    ViewGuarantorsComponent,\r\n    CreateGuarantorComponent,\r\n    LoansAccountViewGuarantorDetailsDialogComponent,\r\n    DisburseLoanAccountComponent,\r\n    RejectLoanComponent,\r\n    DisburseComponent,\r\n    WithdrawnByClientComponent,\r\n    AddCollateralComponent,\r\n    UndoDisbursalComponent,\r\n    LoanDocumentsTabComponent,\r\n    LoanAccountLoadDocumentsDialogComponent,\r\n    StandingInstructionsTabComponent,\r\n    EditLoansAccountComponent,\r\n    LoanScreenReportsComponent,\r\n    ApproveLoanComponent,\r\n    ViewChargeComponent,\r\n    ViewTransactionComponent,\r\n    EditTransactionComponent,\r\n    ViewRecieptComponent,\r\n    ExportTransactionsComponent\r\n  ],\r\n  providers: [DatePipe],\r\n})\r\nexport class LoansModule {}\r\n","/** Angular Imports */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n/** rxjs Imports */\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * Loans service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoansService {\r\n  constructor(private http: HttpClient) { }\r\n  /**\r\n   * @param {string} loanId loanId of the loan.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoanChargeTemplateResource(loanId: string): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}/charges/template`);\r\n  }\r\n\r\n  getLoanActionTemplate(loanId: string, command: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.get(`/loans/${loanId}/transactions/template`, { params: httpParams });\r\n  }\r\n\r\n  getLoanAccountResource(loanId: string, associations: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', associations);\r\n    return this.http.get(`/loans/${loanId}`, { params: httpParams });\r\n  }\r\n\r\n  getGuarantorTemplate(loanId: string): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}/guarantors/template`);\r\n  }\r\n\r\n  createNewGuarantor(loanId: string, data: any): Observable<any> {\r\n    return this.http.post(`/loans/${loanId}/guarantors`, data);\r\n  }\r\n\r\n  deleteGuarantor(loanId: any, guarantorId: any): Observable<any> {\r\n    return this.http.delete(`/loans/${loanId}/guarantors/${guarantorId}`);\r\n  }\r\n\r\n  deleteLoanAccount(loanId: any): Observable<any> {\r\n    return this.http.delete(`/loans/${loanId}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the loan template data with specific condition\r\n   * @param loanId Loan Id\r\n   */\r\n  getLoanTemplate(loanId: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n                      .set('fields', 'id,loanOfficerId,loanOfficerOptions')\r\n                      .set('staffInSelectedOfficeOnly', 'true')\r\n                      .set('template', 'true');\r\n    return this.http.get(`/loans/${loanId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {any} loanCharge to apply on a Loan Account.\r\n   * @returns {Observable<any>}\r\n   */\r\n  createLoanCharge(loanId: string, resourceType: string, loanCharge: any): Observable<any> {\r\n    return this.http.post(`/loans/${loanId}/${resourceType}`, loanCharge);\r\n  }\r\n\r\n  /**\r\n   * Get Loan Account Details\r\n   * @param loanId Loan Id\r\n   */\r\n  getLoanAccountDetails(loanId: string): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}`);\r\n  }\r\n\r\n  /**\r\n   * Get collateral template.\r\n   * @param {string} loanId Loan Id.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoanCollateralTemplate(loanId: string): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}/collaterals/template`);\r\n  }\r\n\r\n  /**\r\n   * Create Loan Collateral.\r\n   * @param {string} loanId Loan Id.\r\n   * @param {any} collateralData Collateral Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  createLoanCollateral(loanId: string, collateralData: any): Observable<any> {\r\n    return this.http.post(`/loans/${loanId}/collaterals`, collateralData);\r\n  }\r\n\r\n  /**\r\n   * Get Loans details with httpParams\r\n   * @param loanId Loan ID\r\n   */\r\n  getLoanAccountAssociationDetails(loanId: string) {\r\n    const httpParams = new HttpParams()\r\n      .set('associations', 'all')\r\n      .set('exclude', 'guarantors,futureSchedule');\r\n    return this.http.get(`/loans/${loanId}`, {params: httpParams});\r\n  }\r\n\r\n  getApproveAssociationsDetails(loanId: any) {\r\n    const httpParams = new HttpParams()\r\n      .set('associations', 'multiDisburseDetails');\r\n    return this.http.get(`/loans/${loanId}`, { params: httpParams });\r\n  }\r\n  /**\r\n   * @param loanId Loan Id\r\n   * @returns The notes for particular loan\r\n   */\r\n  getLoanNotes(loanId: string): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}/notes`);\r\n  }\r\n\r\n  /**\r\n   * Adds a note to the particular Loan Id\r\n   * @param loanId Loan ID\r\n   * @param noteData Note Data to be added\r\n   * @returns {Observable<any>}\r\n   */\r\n  createLoanNote(loanId: string, noteData: any): Observable<any> {\r\n    return this.http.post(`/loans/${loanId}/notes`, noteData);\r\n  }\r\n\r\n  /**\r\n   * Edits the Loan Note\r\n   * @param loanId Loan ID\r\n   * @param noteId Note ID\r\n   * @param noteData Note Data\r\n   */\r\n  editLoanNote(loanId: string, noteId: string, noteData: any) {\r\n    return this.http.put(`/loans/${loanId}/notes/${noteId}`, noteData);\r\n  }\r\n\r\n  /**\r\n   * Deletes the particular Note\r\n   * @param loanId Loan ID\r\n   * @param noteId Note ID\r\n   */\r\n  deleteLoanNote(loanId: string, noteId: string) {\r\n    return this.http.delete(`/loans/${loanId}/notes/${noteId}`);\r\n  }\r\n\r\n  /**\r\n   * Used For: Close Action, Prepay Loan Action\r\n   * Returns the response of the action\r\n   * @param loanId Loan Id\r\n   * @param data Data\r\n   * @param command Command\r\n   */\r\n  submitLoanActionButton(loanId: string, data: any, command: any) {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/loans/${loanId}/transactions`, data, {params: httpParams});\r\n  }\r\n\r\n  getLoanScreenReportsData(): Observable<any> {\r\n    const httpParams = new HttpParams().set('entityId', '1')\r\n                                       .set('typeId', '0');\r\n    return this.http.get(`/templates`, {params: httpParams});\r\n  }\r\n\r\n  /**\r\n   * Get Loan Datatables\r\n   */\r\n  getLoanDataTables() {\r\n    const httpParams = new HttpParams().set('apptable', 'm_loan');\r\n    return this.http.get(`/datatables`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Get Loan Datatable\r\n   * @param loanId Loan ID\r\n   * @param datatableName Datatable Name\r\n   */\r\n  getLoanDatatable(loanId: string, datatableName: string) {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.get(`/datatables/${datatableName}/${loanId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param loanId Loan Id of loan to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @param data Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  addLoanDatatableEntry(loanId: string, datatableName: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.post(`/datatables/${datatableName}/${loanId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param loanId Loan Id of loan to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @param data Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  editLoanDatatableEntry(loanId: string, datatableName: string, data: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.put(`/datatables/${datatableName}/${loanId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param loanId Loan Id of loan to get add datatable entry for.\r\n   * @param datatableName Data Table name.\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteDatatableContent(loanId: string, datatableName: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\r\n    return this.http.delete(`/datatables/${datatableName}/${loanId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} loanId Loan Id.\r\n   * @param {any} data Data.\r\n   * @returns {Observable<any>}\r\n   */\r\n  loanActionButtons(loanId: any, command: any, data?: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/loans/${loanId}`, data, {params: httpParams});\r\n  }\r\n\r\n  /**\r\n   * @param {string|number} loanId Loan Id.\r\n   * @param {any} foreclosuredata ForeClosure Data\r\n   */\r\n  getForeclosureData(loanId: string|number, foreclosuredata: any) {\r\n    const httpParams = new HttpParams().set('command', foreclosuredata.command)\r\n                                       .set('dateFormat', foreclosuredata.dateFormat)\r\n                                       .set('locale', foreclosuredata.locale)\r\n                                       .set('transactionDate', foreclosuredata.transactionDate);\r\n    return this.http.get(`/loans/${loanId}/transactions/template`, {params: httpParams});\r\n\r\n  }\r\n\r\n  /**\r\n   * @param {string|number} loanId Loan Id\r\n   * @param {any} data Data\r\n   */\r\n  loanForclosureData(loanId: any, data: any) {\r\n    const httpParams = new HttpParams().set('command', 'foreclosure');\r\n    return this.http.post(`/loans/${loanId}/transactions`, data, {params: httpParams});\r\n  }\r\n\r\n  /**\r\n   * Returns the Reschedule Loans Template\r\n   */\r\n  rescheduleLoanTemplate() {\r\n    return this.http.get('/rescheduleloans/template');\r\n  }\r\n\r\n  /**\r\n   * Submits Reschedule Data\r\n   * @param {any} data Data\r\n   */\r\n  submitRescheduleData(data: any) {\r\n    const httpParams = new HttpParams().set('command', 'reschedule');\r\n    return this.http.post('/rescheduleloans', data, {params: httpParams});\r\n  }\r\n\r\n  /**\r\n   * Gets Loan Account Template\r\n   * @param {any} clientId Client ID\r\n   * @param {any} productId Product ID\r\n   */\r\n  getLoansAccountTemplateResource(clientId: any, productId?: any): Observable<any> {\r\n    let httpParams = new HttpParams().set('activeOnly', 'true')\r\n                                      .set('clientId', clientId)\r\n                                      .set('staffInSelectedOfficeOnly', 'true')\r\n                                      .set('templateType', 'individual');\r\n    httpParams = productId ? httpParams.set('productId', productId) : httpParams;\r\n    return this.http.get('/loans/template', { params: httpParams });\r\n  }\r\n\r\n  getLoansAccountAndTemplateResource(loanId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('associations', 'charges,collateral,meeting,multiDisburseDetails')\r\n                                       .set('staffInSelectedOfficeOnly', 'true')\r\n                                       .set('template', 'true');\r\n    return this.http.get(`/loans/${loanId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Get Loans Collateral Template\r\n   * @param {any} productId Product ID\r\n   */\r\n  getLoansCollateralTemplateResource(productId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('fields', 'id, loanCollateralOptions')\r\n                                  .set('productId', productId)\r\n                                  .set('templateType', 'collateral');\r\n    return this.http.get('/loans/template', { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * Creates Loans Account\r\n   * @param {any} loanAccount Loan Account\r\n   */\r\n  createLoansAccount(loanAccount: any): Observable<any> {\r\n    return this.http.post('/loans', loanAccount);\r\n  }\r\n\r\n  getLoanDocuments(loanId: any): Observable<any> {\r\n    return this.http.get(`/loans/${loanId}/documents`);\r\n  }\r\n\r\n  deleteLoanDocument(loanId: any, documentId: any): Observable<any> {\r\n    return this.http.delete(`/loans/${loanId}/documents/${documentId}`);\r\n  }\r\n\r\n  loadLoanDocument(loanId: any, data: any): Observable<any> {\r\n    return this.http.post(`/loans/${loanId}/documents`, data);\r\n  }\r\n\r\n  /**\r\n   * @param clientId Client Id\r\n   * @param clientName Client Name\r\n   * @param fromAccountId Account Id\r\n   * @param locale Locale\r\n   * @param dateFormat Date Format\r\n   * @returns {Observable<any>} Standing Instructions\r\n   */\r\n  getStandingInstructions(\r\n    clientId: string, clientName: string, fromAccountId: string,\r\n    locale: string, dateFormat: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('clientId', clientId)\r\n      .set('clientName', clientName)\r\n      .set('fromAccountId', fromAccountId)\r\n      .set('fromAccountType', '1')\r\n      .set('locale', locale)\r\n      .set('dateFormat', dateFormat)\r\n      .set('limit', '14')\r\n      .set('offset', '0');\r\n    return this.http.get(`/standinginstructions`, { params: httpParams });\r\n  }\r\n\r\n  updateLoansAccount(loanId: any, loanData: any): Observable<any> {\r\n    return this.http.put(`/loans/${loanId}`, loanData);\r\n  }\r\n\r\n  getTemplateData(templateId: any, loanId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('loanId', loanId);\r\n    return this.http.post(`/templates/${templateId}`, {}, { params: httpParams, responseType: 'text'});\r\n  }\r\n\r\n  /**\r\n   * Get Loan Charge Aproval template.\r\n   * @param {string} loanId Loan Id.\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoanApprovalTemplate(loanId: string): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('templateType', 'approval');\r\n    return this.http.get(`/loans/${loanId}/template`, { params: httpParams });\r\n  }\r\n\r\n  guarantorAccountResource(loanId: string, clientId: any): Observable<any> {\r\n    const httpParams = new HttpParams()\r\n      .set('clientId', clientId);\r\n    return this.http.get(`/loans/${loanId}/guarantors/accounts/template`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId loans account Id\r\n   * @param {string} chargeId loans charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoansAccountCharge(accountId: string, chargeId: string): Observable<any> {\r\n    return this.http.get(`/loans/${accountId}/charges/${chargeId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Loans Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeLoansAccountChargesCommand(accountId: string, command: string, data: any, chargeId: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    return this.http.post(`/loans/${accountId}/charges/${chargeId}`, data, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId  Loans Account Id\r\n   * @param {any} data Charge Data\r\n   * @param {any} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  editLoansAccountCharge(accountId: string, data: any, chargeId: any): Observable<any> {\r\n    return this.http.put(`/loans/${accountId}/charges/${chargeId}`, data);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId  Loans Account Id\r\n   * @param {any} chargeId Charge Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  deleteLoansAccountCharge(accountId: string, chargeId: any): Observable<any> {\r\n    return this.http.delete(`/loans/${accountId}/charges/${chargeId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Loans Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoansAccountTransaction(accountId: string, transactionId: string): Observable<any> {\r\n    return this.http.get(`/loans/${accountId}/transactions/${transactionId}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Loans Account Id\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  getLoansAccountTransactionTemplate(accountId: string, transactionId: string): Observable<any> {\r\n    const httpParams = new HttpParams().set('template', 'true');\r\n    return this.http.get(`/loans/${accountId}/transactions/${transactionId}`, { params: httpParams });\r\n  }\r\n\r\n  /**\r\n   * @param {string} accountId Loans Account Id\r\n   * @param {string} command Command\r\n   * @param {any} data Data\r\n   * @param {string} transactionId Transaction Id\r\n   * @returns {Observable<any>}\r\n   */\r\n  executeLoansAccountTransactionsCommand(accountId: string, command: string, data: any, transactionId?: any): Observable<any> {\r\n    const httpParams = new HttpParams().set('command', command);\r\n    if (transactionId) {\r\n      return this.http.post(`/loans/${accountId}/transactions/${transactionId}`, data, { params: httpParams });\r\n    }\r\n    return this.http.post(`/loans/${accountId}/transactions`, data, { params: httpParams });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}